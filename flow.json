[
    {
        "id": "407d2b774fe67647",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "63d876401a56f871",
        "type": "tab",
        "label": "Radio Info",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c8e1ef6f509cd75a",
        "type": "tab",
        "label": "OP Competition",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9ed270102b553c75",
        "type": "tab",
        "label": "Band Stats",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b59d8b7ca43e59ce",
        "type": "tab",
        "label": "Spectator Dashboard - Future",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "db5600520bb7f279",
        "type": "tab",
        "label": "Pi Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1c66bd27e16a3fec",
        "type": "tab",
        "label": "Database",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "204548a488401a1b",
        "type": "tab",
        "label": "Configuration & Resets",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bd8a446b999750f9",
        "type": "tab",
        "label": "RBN Mapping",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2eedd966294071cc",
        "type": "tab",
        "label": "Online Scoreboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3e52b5d54104d7f0",
        "type": "tab",
        "label": "Backup Restore Upgrade",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b73cc2bb5f424b69",
        "type": "tab",
        "label": "Toolbar",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3968f5792af364de",
        "type": "tab",
        "label": "Radiosport.live",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1acc5730a82cbfc7",
        "type": "tab",
        "label": "WAC Logger",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8a7fcbcd28d37f15",
        "type": "tab",
        "label": "Test_N3FJP",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c967abe5be484ee6",
        "type": "subflow",
        "name": "1Hr Rate Color",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 200,
                "wires": [
                    {
                        "id": "db6c3ead34896ed7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 160,
                "wires": [
                    {
                        "id": "3ebd50dc409f07c7",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1220,
                "y": 200,
                "wires": [
                    {
                        "id": "fd7ca0d193c43b4b",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1220,
                "y": 240,
                "wires": [
                    {
                        "id": "28159edd1453e0e9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7d3bb9d663bb9f7c",
        "type": "subflow",
        "name": "2Hr Rate Color",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 200,
                "wires": [
                    {
                        "id": "b01f668b580f9487"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 920,
                "y": 160,
                "wires": [
                    {
                        "id": "ec6b89c6f0f98386",
                        "port": 0
                    }
                ]
            },
            {
                "x": 920,
                "y": 200,
                "wires": [
                    {
                        "id": "b37e2740349a3ef5",
                        "port": 0
                    }
                ]
            },
            {
                "x": 920,
                "y": 240,
                "wires": [
                    {
                        "id": "99cf51f0604626bf",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "74c92a5f32f17459",
        "type": "subflow",
        "name": "Spots Rate",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "3fb3f1760ba82348"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 60,
                "wires": [
                    {
                        "id": "809e27880c7a6898",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1020,
                "y": 120,
                "wires": [
                    {
                        "id": "6bb4d0ed1ea29d84",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1020,
                "y": 180,
                "wires": [
                    {
                        "id": "a808ff72796c1b03",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "bedd4acdc0e27dab",
        "type": "subflow",
        "name": "DB Call Lookup",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 480,
                "wires": [
                    {
                        "id": "a5cb9c557a70448b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 4760,
                "y": 360,
                "wires": [
                    {
                        "id": "1c3ab9f47658b3eb",
                        "port": 0
                    },
                    {
                        "id": "1c8b4345f764571b",
                        "port": 0
                    },
                    {
                        "id": "25c39c91c41519af",
                        "port": 0
                    },
                    {
                        "id": "f5f512454cd1849d",
                        "port": 0
                    }
                ]
            },
            {
                "x": 4600,
                "y": 800,
                "wires": [
                    {
                        "id": "db552b47bb5f9064",
                        "port": 0
                    },
                    {
                        "id": "bc778edd341cbc84",
                        "port": 0
                    },
                    {
                        "id": "96275f869825c27d",
                        "port": 0
                    },
                    {
                        "id": "2cf32f5a31aed22a",
                        "port": 0
                    },
                    {
                        "id": "260ab9255da1050e",
                        "port": 0
                    },
                    {
                        "id": "82696bd88fd60c22",
                        "port": 0
                    },
                    {
                        "id": "5e19bf265b499836",
                        "port": 0
                    },
                    {
                        "id": "885ec7953d91b737",
                        "port": 0
                    },
                    {
                        "id": "588111625a4f2458",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "02235a52f1d247d6",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Contest Toolbar UI update - Scoreboard",
        "style": {
            "label": true
        },
        "nodes": [
            "bb1d9e5d2bf9fa26",
            "081d52fa1757bc4b",
            "b3a0694939efd742",
            "56319f879fcbb9df",
            "53a760479d2b2d01",
            "daf1cf979348d132",
            "53692007691b251a",
            "4f76379f46c13673",
            "dbcb9a738301da97",
            "ea4b0c4d43bbf2e8",
            "a8a10cc2.9d0ae"
        ],
        "x": 474,
        "y": 159
    },
    {
        "id": "52886121c9629e0b",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Contest Toolbar UI update - Dashboard",
        "style": {
            "label": true
        },
        "nodes": [
            "f87ba558851c95d3",
            "9816b47ccbaab892",
            "777a2ec108512a04",
            "c3bf6102f3b7edbe",
            "f0760a3ec8543b8b",
            "1afc1e4e8a6a39ac",
            "fb4aa4fd72787370",
            "d500857eefbcea4a",
            "a110c5259531418b",
            "af65ab5234804a9a",
            "66a43145427ca537"
        ],
        "x": 774,
        "y": 159
    },
    {
        "id": "bebfe5d7e4f0feb0",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Contest Toolbar UI update - Spectator Dashboard",
        "style": {
            "label": true
        },
        "nodes": [
            "5d10e57fd09e8a50",
            "5a833e6c4b2da14d",
            "3e456c894fdf82ba",
            "68b583c8ccfe257a",
            "a04be73c7b807236",
            "11a30b25462e5d2f",
            "431c69a2758e9d6f",
            "0c5b09ac8217c8e8",
            "72c0143cb2801842",
            "34d492ab50541fdc",
            "de48727be275102f"
        ],
        "x": 1034,
        "y": 159
    },
    {
        "id": "c6e09ffb3c5a1ce6",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Link In (Scoreboard / Config)",
        "style": {
            "label": true
        },
        "nodes": [
            "b96af53874b6fb61",
            "da1243301037944c",
            "6f2b2f32fe7c6e4d",
            "d1d267820faf09ff",
            "b41ce8230b517cb0",
            "8d2172a22f29a548",
            "469d9b45aa858755",
            "e35b27050e23f4fe",
            "58b4f87e7d17a9b2",
            "1c0e963122e30bc8",
            "cd6e0fce6f62b9c5",
            "52d0f0a78929438e"
        ],
        "x": 214,
        "y": 159
    },
    {
        "id": "0e3bf66f6ee6d572",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Clear Contest Names",
        "style": {
            "label": true
        },
        "nodes": [
            "48f46d5dd8960e55",
            "654b552f9e64203e"
        ],
        "x": 214,
        "y": 19
    },
    {
        "id": "b90980234a451f8d",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Update Toolbar on Ui Refresh",
        "style": {
            "label": true
        },
        "nodes": [
            "8b78fc923dbd5012",
            "3047a9ba16e10212"
        ],
        "x": 1194,
        "y": 39
    },
    {
        "id": "23eb39063da69706",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Contest Toolbar UI update - RBN Spots",
        "style": {
            "label": true
        },
        "nodes": [
            "844d8f7c2441d8b1",
            "b19b207ee67ddde5",
            "ef7a738f2ee8d5f4",
            "4ca5cb31f4b145f8",
            "5329c1a37c80ba7d",
            "d792aff5c8b37a15",
            "36ed085a21d6315d",
            "95613fb05341082e",
            "2100cfc9553c38ba",
            "7036aad4276a8131",
            "c2d7711a7d230637"
        ],
        "x": 1374,
        "y": 159
    },
    {
        "id": "022672368830e427",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Contest Toolbar UI update - Band Stats",
        "style": {
            "label": true
        },
        "nodes": [
            "7f2303018ff45ad8",
            "e95c82ba390544e6",
            "a189d5911e5a6829",
            "7073cd8d304f642e",
            "4c7d5d74d7f6d688",
            "c284f99e2bfdb952",
            "85db86a67be75656",
            "66a441672a2af592",
            "54fd1aa0f1e76bb0",
            "e6ae4df0ca620d74",
            "c4561e5c31134c5d"
        ],
        "x": 1654,
        "y": 159
    },
    {
        "id": "7a5512b5a3f6e8ba",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Lightning Blitzotung",
        "style": {
            "label": true
        },
        "nodes": [
            "6c3aabd78a8dbe6b",
            "2570533c0ddd961a",
            "e8923d3119f9de10",
            "bb38d5607155fdac",
            "d769911bfcaff494",
            "e733af43f8c28c46",
            "e0a0fa6ae9f41024",
            "64ce0bfa9e1942bb",
            "ee06b24b57cee89b",
            "1695ae9bcb4fd785",
            "b5b388156ec5eca9",
            "d34ab878fcdc07ae",
            "cb344aa1d31a6502",
            "c31ad36e83f990dd",
            "2d5edcaf1c0997bc",
            "393223b190ba95f3",
            "35549ac0e22e44ff",
            "40b13d784b111566",
            "e6fb0ef92036fc12",
            "3ba91bda918482b2",
            "2447aed577add90a",
            "33b22679735f2e3c",
            "53becfe3676d44bd",
            "49c54051341840e3"
        ],
        "x": 34,
        "y": 679
    },
    {
        "id": "28877ac600fea8b9",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Server Side Update",
        "style": {
            "label": true
        },
        "nodes": [
            "a5372819368f5d81",
            "6d2c61c8eafe791b",
            "dbc4fa6c4950549c",
            "0e5c59369f188c2d",
            "a6bf18e701de8cea",
            "a31fd08b865e287c",
            "522c164834b058f6",
            "94377682fd3db09a",
            "20a1b3e47e825d5b",
            "a4442b82396c4ff2",
            "41b71b195d25cc36",
            "324101084f63a83e"
        ],
        "x": 224,
        "y": 1019
    },
    {
        "id": "c6a5789101548ba9",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Toolbar",
        "style": {
            "label": true
        },
        "nodes": [
            "664777b6beccd2c1",
            "4e62658f095c2863"
        ],
        "x": 1394,
        "y": 1099
    },
    {
        "id": "18a3020b4a12ae60",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Contest Toolbar UI update - OP Competition",
        "style": {
            "label": true
        },
        "nodes": [
            "8d8c2c7254287149",
            "6622e7e7a8741c0e",
            "3bd9135654310792",
            "1ef1df6438a74955",
            "2dafd2c2dab98d98",
            "d0c78d62f35e3d16",
            "0b122154cd902313",
            "beebf164a6058fc0",
            "05db91002fb4d67a",
            "23d467e3525ec5a8",
            "89b2058720d8fb99"
        ],
        "x": 1954,
        "y": 159
    },
    {
        "id": "4f4b9f0c82968b60",
        "type": "group",
        "z": "407d2b774fe67647",
        "name": "Score UDP",
        "style": {
            "fill": "#c8e7a7",
            "label": true,
            "label-position": "ne",
            "color": "#000000"
        },
        "nodes": [
            "0178697fb442d801",
            "fb32d39142880f19",
            "d2cdb7808cce0e9c",
            "2cdd5ffb3ac01f73",
            "289442fe7c0d95f9",
            "9b7d271988034596",
            "31d7202b2b50131d",
            "ff83b125cd4af97b",
            "06ef39d063a5a0f6",
            "bcb9b861df7e6958",
            "1e6f9143a325a577",
            "aec65d796aed9cee",
            "97ed253958c48009",
            "aad501d4eeed3f6c",
            "622fed8ae8f6a5d2",
            "77a4afb43fb7bdbd",
            "a9c362fc3c6ac624",
            "7d8436d8a3a5422b",
            "49c503a250b35428",
            "3ba4521f148eac8c",
            "e2f41f09bb088749",
            "e21c45667c4cb46a",
            "a08bd99d57f55d64",
            "ba53f01105c0383d",
            "db019a0c1478765c",
            "91decfc57d48218c",
            "eecdc889bd3900f6",
            "03b3b4cadbdf9e34",
            "a7dc412af8237000",
            "8d406adaa39170fb",
            "3c4c7e4533b41d22"
        ],
        "x": 414,
        "y": 879
    },
    {
        "id": "81692a3cb68d6cde",
        "type": "group",
        "z": "407d2b774fe67647",
        "name": "Radio UDP",
        "style": {
            "fill": "#c8e7a7",
            "label": true,
            "label-position": "ne",
            "color": "#000000"
        },
        "nodes": [
            "4fdbbfe296a88bce",
            "f56678090927861d",
            "5d82a0a17d0f57ea",
            "bd61ab676c6f7232",
            "3d795eb91a1d2b3d",
            "d67c999eabb4aba0",
            "3e86130caa4f1f80",
            "6eccad64a2223ff8",
            "334aadb089f6f0c0",
            "15fa6dac50ec3359",
            "bb7fdde37dcf367e",
            "f6305d04b2aeb44c",
            "6351dc9d0c3ec453",
            "6176c210be856fa7",
            "94f44b7ea0e29d1d",
            "a9afc3cb2db49407"
        ],
        "x": 14,
        "y": 1485.5
    },
    {
        "id": "d48758cdf0c8991d",
        "type": "group",
        "z": "407d2b774fe67647",
        "name": "Dashboard Map, QSO Exchange & Timers",
        "style": {
            "label": true,
            "fill": "#ffdf7f",
            "color": "#000000"
        },
        "nodes": [
            "c9f5c786.410838",
            "6c3eca08.f081a4",
            "df39f838.a40908",
            "3f8df851.2a35e8",
            "9f9db1ca.0200a",
            "eaa8defdbb30a4cb",
            "c4ca101c43ab8cb0",
            "46edf21ad9fe8580",
            "7663a3961ad647b3",
            "6697e03dc0ecce50",
            "1c23e47818d36917",
            "78b62d696464ca78",
            "26d6dfc5398aed9a",
            "8150e2eee30748c6",
            "5a216be2bdc202b8",
            "d253cee5fb3ba4b9",
            "b77db70e05f8b1d9",
            "a0658e82121731a8",
            "774ff0257828e8ad",
            "611bebabf791b26b",
            "64a0de9783f751b5",
            "17f8857f30cdf7aa",
            "86194a7969acae11",
            "56dc3f83cf57a080",
            "fcf9482ddad8b592",
            "0ad5d91b01c01497",
            "cadea72441280e66",
            "13d29b4154be030c",
            "3617522441b640cb",
            "9b9d60245cebf80a",
            "e4e81a5987819415",
            "593016df038ddee5",
            "696566009ad9261d",
            "adb1747255633e97",
            "3d9090ccaadd42cb",
            "12de6739c2037829",
            "ce8f3cdfc915749d",
            "af6a11b52841ef4a",
            "cf1edc41b5adc8be",
            "4320ff577c7cb858",
            "825f9b7a2b7fc6e2",
            "8804affd65082b4f",
            "6c1de6ee7473fac9",
            "fdfd9133ae52097f",
            "b5a72874a2f95ce4"
        ],
        "x": 274,
        "y": 19
    },
    {
        "id": "f830dd821e0240f4",
        "type": "group",
        "z": "b73cc2bb5f424b69",
        "name": "Master CSS - Remove If Do Not Like",
        "style": {
            "label": true
        },
        "nodes": [
            "6e5f192ff0fd2d39",
            "aa0566f8a8d9dbfd",
            "925cebb6bacad025"
        ],
        "x": 914,
        "y": 999
    },
    {
        "id": "f01baabf4527b6e5",
        "type": "group",
        "z": "1c66bd27e16a3fec",
        "name": "Score UDP",
        "style": {
            "fill": "#c8e7a7",
            "label": true,
            "label-position": "ne",
            "color": "#000000"
        },
        "nodes": [
            "1e5d975d4f33a469",
            "7d228ea50d42e333",
            "95dee3dbb21d6492",
            "1af14f7f89b29f60",
            "589f1d4180adfc19",
            "63b9afc11deec0ca",
            "40f7b8d29f1a593a",
            "826117837339278a",
            "a8d691c04ea6cbf7",
            "4ae0a908ac9a4dce",
            "ec8cad684cf4500a",
            "812f9d1a536fe289",
            "740fa20ee427ed88",
            "71ba52668f48ab6c",
            "407e8deceb6ad9d3",
            "91e3a9b7825238b6",
            "677d263669792c2d",
            "8d88aedc41864cf8",
            "547cf705c08f3fee",
            "41f8c81cbde2390b",
            "90a21e8778a42633",
            "03b5ea45a14bec38",
            "76624f15bec4c509",
            "11439f8ac4e3b895",
            "9b5ffa967054d1a9",
            "f4935efee5594591",
            "aa50254808a938c8",
            "1edd5af6eed6044f",
            "0cadcaf22f887a0e",
            "21fe16ca5cbfc06b"
        ],
        "x": 134,
        "y": 39
    },
    {
        "id": "6c1673638929b26d",
        "type": "group",
        "z": "1c66bd27e16a3fec",
        "name": "Radio UDP Extension",
        "style": {
            "label": true,
            "fill": "#c8e7a7",
            "fill-opacity": "0.61",
            "label-position": "ne",
            "color": "#000000"
        },
        "nodes": [
            "93a6eb43a0cd1622",
            "130b2eeddfbf75b0",
            "3b9f0341530d56a7",
            "95f6f96670a6b08a",
            "9cfd21c0bd51285b",
            "fed8216c6cda245c",
            "91725949fc3edaf2",
            "a819ca8d3f060472",
            "7f90d48a29cf7912",
            "4f839ad8b80a0658",
            "c61ab508b6b82808",
            "81242aec4c4bf65a",
            "d1da622b197520ac",
            "d5b128cfd798ac47",
            "ded47173803bd33e",
            "de40d8ac2d9026c8",
            "ec4d056dcc3db216",
            "96690058796bd634",
            "71ef26e8c3355bec",
            "93963dc560fcab1e",
            "3e0f5f6001e77450",
            "5c60f3c47791458b"
        ],
        "x": 94,
        "y": 659
    },
    {
        "id": "26cf0678322d1bb6",
        "type": "group",
        "z": "407d2b774fe67647",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b829243f42385969",
            "ec43df8648bddaa2",
            "870d2ff5a5b268a5",
            "6d122d15af375ab6",
            "22fe07a2c13d18ff",
            "816d3f7e84dd1bf0",
            "577c577fed5bf005",
            "61fdced830d7a010",
            "fc6208525bfd2db6",
            "e616bcdb29792aa8",
            "002dded44b1b5ee6",
            "e7705b1d662e98c7",
            "a2c474948039215e",
            "ba28175bd864c273",
            "a806469711612724",
            "9ba2b748bca48ba8",
            "fae0041199166dbc",
            "1aa94adaa1790106",
            "35dd8fcbbd78da95",
            "5d54abefaa3f6011",
            "c700f03ea974bf65",
            "d3b97c2f3316c129",
            "afcc0fe55c3cb07e",
            "6897b580ee50b83f",
            "64ca2307721f7954",
            "be3cb3b9861c2e31",
            "251ae3f24ba6c178",
            "d1e531d474c42dde",
            "33a1fe7f6bd59c25",
            "bc62893a749a6116",
            "d13e3608177fffc1",
            "12b4fddb68795a01",
            "3fc8a4c3201d42cc",
            "168faf5992e055d7",
            "0664e8c97eaa69b8",
            "1eb0d9ba4d1bf8d6",
            "9757755f9abe81e5",
            "9cc043acda88da3f",
            "d53bdbd6ba3fdfed",
            "8186c56328392551",
            "0f2162dc3bfae19c",
            "f0dbae81ebaf286e",
            "9d0e444ab32a06f9",
            "8834c50bc7d9a366"
        ],
        "x": 2314,
        "y": 839
    },
    {
        "id": "b5a72874a2f95ce4",
        "type": "group",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Map",
        "style": {
            "fill": "#7fb7df",
            "label": true,
            "label-position": "ne",
            "color": "#000000",
            "fill-opacity": "0.94"
        },
        "nodes": [
            "b560bd86dc5c87f6",
            "1fef8af3224d3ace",
            "a6f01856669d3e50",
            "f2b91a5dc28385a9",
            "b0d18fa59cc49c12",
            "0d35873cadebf97f",
            "415b4ee138125e2e",
            "bc661ac4152269b3",
            "ae7413cce68dfffa"
        ],
        "x": 914,
        "y": 79
    },
    {
        "id": "94f44b7ea0e29d1d",
        "type": "group",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "Radio2",
        "style": {
            "fill": "#7fb7df",
            "label": true,
            "label-position": "ne",
            "color": "#000000"
        },
        "nodes": [
            "c28f1c9baeeba95d",
            "d87f990426df6b87",
            "68eee47c38859dda",
            "90474210b68e90b0",
            "214b730a1dfad6cb",
            "379a02b32eb2de49",
            "88be1b74fa6788be",
            "d6a02ccab960310f",
            "f9c9ed275443b030",
            "fb911af0905d8f5d",
            "a74a987615dd4bb9",
            "ccb12f5a5e87937a",
            "5c688773c88f9f41",
            "97aba946591c7289",
            "7aa65e21deb3bbf5",
            "8a9601bf0a7a7faa",
            "d37ea6046424b974",
            "89588cb6bf69a8d0",
            "d9503f18f29524db",
            "27f4e52f97117294"
        ],
        "x": 1074,
        "y": 1979
    },
    {
        "id": "a9afc3cb2db49407",
        "type": "group",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "Radio1",
        "style": {
            "fill": "#7fb7df",
            "label": true,
            "color": "#000000",
            "label-position": "ne"
        },
        "nodes": [
            "8de09b93172d4977",
            "06389f3eea5c1260",
            "e60f3cadbc4e78ff",
            "72403bb4391a1d55",
            "eb5d10e3d8e57f2d",
            "41776f0e7dfe6145",
            "9ac7455179b0e1d0",
            "644bc9391ec895bf",
            "144f676e5802f76c",
            "d0b1af6883fc61b1",
            "cab897702f8a6f57",
            "1497c72e88a8f6b1",
            "b946bc8caa8d1dfa",
            "323b33d53e2baade",
            "b9e129bdae4de517",
            "b1abd7f75fd32f6f",
            "5bbc72a4e604df32",
            "e4e19daf40493fb9",
            "3d1ebae60e058858",
            "572d2215a6ea16bb",
            "5a5a85080d107e92",
            "0baeb2e7ae556661"
        ],
        "x": 1014,
        "y": 1511.5
    },
    {
        "id": "b8ba38b3.abfb98",
        "type": "ui_group",
        "name": "Current QSO's",
        "tab": "200297fa.9ab198",
        "order": 2,
        "disp": true,
        "width": "26",
        "collapse": false,
        "className": "dashboard_current_qsos"
    },
    {
        "id": "ba8d90f0d4d46eb0",
        "type": "ui_group",
        "name": "Last QSO's",
        "tab": "200297fa.9ab198",
        "order": 1,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": "dashboard_last_qsos"
    },
    {
        "id": "54f43a06.56d7b4",
        "type": "sqlitedb",
        "db": "qsos",
        "mode": "RW"
    },
    {
        "id": "aeac5355e22fa2ee",
        "type": "ui_group",
        "name": "Contest Stats",
        "tab": "200297fa.9ab198",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": "dashboard_contest_stats"
    },
    {
        "id": "d5edca762660bedf",
        "type": "ui_group",
        "name": "Radio 1 Data",
        "tab": "200297fa.9ab198",
        "order": 8,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": "dashboard_radio_data"
    },
    {
        "id": "1fd9d5a5d988cd1e",
        "type": "ui_group",
        "name": "Radio 2 Data",
        "tab": "200297fa.9ab198",
        "order": 9,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": "dashboard_radio_data"
    },
    {
        "id": "200297fa.9ab198",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6bee760b7642c108",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#0035d5",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#0035d5",
                "baseFont": "Tahoma,Geneva,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#2259ff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0035d5",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Contest Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 33,
                "sy": 33,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6c1bd04fb9bfea48",
        "type": "ui_group",
        "name": "QSOs by Band",
        "tab": "200297fa.9ab198",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": "chart_title"
    },
    {
        "id": "c53924de5e016c59",
        "type": "ui_group",
        "name": "Total QSO Rate Chart - 1 Hr",
        "tab": "200297fa.9ab198",
        "order": 6,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": "chart_title"
    },
    {
        "id": "698e42d7f0c75db1",
        "type": "ui_tab",
        "name": "Radio Info",
        "icon": "mi-radio",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7fbb5e1689b11c96",
        "type": "ui_group",
        "name": "Radio 1",
        "tab": "698e42d7f0c75db1",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "radio_info"
    },
    {
        "id": "04f517e9db4307d1",
        "type": "ui_group",
        "name": "Radio 2",
        "tab": "698e42d7f0c75db1",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "radio_info"
    },
    {
        "id": "9851a548b3e9a744",
        "type": "ui_group",
        "name": "Radio 3",
        "tab": "698e42d7f0c75db1",
        "order": 3,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "radio_info"
    },
    {
        "id": "57f3a809cabd43f5",
        "type": "ui_group",
        "name": "Radio 4",
        "tab": "698e42d7f0c75db1",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "radio_info"
    },
    {
        "id": "e0604be1629095c1",
        "type": "ui_group",
        "name": "QSO Rate by Band - 1 Hr",
        "tab": "698e42d7f0c75db1",
        "order": 7,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "390d9212c8d39731",
        "type": "ui_group",
        "name": "QSO Rate by Band - 1 Hr",
        "tab": "200297fa.9ab198",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": "chart_title"
    },
    {
        "id": "d36058f98fbac69f",
        "type": "ui_tab",
        "name": "OP Competition",
        "icon": "mi-directions_run",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e42cdfb590735e00",
        "type": "ui_group",
        "name": "1st Place",
        "tab": "d36058f98fbac69f",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "op_compete"
    },
    {
        "id": "dea9d7ac.0cefc8",
        "type": "ui_group",
        "name": "Raspberry Pi Status & Control",
        "tab": "7f50838.c6d257c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8ca85278.65932",
        "type": "ui_group",
        "name": "Network Status",
        "tab": "7f50838.c6d257c",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false
    },
    {
        "id": "7f50838.c6d257c",
        "type": "ui_tab",
        "name": "Pi Status",
        "icon": "mi-computer",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "089f422fb01043ec",
        "type": "ui_group",
        "name": "Cluster without Dupes",
        "tab": "08eed6c3517c624e",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8bf40d033d555b71",
        "type": "ui_group",
        "name": "2nd Place",
        "tab": "d36058f98fbac69f",
        "order": 4,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "op_compete"
    },
    {
        "id": "4349237f79c6ee9d",
        "type": "ui_group",
        "name": "3rd Place",
        "tab": "d36058f98fbac69f",
        "order": 7,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "op_compete"
    },
    {
        "id": "de79e0318aecd9cc",
        "type": "ui_group",
        "name": "4th Place",
        "tab": "d36058f98fbac69f",
        "order": 9,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "op_compete"
    },
    {
        "id": "ec08fadc8d1d73bf",
        "type": "ui_group",
        "name": "5th Place",
        "tab": "d36058f98fbac69f",
        "order": 12,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "op_compete"
    },
    {
        "id": "3dad506044ed2f24",
        "type": "ui_group",
        "name": "6th Place",
        "tab": "d36058f98fbac69f",
        "order": 14,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "op_compete"
    },
    {
        "id": "fbe68cb50c200a91",
        "type": "ui_group",
        "name": "7th Place",
        "tab": "d36058f98fbac69f",
        "order": 17,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "op_compete"
    },
    {
        "id": "84c8e4f24085b4d7",
        "type": "ui_group",
        "name": "8th Place",
        "tab": "d36058f98fbac69f",
        "order": 19,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "op_compete"
    },
    {
        "id": "4fe32a048d3e8016",
        "type": "ui_group",
        "name": "1st Place Trending",
        "tab": "d36058f98fbac69f",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": "op_compete_trending"
    },
    {
        "id": "ecc5f14b5a3d677e",
        "type": "ui_tab",
        "name": "Band Stats",
        "icon": "mi-query_stats",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b597a92689c997ee",
        "type": "ui_group",
        "name": "160M",
        "tab": "ecc5f14b5a3d677e",
        "order": 9,
        "disp": true,
        "width": "28",
        "collapse": false,
        "className": "band_stats"
    },
    {
        "id": "ba5556bd38a9b0dc",
        "type": "ui_group",
        "name": "80M",
        "tab": "ecc5f14b5a3d677e",
        "order": 2,
        "disp": true,
        "width": "28",
        "collapse": false,
        "className": "band_stats"
    },
    {
        "id": "33f39234d06022c4",
        "type": "ui_group",
        "name": "40M",
        "tab": "ecc5f14b5a3d677e",
        "order": 5,
        "disp": true,
        "width": "28",
        "collapse": false,
        "className": "band_stats"
    },
    {
        "id": "16293e8283ac8032",
        "type": "ui_group",
        "name": "20M",
        "tab": "ecc5f14b5a3d677e",
        "order": 6,
        "disp": true,
        "width": "28",
        "collapse": false,
        "className": "band_stats"
    },
    {
        "id": "b058bc1a30b324a8",
        "type": "ui_group",
        "name": "15M",
        "tab": "ecc5f14b5a3d677e",
        "order": 7,
        "disp": true,
        "width": "28",
        "collapse": false,
        "className": "band_stats"
    },
    {
        "id": "7f3af38546f365bf",
        "type": "ui_group",
        "name": "10M",
        "tab": "ecc5f14b5a3d677e",
        "order": 8,
        "disp": true,
        "width": "28",
        "collapse": false,
        "className": "band_stats"
    },
    {
        "id": "cf0fd8137d27fde9",
        "type": "ui_group",
        "name": "2nd Place Trending",
        "tab": "d36058f98fbac69f",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": "op_compete_trending"
    },
    {
        "id": "a54565f26ef859a6",
        "type": "ui_group",
        "name": "3rd Place Trending",
        "tab": "d36058f98fbac69f",
        "order": 8,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": "op_compete_trending"
    },
    {
        "id": "53db3fa281c44012",
        "type": "ui_group",
        "name": "4th Place Trending",
        "tab": "d36058f98fbac69f",
        "order": 10,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": "op_compete_trending"
    },
    {
        "id": "5ea99b2ffafa1455",
        "type": "ui_group",
        "name": "5th Place Trending",
        "tab": "d36058f98fbac69f",
        "order": 13,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": "op_compete_trending"
    },
    {
        "id": "2083f5d4aa25f442",
        "type": "ui_group",
        "name": "6th Place Trending",
        "tab": "d36058f98fbac69f",
        "order": 15,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": "op_compete_trending"
    },
    {
        "id": "1f8381235f15779f",
        "type": "ui_group",
        "name": "7th Place Trending",
        "tab": "d36058f98fbac69f",
        "order": 18,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": "op_compete_trending"
    },
    {
        "id": "49e8559f5916fe38",
        "type": "ui_group",
        "name": "8th Place Trending",
        "tab": "d36058f98fbac69f",
        "order": 20,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": "op_compete_trending"
    },
    {
        "id": "5b0b0f97dd6d2e04",
        "type": "ui_group",
        "name": "QSO Rate by Band - 2 Hr",
        "tab": "698e42d7f0c75db1",
        "order": 8,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "29db383704af4b09",
        "type": "ui_group",
        "name": "OP QSO Rate by Band - 1 Hr",
        "tab": "ecc5f14b5a3d677e",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4244ba9d238d6a13",
        "type": "ui_group",
        "name": "QSO Rate by Band Chart",
        "tab": "ecc5f14b5a3d677e",
        "order": 1,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4c7c4383a5f4d36f",
        "type": "ui_group",
        "name": "Solar Data",
        "tab": "7f50838.c6d257c",
        "order": 3,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2da8694540143f9a",
        "type": "ui_group",
        "name": "Operators 1Hr Q's/Hr",
        "tab": "d36058f98fbac69f",
        "order": 3,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ba191f5b911d96f8",
        "type": "ui_group",
        "name": "Operators 2Hr Q's/Hr",
        "tab": "d36058f98fbac69f",
        "order": 16,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6c301c05c13a5e40",
        "type": "ui_group",
        "name": "Operators Score",
        "tab": "d36058f98fbac69f",
        "order": 11,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1d57c18be03cdf58",
        "type": "ui_group",
        "name": "Operators QSOs",
        "tab": "d36058f98fbac69f",
        "order": 6,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "08eed6c3517c624e",
        "type": "ui_tab",
        "name": "Configuration & Resets",
        "icon": "mi-storage",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c6e931ac92d6f697",
        "type": "ui_group",
        "name": "Database Reset",
        "tab": "08eed6c3517c624e",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "887ee2eadc46df9a",
        "type": "ui_group",
        "name": "Radio Names",
        "tab": "08eed6c3517c624e",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "475c1eff5d97ffe5",
        "type": "ui_group",
        "name": "Contest Configuration",
        "tab": "08eed6c3517c624e",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b5c190b1c6ec4907",
        "type": "ui_group",
        "name": "Cluster with Dupes",
        "tab": "08eed6c3517c624e",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "76879f1e69f23640",
        "type": "ui_group",
        "name": "Spot Rate by Band per Min",
        "tab": "ecc5f14b5a3d677e",
        "order": 4,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": "band_stats_spot_rate"
    },
    {
        "id": "6e223ca6f2986fea",
        "type": "ui_group",
        "name": "Cluster Login Callsign",
        "tab": "08eed6c3517c624e",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1d924a93b9821236",
        "type": "ui_group",
        "name": "Spot Rate",
        "tab": "200297fa.9ab198",
        "order": 7,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": "dashboard_spot_rate"
    },
    {
        "id": "8a65c232b2637c6a",
        "type": "ui_group",
        "name": "Call Lookup Engine & Login ",
        "tab": "08eed6c3517c624e",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "465f5622aae04ed5",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "f19108a51ffcbc92",
        "type": "ui_group",
        "name": "Google",
        "tab": "7f50838.c6d257c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f5dde741553ee9e7",
        "type": "ui_group",
        "name": "Radio 5",
        "tab": "698e42d7f0c75db1",
        "order": 5,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "radio_info"
    },
    {
        "id": "5ccfd9f2fc20c888",
        "type": "ui_group",
        "name": "Radio 6",
        "tab": "698e42d7f0c75db1",
        "order": 6,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": "radio_info"
    },
    {
        "id": "54b59a095746559b",
        "type": "ui_group",
        "name": "Map Configuration",
        "tab": "08eed6c3517c624e",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "568305b092b67570",
        "type": "ui_tab",
        "name": "Streaming Dashboard",
        "icon": "mi-visibility",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "74f6d374fb94524c",
        "type": "ui_group",
        "name": "Worked QSOS",
        "tab": "568305b092b67570",
        "order": 4,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "13e71f1ba641b9c9",
        "type": "ui_group",
        "name": "QSO Being Worked",
        "tab": "568305b092b67570",
        "order": 3,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "aff1f74aeb47511e",
        "type": "ui_group",
        "name": "Contest Score",
        "tab": "568305b092b67570",
        "order": 2,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": "streaming_contest_score"
    },
    {
        "id": "aafad41ae29aabef",
        "type": "ui_group",
        "name": "Contest Info",
        "tab": "568305b092b67570",
        "order": 1,
        "disp": true,
        "width": 34,
        "collapse": false,
        "className": "streaming_contest_info"
    },
    {
        "id": "4ef10134c121cf09",
        "type": "ui_group",
        "name": "Announcements",
        "tab": "08eed6c3517c624e",
        "order": 12,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "52728e3a5743376c",
        "type": "ui_group",
        "name": "OP Competition Sort By",
        "tab": "08eed6c3517c624e",
        "order": 11,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7bbebae56744a5d8",
        "type": "ui_tab",
        "name": "RBN Spots",
        "icon": "mi-pin_drop",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a55f6d343a61c86b",
        "type": "ui_group",
        "name": "Contest Call RBN Spots Map",
        "tab": "7bbebae56744a5d8",
        "order": 2,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ebbb538ba5d86639",
        "type": "ui_group",
        "name": "All Skimmer Spots with Dups",
        "tab": "7bbebae56744a5d8",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4f4191b752633a96",
        "type": "ui_group",
        "name": "Skimmer Spots with Contest Call",
        "tab": "7bbebae56744a5d8",
        "order": 3,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c89d2b489a7ea747",
        "type": "ui_group",
        "name": "Q's/Hr Rate Color Config",
        "tab": "08eed6c3517c624e",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5e3039a0172f86b1",
        "type": "ui_group",
        "name": "Online Scoreboard",
        "tab": "08eed6c3517c624e",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "eb1487788861989b",
        "type": "ui_tab",
        "name": "Scoreboard",
        "icon": "mi-sports_score",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9a1dd65e19bf97cb",
        "type": "ui_group",
        "name": "Contest Call",
        "tab": "eb1487788861989b",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": "scoreboard"
    },
    {
        "id": "02cd9912aaf9c5c2",
        "type": "ui_group",
        "name": "Call 1",
        "tab": "eb1487788861989b",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": "scoreboard"
    },
    {
        "id": "cc8d9c65bb6053c8",
        "type": "ui_group",
        "name": "Call 2",
        "tab": "eb1487788861989b",
        "order": 4,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": "scoreboard"
    },
    {
        "id": "eff3603f5f8c17cf",
        "type": "ui_group",
        "name": "Call 3",
        "tab": "eb1487788861989b",
        "order": 5,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": "scoreboard"
    },
    {
        "id": "089bc41bee57baf2",
        "type": "ui_group",
        "name": "Call 4",
        "tab": "eb1487788861989b",
        "order": 6,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": "scoreboard"
    },
    {
        "id": "8fb11826e4a47fc9",
        "type": "ui_group",
        "name": "Banner Bar Active Scores Layout",
        "tab": "72d3257e7da87587",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "00919f6d1599ed5f",
        "type": "ui_group",
        "name": "Distance Measurement",
        "tab": "08eed6c3517c624e",
        "order": 13,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "535f5d4509d91b5e",
        "type": "ui_group",
        "name": "Backup & Restore",
        "tab": "08eed6c3517c624e",
        "order": 14,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ab90bdc2382e7735",
        "type": "ui_group",
        "name": "Chat Box",
        "tab": "568305b092b67570",
        "order": 5,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e3f259da9c7796b",
        "type": "ui_group",
        "name": "User Defined Items",
        "tab": "568305b092b67570",
        "order": 6,
        "disp": true,
        "width": 37,
        "collapse": false,
        "className": ""
    },
    {
        "id": "61f1faff3469a80a",
        "type": "ui_group",
        "name": "Webcam",
        "tab": "568305b092b67570",
        "order": 7,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "72d3257e7da87587",
        "type": "ui_tab",
        "name": "Banner Bar Layout",
        "icon": "dashboard",
        "order": 11,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "bea4993f.85f4d8",
        "type": "websocket-client",
        "path": "wss://ws7.blitzortung.org/",
        "tls": "621bc3fe.d747dc",
        "wholemsg": "false",
        "hb": "0"
    },
    {
        "id": "6e89e85d75f82df1",
        "type": "ui_group",
        "name": "Blitz Lightning",
        "tab": "72d3257e7da87587",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "621bc3fe.d747dc",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "e357ef02.ef3cb",
        "type": "ui_group",
        "name": "Solar Template",
        "tab": "72d3257e7da87587",
        "order": 2,
        "disp": false,
        "width": "1",
        "collapse": false,
        "className": ""
    },
    {
        "id": "71cb3368617e6c9e",
        "type": "ui_group",
        "name": "Dashboard Upgrade",
        "tab": "08eed6c3517c624e",
        "order": 15,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ea34d06.1438c3",
        "type": "ui_group",
        "name": "Default",
        "tab": "5e2e41aa.9826b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "5e2e41aa.9826b",
        "type": "ui_tab",
        "name": "CSS_Code",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "5fbbdd7ee574998e",
        "type": "ui_spacer",
        "z": "b73cc2bb5f424b69",
        "name": "spacer",
        "group": "aafad41ae29aabef",
        "order": 3,
        "width": 34,
        "height": 1
    },
    {
        "id": "97ff2fe567e6e56e",
        "type": "ui_spacer",
        "z": "b73cc2bb5f424b69",
        "name": "spacer",
        "group": "9e3f259da9c7796b",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "dbed62b7e5d06ad5",
        "type": "ui_spacer",
        "z": "b73cc2bb5f424b69",
        "name": "spacer",
        "group": "9e3f259da9c7796b",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "1e87c6f36a37c6cf",
        "type": "ui_spacer",
        "z": "b73cc2bb5f424b69",
        "name": "spacer",
        "group": "9e3f259da9c7796b",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "898d37be7ac2375c",
        "type": "ui_spacer",
        "z": "b73cc2bb5f424b69",
        "name": "spacer",
        "group": "9e3f259da9c7796b",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "dd7c69d49b9c6e3a",
        "type": "ui_spacer",
        "z": "b73cc2bb5f424b69",
        "name": "spacer",
        "group": "9e3f259da9c7796b",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "f0dec55cafdd0ef9",
        "type": "ui_spacer",
        "z": "b73cc2bb5f424b69",
        "name": "spacer",
        "group": "9e3f259da9c7796b",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "8e8e61b9e41627e8",
        "type": "ui_group",
        "name": "Radiosport.live Data ",
        "tab": "08eed6c3517c624e",
        "order": 16,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6ae284209bc95605",
        "type": "ui_tab",
        "name": "WAC Logger",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "81e8affa751a7503",
        "type": "ui_group",
        "name": "Log Window Radio 1",
        "tab": "6ae284209bc95605",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ccc9bbbb7e8b28a7",
        "type": "ui_group",
        "name": "Radio 1 Map",
        "tab": "6ae284209bc95605",
        "order": 5,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e0bfac7798af6224",
        "type": "ui_group",
        "name": "Radio 2 Map",
        "tab": "6ae284209bc95605",
        "order": 6,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9189f146c1798eef",
        "type": "ui_group",
        "name": "Radio 1 VFO",
        "tab": "6ae284209bc95605",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9acb32ddd0144d0f",
        "type": "ui_group",
        "name": "Radio 2 VFO",
        "tab": "6ae284209bc95605",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cb8b64280b7ce16e",
        "type": "ui_group",
        "name": "Contest Log",
        "tab": "6ae284209bc95605",
        "order": 7,
        "disp": true,
        "width": "36",
        "collapse": false,
        "className": ""
    },
    {
        "id": "386ebcadf0c976ae",
        "type": "ui_spacer",
        "z": "1acc5730a82cbfc7",
        "name": "spacer",
        "group": "9189f146c1798eef",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "75a98d2fc7441f20",
        "type": "ui_spacer",
        "z": "1acc5730a82cbfc7",
        "name": "spacer",
        "group": "9189f146c1798eef",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "5d48b991eb1eaaf5",
        "type": "ui_spacer",
        "z": "1acc5730a82cbfc7",
        "name": "spacer",
        "group": "9acb32ddd0144d0f",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "675380346d3c6481",
        "type": "ui_spacer",
        "z": "1acc5730a82cbfc7",
        "name": "spacer",
        "group": "9acb32ddd0144d0f",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "31fa72ab1ae3828f",
        "type": "ui_group",
        "name": "Log Window Radio 2",
        "tab": "6ae284209bc95605",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ccdd35e8bb4ac10f",
        "type": "ui_spacer",
        "z": "407d2b774fe67647",
        "name": "spacer",
        "group": "5e3039a0172f86b1",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "db6c3ead34896ed7",
        "type": "switch",
        "z": "c967abe5be484ee6",
        "name": "QSO Rate",
        "property": "rate",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "Q1hrlow",
                "vt": "global"
            },
            {
                "t": "btwn",
                "v": "Q1hrmedlow",
                "vt": "global",
                "v2": "Q1hrmedhigh",
                "v2t": "global"
            },
            {
                "t": "gte",
                "v": "Q1hrhigh",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 670,
        "y": 200,
        "wires": [
            [
                "3ebd50dc409f07c7"
            ],
            [
                "fd7ca0d193c43b4b"
            ],
            [
                "28159edd1453e0e9"
            ]
        ]
    },
    {
        "id": "3ebd50dc409f07c7",
        "type": "change",
        "z": "c967abe5be484ee6",
        "name": "Red < global.Q1hrlow",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FF0000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "fd7ca0d193c43b4b",
        "type": "change",
        "z": "c967abe5be484ee6",
        "name": "Yellow for between global.Q1hrmed",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFF00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "28159edd1453e0e9",
        "type": "change",
        "z": "c967abe5be484ee6",
        "name": "Green > global.Q1hrhigh",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "b01f668b580f9487",
        "type": "switch",
        "z": "7d3bb9d663bb9f7c",
        "name": "QSO Rate",
        "property": "rate",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "Q2hrlow",
                "vt": "global"
            },
            {
                "t": "btwn",
                "v": "Q2hrmedlow",
                "vt": "global",
                "v2": "Q2hrmedhigh",
                "v2t": "global"
            },
            {
                "t": "gte",
                "v": "Q2hrhigh",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "ec6b89c6f0f98386"
            ],
            [
                "b37e2740349a3ef5"
            ],
            [
                "99cf51f0604626bf"
            ]
        ]
    },
    {
        "id": "ec6b89c6f0f98386",
        "type": "change",
        "z": "7d3bb9d663bb9f7c",
        "name": "Red < global.Q2hrlow",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FF0000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "b37e2740349a3ef5",
        "type": "change",
        "z": "7d3bb9d663bb9f7c",
        "name": "Yellow for Between global.Q2hrmed",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFF00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "99cf51f0604626bf",
        "type": "change",
        "z": "7d3bb9d663bb9f7c",
        "name": "Green > global.Q2hrhigh",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "0f73adb4da97836e",
        "type": "switch",
        "z": "74c92a5f32f17459",
        "name": "Spot Rate",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "60",
                "vt": "num"
            },
            {
                "t": "btwn",
                "v": "61",
                "vt": "num",
                "v2": "119",
                "v2t": "num"
            },
            {
                "t": "gte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 540,
        "y": 120,
        "wires": [
            [
                "809e27880c7a6898"
            ],
            [
                "6bb4d0ed1ea29d84"
            ],
            [
                "a808ff72796c1b03"
            ]
        ]
    },
    {
        "id": "809e27880c7a6898",
        "type": "change",
        "z": "74c92a5f32f17459",
        "name": "<= 60 Then Color Red",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FF0000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6bb4d0ed1ea29d84",
        "type": "change",
        "z": "74c92a5f32f17459",
        "name": "61 to 119 Then Color Yellow",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFF00",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a808ff72796c1b03",
        "type": "change",
        "z": "74c92a5f32f17459",
        "name": ">= 120 Then Color Green",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3fb3f1760ba82348",
        "type": "smooth",
        "z": "74c92a5f32f17459",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "5",
        "round": "0",
        "mult": "single",
        "reduce": false,
        "x": 320,
        "y": 120,
        "wires": [
            [
                "0f73adb4da97836e"
            ]
        ]
    },
    {
        "id": "8cb98df85d0b0525",
        "type": "http request",
        "z": "bedd4acdc0e27dab",
        "name": "QSO Hamdb Lookup",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.hamdb.org/{{{payload.call}}}/json/nodered",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1060,
        "y": 80,
        "wires": [
            [
                "2e3b45dcd4f0134a"
            ]
        ]
    },
    {
        "id": "70b6de0f1840a35d",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "payload.hamdb.callsign.call",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "payload.hamdb.callsign.lat",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "payload.hamdb.callsign.lon",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.hamdb",
                "pt": "msg",
                "to": "hamdb",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.hamdb",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.ttl",
                "pt": "msg",
                "to": "ttl",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.op",
                "pt": "msg",
                "to": "original.operator[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "original.band[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "original.mode[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.isrunqso",
                "pt": "msg",
                "to": "original.IsRunQSO[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exchange",
                "pt": "msg",
                "to": "original.exchange1[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.section",
                "pt": "msg",
                "to": "original.section[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 80,
        "wires": [
            [
                "b8b4fdfbdc3584ae"
            ]
        ]
    },
    {
        "id": "4982fd45c8dc3e9b",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "Which Lookup DB?",
        "property": "dblookup",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "hamdb",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "qrz",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hamqth",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 690,
        "y": 480,
        "wires": [
            [
                "8cb98df85d0b0525"
            ],
            [
                "716b0a1e81f4c143"
            ],
            [
                "48ede867c6197d86"
            ]
        ]
    },
    {
        "id": "03ebd72fe284b0c5",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Original Payload Copy",
        "rules": [
            {
                "t": "move",
                "p": "payload.contactinfo",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.call",
                "pt": "msg",
                "to": "original.call[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 440,
        "wires": [
            [
                "4982fd45c8dc3e9b"
            ]
        ]
    },
    {
        "id": "c3ba057b922e94e4",
        "type": "http request",
        "z": "bedd4acdc0e27dab",
        "name": "QRZ DB Lookup",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://xmldata.qrz.com/xml/current/?s={{{qrzkey}}};callsign={{{payload.call}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1260,
        "y": 400,
        "wires": [
            [
                "88b7cee26ec2a13e"
            ]
        ]
    },
    {
        "id": "716b0a1e81f4c143",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set QRZ Key",
        "rules": [
            {
                "t": "set",
                "p": "qrzkey",
                "pt": "msg",
                "to": "qrzkey",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 400,
        "wires": [
            [
                "c3ba057b922e94e4"
            ]
        ]
    },
    {
        "id": "635e74837740d203",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "Error?",
        "property": "payload.QRZDatabase.Session[0].Error[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "cont",
                "v": "Not found",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Session Timeout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Username / password required",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1570,
        "y": 400,
        "wires": [
            [
                "ce43ae734fc9b55d"
            ],
            [
                "c931e624363ed9cd"
            ],
            [
                "48307e071458f6a1",
                "1cbf491f09f5b57e"
            ],
            [
                "48307e071458f6a1",
                "1cbf491f09f5b57e"
            ],
            [
                "020edd3ba15d0ea4",
                "1cbf491f09f5b57e"
            ]
        ]
    },
    {
        "id": "2e3b45dcd4f0134a",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "Is Error?",
        "property": "payload.hamdb.messages.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NOT_FOUND",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1300,
        "y": 80,
        "wires": [
            [
                "70b6de0f1840a35d"
            ],
            [
                "69248291ef2a5439"
            ]
        ]
    },
    {
        "id": "88b7cee26ec2a13e",
        "type": "xml",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1430,
        "y": 400,
        "wires": [
            [
                "635e74837740d203"
            ]
        ]
    },
    {
        "id": "ce43ae734fc9b55d",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "payload.QRZDatabase.Callsign[0].call[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "payload.QRZDatabase.Callsign[0].lat[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "payload.QRZDatabase.Callsign[0].lon[0]",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.QRZDatabase",
                "pt": "msg",
                "to": "QRZDatabase",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.QRZDatabase",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.ttl",
                "pt": "msg",
                "to": "ttl",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.op",
                "pt": "msg",
                "to": "original.operator[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "original.band[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "original.mode[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.isrunqso",
                "pt": "msg",
                "to": "original.IsRunQSO[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exchange",
                "pt": "msg",
                "to": "original.exchange1[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.section",
                "pt": "msg",
                "to": "original.section[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.ID",
                "pt": "msg",
                "to": "original.ID[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 300,
        "wires": [
            [
                "c758ca8231477389"
            ]
        ]
    },
    {
        "id": "c0c81bc9589bbb2e",
        "type": "template",
        "z": "bedd4acdc0e27dab",
        "name": "Update isbusted DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "update qsos\nset isbusted='1'\nwhere ID='{{{payload.ID}}}';",
        "output": "str",
        "x": 2520,
        "y": 420,
        "wires": [
            [
                "ae62ec7640f60321"
            ]
        ]
    },
    {
        "id": "ae62ec7640f60321",
        "type": "sqlite",
        "z": "bedd4acdc0e27dab",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2960,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "6ddd40d0ad448153",
        "type": "template",
        "z": "bedd4acdc0e27dab",
        "name": "Update lat, lon & distance DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "update qsos set lon='{{{payload.lon}}}',lat='{{{payload.lat}}}',distance='{{{payload.distance}}}' where ID='{{{payload.ID}}}';",
        "output": "str",
        "x": 2720,
        "y": 360,
        "wires": [
            [
                "ae62ec7640f60321"
            ]
        ]
    },
    {
        "id": "3df3ddad593e6199",
        "type": "delay",
        "z": "bedd4acdc0e27dab",
        "name": "1 Msg Per Hour",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2180,
        "y": 520,
        "wires": [
            [
                "6b5361caafc5b871"
            ]
        ]
    },
    {
        "id": "c758ca8231477389",
        "type": "function",
        "z": "bedd4acdc0e27dab",
        "name": "Get Distance",
        "func": "function deg2rad(deg) {\n  return deg * (Math.PI/180)\n}\n\nlet lat1 = global.get('homelat');\nlet lat2 = msg.payload.lat\nlet lon1 = global.get('homelon');\nlet lon2 = msg.payload.lon;\n\nvar R = 6371; // Radius of the earth in km\nvar dLat = deg2rad(lat2-lat1);  // deg2rad below\nvar dLon = deg2rad(lon2-lon1); \n//var deglat1 = lat1 * (Math.PI/180);\n//var deglat2 = lat2 * (Math.PI/180);\nvar a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n    Math.sin(dLon/2) * Math.sin(dLon/2)\n    ; \nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \nvar d = R * c; // Distance in km\nmsg.payload.distance_km = parseInt(d);\n\n\nvar miles = d * 0.62137; //convert to miles\nmsg.payload.distance_miles = parseInt(miles);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 300,
        "wires": [
            [
                "3762f0280985ea10",
                "1e5bda5f5c322537"
            ]
        ]
    },
    {
        "id": "b8b4fdfbdc3584ae",
        "type": "function",
        "z": "bedd4acdc0e27dab",
        "name": "Get Distance",
        "func": "function deg2rad(deg) {\n  return deg * (Math.PI/180)\n}\n\nlet lat1 = global.get('homelat');\nlet lat2 = msg.payload.lat\nlet lon1 = global.get('homelon');\nlet lon2 = msg.payload.lon;\n\nvar R = 6371; // Radius of the earth in km\nvar dLat = deg2rad(lat2-lat1);  // deg2rad below\nvar dLon = deg2rad(lon2-lon1); \n//var deglat1 = lat1 * (Math.PI/180);\n//var deglat2 = lat2 * (Math.PI/180);\nvar a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n    Math.sin(dLon/2) * Math.sin(dLon/2)\n    ; \nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \nvar d = R * c; // Distance in km\nmsg.payload.distance_km = parseInt(d);\n\nvar miles = d * 0.62137; //convert to miles\nmsg.payload.distance_miles = parseInt(miles);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 80,
        "wires": [
            [
                "3762f0280985ea10",
                "1e5bda5f5c322537"
            ]
        ]
    },
    {
        "id": "020edd3ba15d0ea4",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "QRZ Error.  Please check the configuration.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 580,
        "wires": [
            [
                "c0bf1ae508c68ea2"
            ]
        ]
    },
    {
        "id": "c0bf1ae508c68ea2",
        "type": "delay",
        "z": "bedd4acdc0e27dab",
        "name": "1 Msg Per Hour",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1980,
        "y": 580,
        "wires": [
            [
                "ca9eb5a0ae68b3f7"
            ]
        ]
    },
    {
        "id": "ca9eb5a0ae68b3f7",
        "type": "ui_toast",
        "z": "bedd4acdc0e27dab",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "QRZ Session General Error",
        "x": 2220,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "48307e071458f6a1",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "Username null?",
        "property": "qrzusername",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1780,
        "y": 500,
        "wires": [
            [
                "df7aeb880271e9ab"
            ],
            [
                "f8fca14f8348f52a"
            ]
        ]
    },
    {
        "id": "f8fca14f8348f52a",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set Error Msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please enter in your QRZ username & password on the configuration dashboard.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 520,
        "wires": [
            [
                "3df3ddad593e6199"
            ]
        ]
    },
    {
        "id": "6b5361caafc5b871",
        "type": "ui_toast",
        "z": "bedd4acdc0e27dab",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Enter in Your QRZ Username & Password",
        "x": 2480,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "ec02285ebc182563",
        "type": "http request",
        "z": "bedd4acdc0e27dab",
        "name": "Get QRZ XML Key",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://xmldata.qrz.com/xml/current/?username={{payload.qrzusername}};password={{payload.qrzpassword}};agent=q5.0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 2290,
        "y": 460,
        "wires": [
            [
                "9b81b34ea7eab20b"
            ]
        ]
    },
    {
        "id": "9b81b34ea7eab20b",
        "type": "xml",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 2470,
        "y": 460,
        "wires": [
            [
                "2585664f7f4bcded"
            ]
        ]
    },
    {
        "id": "2585664f7f4bcded",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrzkey",
                "pt": "global",
                "to": "payload.QRZDatabase.Session[0].Key[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "qrzkeyexpire",
                "pt": "global",
                "to": "payload.QRZDatabase.Session[0].SubExp[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "qrzkey",
                "pt": "msg",
                "to": "qrzkey",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2640,
        "y": 460,
        "wires": [
            [
                "9d7ff286257e9ee1"
            ]
        ]
    },
    {
        "id": "df7aeb880271e9ab",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set QRZ Username & Password",
        "rules": [
            {
                "t": "set",
                "p": "payload.qrzusername",
                "pt": "msg",
                "to": "qrzusername",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.qrzpassword",
                "pt": "msg",
                "to": "qrzpassword",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 460,
        "wires": [
            [
                "ec02285ebc182563"
            ]
        ]
    },
    {
        "id": "db552b47bb5f9064",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "160M Color Purple",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#800080",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4290,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "bc778edd341cbc84",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "80M Color Green",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4290,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "96275f869825c27d",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "40M Color Blue",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#0000FF",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4300,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "2cf32f5a31aed22a",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "20M Color Red",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FF0000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4300,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "260ab9255da1050e",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "15M Color Yellow",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FFFF00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4290,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "82696bd88fd60c22",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "10M Color Orange",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FF8C00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4290,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "5e19bf265b499836",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "6M Color White",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "6M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "6M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4300,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "885ec7953d91b737",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "2M Color Lime",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#00FF00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "2M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "2M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4300,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "588111625a4f2458",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Else Color Black",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#000000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "Other",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4300,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "6dddf05a5c5aefea",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "Band Parse",
        "property": "original.freq",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "1800",
                "vt": "num",
                "v2": "2000",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "3500",
                "vt": "num",
                "v2": "4000",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "7000",
                "vt": "num",
                "v2": "7200",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "14000",
                "vt": "num",
                "v2": "14350",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21000",
                "vt": "num",
                "v2": "21450",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "28000",
                "vt": "num",
                "v2": "29700",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "50000",
                "vt": "num",
                "v2": "54000",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "144000",
                "vt": "num",
                "v2": "148000",
                "v2t": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3970,
        "y": 840,
        "wires": [
            [
                "db552b47bb5f9064"
            ],
            [
                "bc778edd341cbc84"
            ],
            [
                "96275f869825c27d"
            ],
            [
                "2cf32f5a31aed22a"
            ],
            [
                "260ab9255da1050e"
            ],
            [
                "82696bd88fd60c22"
            ],
            [
                "5e19bf265b499836"
            ],
            [
                "885ec7953d91b737"
            ],
            [
                "588111625a4f2458"
            ]
        ]
    },
    {
        "id": "48ede867c6197d86",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set HamQTH Key",
        "rules": [
            {
                "t": "set",
                "p": "hamqthkey",
                "pt": "msg",
                "to": "hamqthkey",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 860,
        "wires": [
            [
                "1d3a3564f6016e6a"
            ]
        ]
    },
    {
        "id": "1d3a3564f6016e6a",
        "type": "http request",
        "z": "bedd4acdc0e27dab",
        "name": "HamQTH DB Lookup",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.hamqth.com/xml.php?id={{{hamqthkey}}}&callsign={{{payload.call}}}&prg=CONTEST_DASHBOARD",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1280,
        "y": 860,
        "wires": [
            [
                "3ea240042a33dd07"
            ]
        ]
    },
    {
        "id": "3ea240042a33dd07",
        "type": "xml",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1470,
        "y": 860,
        "wires": [
            [
                "49f99e887e82cc60"
            ]
        ]
    },
    {
        "id": "49f99e887e82cc60",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "Error?",
        "property": "payload.HamQTH.session[0].error[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "cont",
                "v": "Callsign not found",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Session does not exist or expired",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Wrong user name or password",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1610,
        "y": 860,
        "wires": [
            [
                "84896f6b71dd7adc"
            ],
            [
                "2f56fea52ed41388"
            ],
            [
                "a1369cd58e8ea395",
                "7f886053cdd16a70"
            ],
            [
                "a1369cd58e8ea395",
                "7f886053cdd16a70"
            ],
            [
                "6153738ced412e5b",
                "7f886053cdd16a70"
            ]
        ]
    },
    {
        "id": "84896f6b71dd7adc",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "original.call[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.lat",
                "pt": "msg",
                "to": "payload.HamQTH.search[0].latitude[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.lon",
                "pt": "msg",
                "to": "payload.HamQTH.search[0].longitude[0]",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.HamQTH",
                "pt": "msg",
                "to": "HamQTH",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.HamQTH",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.ttl",
                "pt": "msg",
                "to": "ttl",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.op",
                "pt": "msg",
                "to": "original.operator[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "original.band[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "original.mode[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.isrunqso",
                "pt": "msg",
                "to": "original.IsRunQSO[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exchange",
                "pt": "msg",
                "to": "original.exchange1[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.section",
                "pt": "msg",
                "to": "original.section[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.ID",
                "pt": "msg",
                "to": "original.ID[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 800,
        "wires": [
            [
                "1560843a2ed68c93"
            ]
        ]
    },
    {
        "id": "1560843a2ed68c93",
        "type": "function",
        "z": "bedd4acdc0e27dab",
        "name": "Get Distance",
        "func": "function deg2rad(deg) {\n  return deg * (Math.PI/180)\n}\n\nlet lat1 = global.get('homelat');\nlet lat2 = msg.payload.lat\nlet lon1 = global.get('homelon');\nlet lon2 = msg.payload.lon;\n\nvar R = 6371; // Radius of the earth in km\nvar dLat = deg2rad(lat2-lat1);  // deg2rad below\nvar dLon = deg2rad(lon2-lon1); \n//var deglat1 = lat1 * (Math.PI/180);\n//var deglat2 = lat2 * (Math.PI/180);\nvar a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n    Math.sin(dLon/2) * Math.sin(dLon/2)\n    ; \nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \nvar d = R * c; // Distance in km\nmsg.payload.distance_km = parseInt(d);\n\nvar miles = d * 0.62137; //convert to miles\nmsg.payload.distance_miles = parseInt(miles);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 800,
        "wires": [
            [
                "3762f0280985ea10",
                "8b9096cac8bf440d"
            ]
        ]
    },
    {
        "id": "a1369cd58e8ea395",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "Usernam null?",
        "property": "hamqthusername",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1880,
        "y": 1020,
        "wires": [
            [
                "f9d62c1874c03e4a"
            ],
            [
                "3bcabbe732cbc16b"
            ]
        ]
    },
    {
        "id": "f9d62c1874c03e4a",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set HamQTH Username & Password",
        "rules": [
            {
                "t": "set",
                "p": "payload.hamqthusername",
                "pt": "msg",
                "to": "hamqthusername",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.hamqthpassword",
                "pt": "msg",
                "to": "hamqthpassword",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2150,
        "y": 980,
        "wires": [
            [
                "77f7cadf4c5bf2f4"
            ]
        ]
    },
    {
        "id": "3bcabbe732cbc16b",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set Error Msg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please enter in your HamQTH username & password on the configuration dashboard.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 1040,
        "wires": [
            [
                "b9d3f9f8898a0e26"
            ]
        ]
    },
    {
        "id": "77f7cadf4c5bf2f4",
        "type": "http request",
        "z": "bedd4acdc0e27dab",
        "name": "Get HamQTH XML Key",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.hamqth.com/xml.php?u={{payload.hamqthusername}}&p={{payload.hamqthpassword}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 2470,
        "y": 980,
        "wires": [
            [
                "b77e89a9e0d724f4"
            ]
        ]
    },
    {
        "id": "b77e89a9e0d724f4",
        "type": "xml",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 2670,
        "y": 980,
        "wires": [
            [
                "19d4a70bcf695fc1"
            ]
        ]
    },
    {
        "id": "19d4a70bcf695fc1",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hamqthkey",
                "pt": "global",
                "to": "payload.HamQTH.session[0].session_id[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hamqthkey",
                "pt": "msg",
                "to": "hamqthkey",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2840,
        "y": 980,
        "wires": [
            [
                "915c95f6d75c0fe8"
            ]
        ]
    },
    {
        "id": "b9d3f9f8898a0e26",
        "type": "delay",
        "z": "bedd4acdc0e27dab",
        "name": "1 Msg Per Hour",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2280,
        "y": 1040,
        "wires": [
            [
                "513fcdfab19e24de"
            ]
        ]
    },
    {
        "id": "513fcdfab19e24de",
        "type": "ui_toast",
        "z": "bedd4acdc0e27dab",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Enter in Your HamQTH Username & Password",
        "x": 2600,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "6153738ced412e5b",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "HamQTH Error.  Please check the configuration.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 1100,
        "wires": [
            [
                "3fa239790d7f8a1d"
            ]
        ]
    },
    {
        "id": "3fa239790d7f8a1d",
        "type": "delay",
        "z": "bedd4acdc0e27dab",
        "name": "1 Msg Per Hour",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2060,
        "y": 1100,
        "wires": [
            [
                "08a9c92f75154ca7"
            ]
        ]
    },
    {
        "id": "08a9c92f75154ca7",
        "type": "ui_toast",
        "z": "bedd4acdc0e27dab",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "HamQTH Session General Error",
        "x": 2330,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "2b7ee973eaf53963",
        "type": "template",
        "z": "bedd4acdc0e27dab",
        "name": "Update isbusted DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "update qsos\nset isbusted='1'\nwhere ID='{{{payload.ID}}}';",
        "output": "str",
        "x": 2520,
        "y": 900,
        "wires": [
            [
                "b288e29620a6d810"
            ]
        ]
    },
    {
        "id": "b288e29620a6d810",
        "type": "sqlite",
        "z": "bedd4acdc0e27dab",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 3040,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "1bf49b1ee0e4bb6d",
        "type": "template",
        "z": "bedd4acdc0e27dab",
        "name": "Update lat, lon & distance DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "update qsos set lon='{{{payload.lon}}}',lat='{{{payload.lat}}}',distance='{{{payload.distance}}}' where ID='{{{payload.ID}}}';",
        "output": "str",
        "x": 2760,
        "y": 820,
        "wires": [
            [
                "b288e29620a6d810"
            ]
        ]
    },
    {
        "id": "605d06d0f3758622",
        "type": "comment",
        "z": "bedd4acdc0e27dab",
        "name": "HamDB Flow",
        "info": "",
        "x": 1030,
        "y": 40,
        "wires": []
    },
    {
        "id": "3ea653b66b729fa5",
        "type": "comment",
        "z": "bedd4acdc0e27dab",
        "name": "QRZ Flow",
        "info": "",
        "x": 1040,
        "y": 360,
        "wires": []
    },
    {
        "id": "9347f2a457d75d25",
        "type": "comment",
        "z": "bedd4acdc0e27dab",
        "name": "HamQTH Flow",
        "info": "",
        "x": 1040,
        "y": 800,
        "wires": []
    },
    {
        "id": "915c95f6d75c0fe8",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Original Payload Copy",
        "rules": [
            {
                "t": "set",
                "p": "payload.call",
                "pt": "msg",
                "to": "original.call[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3060,
        "y": 980,
        "wires": [
            [
                "60dd7391ca919902"
            ]
        ]
    },
    {
        "id": "60dd7391ca919902",
        "type": "link out",
        "z": "bedd4acdc0e27dab",
        "name": "HamQTH Link OUT",
        "mode": "link",
        "links": [
            "2649a46a33c14d96"
        ],
        "x": 3315,
        "y": 980,
        "wires": []
    },
    {
        "id": "2649a46a33c14d96",
        "type": "link in",
        "z": "bedd4acdc0e27dab",
        "name": "HamQTH Link IN",
        "links": [
            "60dd7391ca919902"
        ],
        "x": 875,
        "y": 980,
        "wires": [
            [
                "48ede867c6197d86"
            ]
        ]
    },
    {
        "id": "9d7ff286257e9ee1",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Original Payload Copy",
        "rules": [
            {
                "t": "set",
                "p": "payload.call",
                "pt": "msg",
                "to": "original.call[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2860,
        "y": 460,
        "wires": [
            [
                "9757185c6956eb89"
            ]
        ]
    },
    {
        "id": "9757185c6956eb89",
        "type": "link out",
        "z": "bedd4acdc0e27dab",
        "name": "QRZ Link OUT",
        "mode": "link",
        "links": [
            "dd043779d2451db2"
        ],
        "x": 3055,
        "y": 460,
        "wires": []
    },
    {
        "id": "dd043779d2451db2",
        "type": "link in",
        "z": "bedd4acdc0e27dab",
        "name": "QRZ Link IN",
        "links": [
            "9757185c6956eb89"
        ],
        "x": 875,
        "y": 500,
        "wires": [
            [
                "716b0a1e81f4c143"
            ]
        ]
    },
    {
        "id": "3762f0280985ea10",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "QSO, Lookup or Spot?",
        "property": "qsotype",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "qso",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lookup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "spot",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3520,
        "y": 380,
        "wires": [
            [
                "b228e5cf7ea48308"
            ],
            [
                "b228e5cf7ea48308"
            ],
            [
                "6dddf05a5c5aefea"
            ]
        ]
    },
    {
        "id": "a5cb9c557a70448b",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "QSO or Spot?",
        "property": "qsotype",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "qso",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lookup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "spot",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 200,
        "y": 480,
        "wires": [
            [
                "03ebd72fe284b0c5"
            ],
            [
                "f8de5ff40046db44"
            ],
            [
                "957891a996803850"
            ]
        ]
    },
    {
        "id": "957891a996803850",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Original Payload Copy",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.call",
                "pt": "msg",
                "to": "original.de",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.freq",
                "pt": "msg",
                "to": "original.freq",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 520,
        "wires": [
            [
                "4982fd45c8dc3e9b"
            ]
        ]
    },
    {
        "id": "69248291ef2a5439",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "original.call[0]",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.hamdb",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.ttl",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.op",
                "pt": "msg",
                "to": "original.operator[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "original.band[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "original.mode[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.isrunqso",
                "pt": "msg",
                "to": "original.IsRunQSO[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exchange",
                "pt": "msg",
                "to": "original.exchange1[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.section",
                "pt": "msg",
                "to": "original.section[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.ID",
                "pt": "msg",
                "to": "original.ID[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.isbusted",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.distance_km",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "msg.payload.distance_miles",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 120,
        "wires": [
            [
                "3762f0280985ea10",
                "1e5bda5f5c322537"
            ]
        ]
    },
    {
        "id": "c931e624363ed9cd",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "original.call[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.ttl",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.op",
                "pt": "msg",
                "to": "original.operator[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "original.band[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "original.mode[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.isrunqso",
                "pt": "msg",
                "to": "original.IsRunQSO[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exchange",
                "pt": "msg",
                "to": "original.exchange1[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.section",
                "pt": "msg",
                "to": "original.section[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.ID",
                "pt": "msg",
                "to": "original.ID[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.isbusted",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.distance_km",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "msg.payload.distance_miles",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "payload.QRZDatabase",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 400,
        "wires": [
            [
                "3762f0280985ea10",
                "1e5bda5f5c322537",
                "c0c81bc9589bbb2e"
            ]
        ]
    },
    {
        "id": "2f56fea52ed41388",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "original.call[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.ttl",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.op",
                "pt": "msg",
                "to": "original.operator[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "original.band[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "original.mode[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.isrunqso",
                "pt": "msg",
                "to": "original.IsRunQSO[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.exchange",
                "pt": "msg",
                "to": "original.exchange1[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.section",
                "pt": "msg",
                "to": "original.section[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.ID",
                "pt": "msg",
                "to": "original.ID[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.isbusted",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.distance_km",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "msg.payload.distance_miles",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "payload.HamQTH",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 880,
        "wires": [
            [
                "3762f0280985ea10",
                "8b9096cac8bf440d",
                "2b7ee973eaf53963"
            ]
        ]
    },
    {
        "id": "b228e5cf7ea48308",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "Get Band",
        "property": "payload.band",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1.8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3.5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "14",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "21",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "28",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "50",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "144",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 3800,
        "y": 320,
        "wires": [
            [
                "12aaa60adbe53aa4"
            ],
            [
                "13d5c886dc925ca0"
            ],
            [
                "425279b6d14c3da6"
            ],
            [
                "df3e87bc737f56b9"
            ],
            [
                "3443249ce4903268"
            ],
            [
                "de5b10a5ac9d33d4"
            ],
            [
                "d7622297fb04e81f"
            ],
            [
                "c73b6c786dbf3a47"
            ],
            [
                "81490e7666221ff4"
            ]
        ]
    },
    {
        "id": "ba4bfb65e8d9d957",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "Get Mode",
        "property": "payload.mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SSB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "USB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "LSB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RTTY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FM",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 4320,
        "y": 320,
        "wires": [
            [
                "1c3ab9f47658b3eb"
            ],
            [
                "1c8b4345f764571b"
            ],
            [
                "1c8b4345f764571b"
            ],
            [
                "1c8b4345f764571b"
            ],
            [
                "25c39c91c41519af"
            ],
            [
                "f5f512454cd1849d"
            ]
        ]
    },
    {
        "id": "12aaa60adbe53aa4",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set 160M Purple Band Layer",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#800080",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4060,
        "y": 160,
        "wires": [
            [
                "ba4bfb65e8d9d957"
            ]
        ]
    },
    {
        "id": "13d5c886dc925ca0",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set 80M Green Band Layer",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4060,
        "y": 200,
        "wires": [
            [
                "ba4bfb65e8d9d957"
            ]
        ]
    },
    {
        "id": "425279b6d14c3da6",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set 40M Blue Band Layer",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#0000FF",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4050,
        "y": 240,
        "wires": [
            [
                "ba4bfb65e8d9d957"
            ]
        ]
    },
    {
        "id": "df3e87bc737f56b9",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set 20M Red Band Layer",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FF0000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4050,
        "y": 280,
        "wires": [
            [
                "ba4bfb65e8d9d957"
            ]
        ]
    },
    {
        "id": "3443249ce4903268",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set 15M Yellow Band Layer",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FFFF00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4060,
        "y": 320,
        "wires": [
            [
                "ba4bfb65e8d9d957"
            ]
        ]
    },
    {
        "id": "de5b10a5ac9d33d4",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set 10M Orange Band Layer",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FF8C00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4060,
        "y": 360,
        "wires": [
            [
                "ba4bfb65e8d9d957"
            ]
        ]
    },
    {
        "id": "d7622297fb04e81f",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set 6m White Band Layer",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "6M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "6M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4050,
        "y": 400,
        "wires": [
            [
                "ba4bfb65e8d9d957"
            ]
        ]
    },
    {
        "id": "c73b6c786dbf3a47",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set 2M Lime Band Layer",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#00FF00",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.band",
                "pt": "msg",
                "to": "2M",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "2M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4050,
        "y": 440,
        "wires": [
            [
                "ba4bfb65e8d9d957"
            ]
        ]
    },
    {
        "id": "81490e7666221ff4",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Set Else Black Band Layer",
        "rules": [
            {
                "t": "set",
                "p": "payload.iconColor",
                "pt": "msg",
                "to": "#000000",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "Other",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4060,
        "y": 480,
        "wires": [
            [
                "ba4bfb65e8d9d957"
            ]
        ]
    },
    {
        "id": "1c3ab9f47658b3eb",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Label CW",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "CW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4520,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1c8b4345f764571b",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Label SSB",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "SSB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "25c39c91c41519af",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Label RTTY",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "RTTY",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4530,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "f5f512454cd1849d",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Label FM",
        "rules": [
            {
                "t": "set",
                "p": "payload.mode",
                "pt": "msg",
                "to": "FM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4520,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8b9096cac8bf440d",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "QSO?",
        "property": "qsotype",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "qso",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2290,
        "y": 840,
        "wires": [
            [
                "984d66d9e9e78171"
            ]
        ]
    },
    {
        "id": "1e5bda5f5c322537",
        "type": "switch",
        "z": "bedd4acdc0e27dab",
        "name": "QSO?",
        "property": "qsotype",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "qso",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2250,
        "y": 340,
        "wires": [
            [
                "dfec16afaa4f638b"
            ]
        ]
    },
    {
        "id": "984d66d9e9e78171",
        "type": "function",
        "z": "bedd4acdc0e27dab",
        "name": "Distance DB Prep",
        "func": "let distance = global.get('distance_measurement');\n\nif (distance == \"miles\")\n{\n    msg.payload.distance = msg.payload.distance_miles;\n}\n\nif (distance == \"km\")\n{\n    msg.payload.distance = msg.payload.distance_km;\n}\n\nif (msg.payload.distance == null)\n{\n    msg.payload.distance = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 820,
        "wires": [
            [
                "1bf49b1ee0e4bb6d"
            ]
        ]
    },
    {
        "id": "dfec16afaa4f638b",
        "type": "function",
        "z": "bedd4acdc0e27dab",
        "name": "Distance DB Prep",
        "func": "let distance = global.get('distance_measurement');\n\nif (distance == \"miles\")\n{\n    msg.payload.distance = msg.payload.distance_miles;\n}\n\nif (distance == \"km\")\n{\n    msg.payload.distance = msg.payload.distance_km;\n}\n\nif (msg.payload.distance == null)\n{\n    msg.payload.distance = 0;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 360,
        "wires": [
            [
                "6ddd40d0ad448153"
            ]
        ]
    },
    {
        "id": "f8de5ff40046db44",
        "type": "change",
        "z": "bedd4acdc0e27dab",
        "name": "Original Payload Copy",
        "rules": [
            {
                "t": "move",
                "p": "payload.lookupinfo",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.call",
                "pt": "msg",
                "to": "original.call[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 480,
        "wires": [
            [
                "4982fd45c8dc3e9b"
            ]
        ]
    },
    {
        "id": "d85d8e2af7ff9df8",
        "type": "comment",
        "z": "bedd4acdc0e27dab",
        "name": "To do",
        "info": "If contact is not found in hamqth or you not using a lookup table, \n\nTake a look at the prefix and map country capital to put it on the map.  \n\n",
        "x": 600,
        "y": 100,
        "wires": []
    },
    {
        "id": "1cbf491f09f5b57e",
        "type": "link out",
        "z": "bedd4acdc0e27dab",
        "name": "QRZ Error OUT",
        "mode": "link",
        "links": [
            "2f0871ab61146734"
        ],
        "x": 1735,
        "y": 440,
        "wires": []
    },
    {
        "id": "2f0871ab61146734",
        "type": "link in",
        "z": "bedd4acdc0e27dab",
        "name": "From DB Call IN",
        "links": [
            "1cbf491f09f5b57e",
            "7f886053cdd16a70"
        ],
        "x": 3305,
        "y": 320,
        "wires": [
            [
                "3762f0280985ea10"
            ]
        ]
    },
    {
        "id": "7f886053cdd16a70",
        "type": "link out",
        "z": "bedd4acdc0e27dab",
        "name": "HamQTH DB Error OUT",
        "mode": "link",
        "links": [
            "2f0871ab61146734"
        ],
        "x": 1785,
        "y": 960,
        "wires": []
    },
    {
        "id": "0178697fb442d801",
        "type": "udp in",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "",
        "iface": "",
        "port": "12062",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 520,
        "y": 1080,
        "wires": [
            [
                "1e6f9143a325a577"
            ]
        ]
    },
    {
        "id": "fb32d39142880f19",
        "type": "comment",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "UDP Score XML",
        "info": "",
        "x": 520,
        "y": 940,
        "wires": []
    },
    {
        "id": "d2cdb7808cce0e9c",
        "type": "xml",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 810,
        "y": 1080,
        "wires": [
            [
                "622fed8ae8f6a5d2"
            ]
        ]
    },
    {
        "id": "2cdd5ffb3ac01f73",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "group": "aeac5355e22fa2ee",
        "order": 1,
        "width": 5,
        "height": 3,
        "name": "Total Score",
        "label": "Total Score",
        "format": "<font color={{msg.color}}>{{payload.dynamicresults.score[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1990,
        "y": 960,
        "wires": []
    },
    {
        "id": "289442fe7c0d95f9",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "group": "aeac5355e22fa2ee",
        "order": 3,
        "width": 5,
        "height": 3,
        "name": "Total Mults",
        "label": "Mults",
        "format": "<font color={{msg.color}}>{{payload.totalmults}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2170,
        "y": 1160,
        "wires": []
    },
    {
        "id": "9b7d271988034596",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "group": "aeac5355e22fa2ee",
        "order": 2,
        "width": 5,
        "height": 3,
        "name": "Total QSO's",
        "label": "QSOs",
        "format": "<font color={{msg.color}}>{{payload.totalnoqsos}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2170,
        "y": 1060,
        "wires": []
    },
    {
        "id": "31d7202b2b50131d",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Total QSO Array Parse",
        "func": "//if (msg.payload.dynamicresults.score == \"0\")\n//{\n//    return {\"payload\":{totalnoqsos:0}};\n//}\n\nlet arraylength = msg.payload.dynamicresults.breakdown[0].qso.length\ntotalnoqsos = 0;\n\nfor (let i=0; i < msg.payload.dynamicresults.breakdown[0].qso.length; i++)\n{\n    \n    if (msg.payload.dynamicresults.breakdown[0].qso[i].$.band == \"total\" && msg.payload.dynamicresults.breakdown[0].qso[i].$.mode == \"ALL\")\n    {\n        totalnoqsos = parseInt(msg.payload.dynamicresults.breakdown[0].qso[i]._);\n        flow.set('totalnoqsos',totalnoqsos)\n        return {\"payload\":{totalnoqsos:totalnoqsos}};\n        \n    }\n    \n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1060,
        "wires": [
            [
                "3ba4521f148eac8c"
            ]
        ]
    },
    {
        "id": "ff83b125cd4af97b",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "group": "aeac5355e22fa2ee",
        "order": 4,
        "width": 5,
        "height": 3,
        "name": "Total Points",
        "label": "Points",
        "format": "<font color={{msg.color}}>{{payload.totalpoints}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2170,
        "y": 1260,
        "wires": []
    },
    {
        "id": "06ef39d063a5a0f6",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Total Points Array Parse",
        "func": "if (msg.payload.dynamicresults.score == \"0\")\n{\n    flow.set('totalpoints',0)\n    return {\"payload\":{totalpoints:0}};\n}\n\nlet arraylength = msg.payload.dynamicresults.breakdown[0].point.length\nlet totalpoints = 0;\n\nfor (let i=0; i < msg.payload.dynamicresults.breakdown[0].point.length; i++)\n{\n    \n    if (msg.payload.dynamicresults.breakdown[0].point[i].$.band == \"total\" && msg.payload.dynamicresults.breakdown[0].point[i].$.mode == \"ALL\")\n    {\n        totalpoints = parseInt(msg.payload.dynamicresults.breakdown[0].point[i]._);\n        flow.set('totalpoints',totalpoints);\n        return {\"payload\":{totalpoints:totalpoints}};\n        \n    }\n    \n}\n\n\nreturn;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1260,
        "wires": [
            [
                "03b3b4cadbdf9e34"
            ]
        ]
    },
    {
        "id": "bcb9b861df7e6958",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Score Data Raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 920,
        "wires": []
    },
    {
        "id": "1e6f9143a325a577",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "UTF8",
        "func": "msg.payload=msg.payload.toString('UTF8');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 1080,
        "wires": [
            [
                "d2cdb7808cce0e9c"
            ]
        ]
    },
    {
        "id": "aec65d796aed9cee",
        "type": "link out",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Score OUT",
        "mode": "link",
        "links": [
            "9ac6b8134108e3b3",
            "77252a3ad3a5f5aa"
        ],
        "x": 1295,
        "y": 980,
        "wires": []
    },
    {
        "id": "97ed253958c48009",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "If Score != 0",
        "property": "payload.dynamicresults.score[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1210,
        "y": 1080,
        "wires": [
            [
                "31d7202b2b50131d",
                "06ef39d063a5a0f6",
                "bcb9b861df7e6958",
                "aec65d796aed9cee",
                "aad501d4eeed3f6c",
                "77a4afb43fb7bdbd"
            ]
        ]
    },
    {
        "id": "1f0aa7e6a472bfd6",
        "type": "comment",
        "z": "407d2b774fe67647",
        "name": "To Do",
        "info": "Graph or plot seen spots vs actual qsos in the log\n\nSpectator dashboard where you can stream to YouTube/Twitch/FB to show off Amateur Radio and contesting without showing your score\n\nPopulate PC computers names automatically from the XML UDP packets and stick in global variable\n\nChoropleth map for working states/sections/zones\n\nScoreboard integration in the top ribbon bar\n\nDXLog integration\n\n\n",
        "x": 170,
        "y": 240,
        "wires": []
    },
    {
        "id": "16d0479e79379b72",
        "type": "comment",
        "z": "407d2b774fe67647",
        "name": "Issues",
        "info": "Please log issues at the following locations \n\n1) [https://github.com/kylekrieg/Node-Red-Contesting-Dashboard/issues](https://github.com/kylekrieg/Node-Red-Contesting-Dashboard/issues)\n\n2) [https://groups.io/g/nodered-hamradio](https://groups.io/g/nodered-hamradio)",
        "x": 150,
        "y": 300,
        "wires": []
    },
    {
        "id": "aad501d4eeed3f6c",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Total Multi Array Parse",
        "func": "if (msg.payload.dynamicresults.breakdown[0].mult == undefined)\n{\n    flow.set('totalmults',null)\n    return {\"payload\":{totalmults:0}};\n}\n\nlet arraylength = msg.payload.dynamicresults.breakdown[0].mult.length\nlet totalmults = 0;\n\nfor (let i=0; i < msg.payload.dynamicresults.breakdown[0].mult.length; i++)\n{\n    \n    if (msg.payload.dynamicresults.breakdown[0].mult[i].$.band == \"total\" && msg.payload.dynamicresults.breakdown[0].mult[i].$.mode == \"ALL\")\n    {\n        totalmults = parseInt(msg.payload.dynamicresults.breakdown[0].mult[i]._)\n//        totalmults = totalmults + total;\n        break;\n    }\n    \n}\nflow.set('totalmults',totalmults);\nreturn {\"payload\":{totalmults:totalmults}};\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1160,
        "wires": [
            [
                "ba53f01105c0383d"
            ]
        ]
    },
    {
        "id": "7f7e224622dc09f5",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Total Multi Array Parse_old",
        "func": "//if (msg.payload.score == 0)\n//{\n//    return {\"payload\":{totalmult:0}};\n//}\n\nlet arraylength = msg.payload.dynamicresults.breakdown[0].mult.length\nlet totalmult = 0;\n//return {\"payload\":{arraylength:arraylength}};\n\n\nif (arraylength == 0)\n{\n\ttotalmult = msg.payload.dynamicresults.breakdown[0].mult[0]._\n\treturn {\"payload\":{totalmult:totalmult}}\n}\n\ntotalmult = msg.payload.dynamicresults.breakdown[0].mult[arraylength-2]._;\n\nreturn {\"payload\":{totalmult:totalmult}};\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "622fed8ae8f6a5d2",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Contest != Empty",
        "property": "payload.dynamicresults.contest",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1010,
        "y": 1080,
        "wires": [
            [
                "97ed253958c48009"
            ]
        ]
    },
    {
        "id": "e7a05f31a1a776a2",
        "type": "comment",
        "z": "407d2b774fe67647",
        "name": "Standard Output",
        "info": "`{\n   \"payload\":{\n      \"name\":\"AA0Z\",\n      \"lat\":\"38.58\",\n      \"lon\":\"-90.29\",\n      \"ttl\":1200,\n      \"op\":\"AA0Z\",\n      \"band\":\"21\",\n      \"mode\":\"USB\",\n      \"isrunqso\":\"1\",\n      \"exchange\":\"\",\n      \"section\":\"\",\n      \"ID\":\"fa753cd2ec5f4f5a82a46063e895d173\",\n      \"distance_km\":405,\n      \"distance_miles\":252\n   },\n   \"fromip\":\"192.168.1.119:57670\",\n   \"ip\":\"192.168.1.119\",\n   \"port\":57670,\n   \"_msgid\":\"1a3050bba95254c1\",\n   \"qsotype\":\"qso\",\n   \"_event\":\"node:677d263669792c2d\",\n   \"original\":{\n      \"app\":[\n         \"N1MM\"\n      ],\n      \"contestname\":[\n         \"CQWPXSSB\"\n      ],\n      \"contestnr\":[\n         \"1\"\n      ],\n      \"timestamp\":[\n         \"2022-04-13 17:02:05\"\n      ],\n      \"mycall\":[\n         \"AA0Z\"\n      ],\n      \"band\":[\n         \"21\"\n      ],\n      \"rxfreq\":[\n         \"2130000\"\n      ],\n      \"txfreq\":[\n         \"2130000\"\n      ],\n      \"operator\":[\n         \"AA0Z\"\n      ],\n      \"mode\":[\n         \"USB\"\n      ],\n      \"call\":[\n         \"AA0Z\"\n      ],\n      \"countryprefix\":[\n         \"K\"\n      ],\n      \"wpxprefix\":[\n         \"AA0\"\n      ],\n      \"stationprefix\":[\n         \"AA0Z\"\n      ],\n      \"continent\":[\n         \"NA\"\n      ],\n      \"snt\":[\n         \"59\"\n      ],\n      \"sntnr\":[\n         \"62\"\n      ],\n      \"rcv\":[\n         \"59\"\n      ],\n      \"rcvnr\":[\n         \"7\"\n      ],\n      \"gridsquare\":[\n         \"\"\n      ],\n      \"exchange1\":[\n         \"\"\n      ],\n      \"section\":[\n         \"\"\n      ],\n      \"comment\":[\n         \"\"\n      ],\n      \"qth\":[\n         \"\"\n      ],\n      \"name\":[\n         \"\"\n      ],\n      \"power\":[\n         \"\"\n      ],\n      \"misctext\":[\n         \"\"\n      ],\n      \"zone\":[\n         \"4\"\n      ],\n      \"prec\":[\n         \"\"\n      ],\n      \"ck\":[\n         \"0\"\n      ],\n      \"ismultiplier1\":[\n         \"0\"\n      ],\n      \"ismultiplier2\":[\n         \"0\"\n      ],\n      \"ismultiplier3\":[\n         \"0\"\n      ],\n      \"points\":[\n         \"0\"\n      ],\n      \"radionr\":[\n         \"2\"\n      ],\n      \"run1run2\":[\n         \"1\"\n      ],\n      \"RoverLocation\":[\n         \"\"\n      ],\n      \"RadioInterfaced\":[\n         \"0\"\n      ],\n      \"NetworkedCompNr\":[\n         \"0\"\n      ],\n      \"IsOriginal\":[\n         \"True\"\n      ],\n      \"NetBiosName\":[\n         \"AA0Z-STREAM\"\n      ],\n      \"IsRunQSO\":[\n         \"1\"\n      ],\n      \"StationName\":[\n         \"AA0Z-STREAM\"\n      ],\n      \"ID\":[\n         \"fa753cd2ec5f4f5a82a46063e895d173\"\n      ],\n      \"IsClaimedQso\":[\n         \"1\"\n      ]\n   },\n   \"hamqthkey\":\"062aa7cc923e58443c553a0d086319b29cefcde1\",\n   \"statusCode\":200,\n   \"headers\":{\n      \"date\":\"Wed, 13 Apr 2022 17:02:04 GMT\",\n      \"server\":\"Apache/2.4.18 (Ubuntu)\",\n      \"access-control-allow-origin\":\"*\",\n      \"expires\":\"Thu, 19 Nov 1981 08:52:00 GMT\",\n      \"cache-control\":\"no-store, no-cache, must-revalidate, post-check=0, pre-check=0\",\n      \"pragma\":\"no-cache\",\n      \"set-cookie\":[\n         \"nette-browser=r2gbbaxo71; path=/; domain=.hamqth.com; httponly\",\n         \"PHPSESSID=kup08664dnc4bu1bia82bi5ku4; expires=Fri, 13-May-2022 17:02:04 GMT; Max-Age=2592000; path=/; domain=.hamqth.com; HttpOnly\",\n         \"hamqthlang=en; expires=Fri, 22-Jul-2022 17:02:04 GMT; Max-Age=8640000\"\n      ],\n      \"vary\":\"Accept-Encoding\",\n      \"content-length\":\"1023\",\n      \"connection\":\"close\",\n      \"content-type\":\"application/xml\",\n      \"x-node-red-request-node\":\"3ffbed4d\"\n   },\n   \"responseUrl\":\"https://www.hamqth.com/xml.php?id=062aa7cc923e58443c553a0d086319b29cefcde1&callsign=AA0Z&prg=CONTEST_DASHBOARD\",\n   \"redirectList\":[\n      \n   ],\n   \"retry\":0,\n   \"responseCookies\":{\n      \"nette-browser\":{\n         \"path\":\"/\",\n         \"domain\":\".hamqth.com\",\n         \"value\":\"r2gbbaxo71\"\n      },\n      \"PHPSESSID\":{\n         \"expires\":\"Fri, 13-May-2022 17:02:04 GMT\",\n         \"Max-Age\":\"2592000\",\n         \"path\":\"/\",\n         \"domain\":\".hamqth.com\",\n         \"value\":\"kup08664dnc4bu1bia82bi5ku4\"\n      },\n      \"hamqthlang\":{\n         \"expires\":\"Fri, 22-Jul-2022 17:02:04 GMT\",\n         \"Max-Age\":\"8640000\",\n         \"value\":\"en\"\n      }\n   },\n   \"HamQTH\":{\n      \"$\":{\n         \"version\":\"2.8\",\n         \"xmlns\":\"https://www.hamqth.com\"\n      },\n      \"search\":[\n         {\n            \"callsign\":[\n               \"aa0z\"\n            ],\n            \"nick\":[\n               \"Kyle Krieg\"\n            ],\n            \"qth\":[\n               \"St. Louis\"\n            ],\n            \"country\":[\n               \"United States\"\n            ],\n            \"adif\":[\n               \"291\"\n            ],\n            \"itu\":[\n               \"7\"\n            ],\n            \"cq\":[\n               \"4\"\n            ],\n            \"grid\":[\n               \"EM48\"\n            ],\n            \"adr_name\":[\n               \"Kyle T Krieg\"\n            ],\n            \"adr_street1\":[\n               \"5620 Delor\"\n            ],\n            \"adr_city\":[\n               \"Saint Louis\"\n            ],\n            \"adr_zip\":[\n               \"63109\"\n            ],\n            \"adr_country\":[\n               \"United States\"\n            ],\n            \"adr_adif\":[\n               \"291\"\n            ],\n            \"us_state\":[\n               \"MO\"\n            ],\n            \"us_county\":[\n               \"St. Louis city\"\n            ],\n            \"lotw\":[\n               \"?\"\n            ],\n            \"qsldirect\":[\n               \"?\"\n            ],\n            \"qsl\":[\n               \"?\"\n            ],\n            \"eqsl\":[\n               \"?\"\n            ],\n            \"email\":[\n               \"kylekrieg@gmail.com\"\n            ],\n            \"latitude\":[\n               \n            ],\n            \"longitude\":[\n               \n            ],\n            \"continent\":[\n               \"\"\n            ],\n            \"utc_offset\":[\n               \"6\"\n            ],\n            \"picture\":[\n               \"https://www.hamqth.com/images/default/antennas6.png\"\n            ]\n         }\n      ]\n   }\n}`",
        "x": 160,
        "y": 180,
        "wires": []
    },
    {
        "id": "77a4afb43fb7bdbd",
        "type": "rbe",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "RBE Total Score",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.dynamicresults.score[0]",
        "topi": "topic",
        "x": 1480,
        "y": 960,
        "wires": [
            [
                "7d8436d8a3a5422b",
                "a9c362fc3c6ac624"
            ]
        ]
    },
    {
        "id": "a9c362fc3c6ac624",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1660,
        "y": 1000,
        "wires": [
            [
                "49c503a250b35428"
            ]
        ]
    },
    {
        "id": "7d8436d8a3a5422b",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Color Green",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#62FF52",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 960,
        "wires": [
            [
                "2cdd5ffb3ac01f73"
            ]
        ]
    },
    {
        "id": "49c503a250b35428",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Color White",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 1000,
        "wires": [
            [
                "2cdd5ffb3ac01f73"
            ]
        ]
    },
    {
        "id": "3ba4521f148eac8c",
        "type": "rbe",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "RBE Total QSOs",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.totalnoqsos",
        "topi": "topic",
        "x": 1670,
        "y": 1060,
        "wires": [
            [
                "e21c45667c4cb46a",
                "e2f41f09bb088749"
            ]
        ]
    },
    {
        "id": "e2f41f09bb088749",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1840,
        "y": 1100,
        "wires": [
            [
                "a08bd99d57f55d64"
            ]
        ]
    },
    {
        "id": "e21c45667c4cb46a",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Color Green",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#62FF52",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 1060,
        "wires": [
            [
                "9b7d271988034596"
            ]
        ]
    },
    {
        "id": "a08bd99d57f55d64",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Color White",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1100,
        "wires": [
            [
                "9b7d271988034596"
            ]
        ]
    },
    {
        "id": "ba53f01105c0383d",
        "type": "rbe",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "RBE Total Mults",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.totalmults",
        "topi": "topic",
        "x": 1660,
        "y": 1160,
        "wires": [
            [
                "91decfc57d48218c",
                "db019a0c1478765c"
            ]
        ]
    },
    {
        "id": "db019a0c1478765c",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1820,
        "y": 1200,
        "wires": [
            [
                "eecdc889bd3900f6"
            ]
        ]
    },
    {
        "id": "91decfc57d48218c",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Color Green",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#62FF52",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 1160,
        "wires": [
            [
                "289442fe7c0d95f9"
            ]
        ]
    },
    {
        "id": "eecdc889bd3900f6",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Color White",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 1200,
        "wires": [
            [
                "289442fe7c0d95f9"
            ]
        ]
    },
    {
        "id": "03b3b4cadbdf9e34",
        "type": "rbe",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "RBE Total Points",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.totalpoints",
        "topi": "topic",
        "x": 1670,
        "y": 1260,
        "wires": [
            [
                "8d406adaa39170fb",
                "a7dc412af8237000"
            ]
        ]
    },
    {
        "id": "a7dc412af8237000",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1840,
        "y": 1300,
        "wires": [
            [
                "3c4c7e4533b41d22"
            ]
        ]
    },
    {
        "id": "8d406adaa39170fb",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Color Green",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#62FF52",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1850,
        "y": 1260,
        "wires": [
            [
                "ff83b125cd4af97b"
            ]
        ]
    },
    {
        "id": "3c4c7e4533b41d22",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "Color White",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1300,
        "wires": [
            [
                "ff83b125cd4af97b"
            ]
        ]
    },
    {
        "id": "0a74b80e63e37b51",
        "type": "comment",
        "z": "407d2b774fe67647",
        "name": "Version Control",
        "info": "",
        "x": 140,
        "y": 420,
        "wires": []
    },
    {
        "id": "a74a987615dd4bb9",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "group": "1fd9d5a5d988cd1e",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "Radio 2 Operator Dashboard",
        "label": "Operator",
        "format": "<font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1540,
        "y": 2240,
        "wires": []
    },
    {
        "id": "4fdbbfe296a88bce",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "Station Name",
        "property": "payload.RadioInfo.StationName[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PC1",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC2",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 1740,
        "wires": [
            [
                "f6305d04b2aeb44c",
                "06389f3eea5c1260",
                "e60f3cadbc4e78ff",
                "d0b1af6883fc61b1",
                "cab897702f8a6f57",
                "1497c72e88a8f6b1",
                "b946bc8caa8d1dfa",
                "b9e129bdae4de517",
                "5bbc72a4e604df32"
            ],
            [
                "a74a987615dd4bb9",
                "fb911af0905d8f5d",
                "ccb12f5a5e87937a",
                "27f4e52f97117294",
                "d9503f18f29524db",
                "214b730a1dfad6cb",
                "68eee47c38859dda",
                "90474210b68e90b0"
            ]
        ]
    },
    {
        "id": "fb911af0905d8f5d",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 2200,
        "wires": [
            [
                "f9c9ed275443b030"
            ]
        ]
    },
    {
        "id": "f9c9ed275443b030",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "group": "1fd9d5a5d988cd1e",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "Radio 2 Freq",
        "label": "Freq",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1750,
        "y": 2200,
        "wires": []
    },
    {
        "id": "5c688773c88f9f41",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "group": "1fd9d5a5d988cd1e",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "Radio 2 Status Dashboard",
        "label": "Status",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1540,
        "y": 2320,
        "wires": []
    },
    {
        "id": "ccb12f5a5e87937a",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "group": "1fd9d5a5d988cd1e",
        "order": 2,
        "width": 3,
        "height": 2,
        "name": "Radio 2 Mode Dashboard",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1530,
        "y": 2280,
        "wires": []
    },
    {
        "id": "27f4e52f97117294",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2320,
        "wires": [
            [
                "5c688773c88f9f41"
            ]
        ]
    },
    {
        "id": "f56678090927861d",
        "type": "comment",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "UDP Radio Data XML",
        "info": "",
        "x": 180,
        "y": 1680,
        "wires": []
    },
    {
        "id": "89588cb6bf69a8d0",
        "type": "template",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(call) as rate from qsos where StationName='{{{payload.RadioInfo.StationName}}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1410,
        "y": 2380,
        "wires": [
            [
                "97aba946591c7289"
            ]
        ]
    },
    {
        "id": "97aba946591c7289",
        "type": "sqlite",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1620,
        "y": 2380,
        "wires": [
            [
                "7aa65e21deb3bbf5"
            ]
        ]
    },
    {
        "id": "d37ea6046424b974",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "group": "1fd9d5a5d988cd1e",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "Radio 2 QSO Rate",
        "label": "Q's/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2230,
        "y": 2380,
        "wires": []
    },
    {
        "id": "5d82a0a17d0f57ea",
        "type": "udp in",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "",
        "iface": "",
        "port": "12060",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 100,
        "y": 1740,
        "wires": [
            [
                "bd61ab676c6f7232"
            ]
        ]
    },
    {
        "id": "bd61ab676c6f7232",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "UTF8",
        "func": "msg.payload=msg.payload.toString('UTF8');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 1740,
        "wires": [
            [
                "3d795eb91a1d2b3d"
            ]
        ]
    },
    {
        "id": "3d795eb91a1d2b3d",
        "type": "xml",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 350,
        "y": 1740,
        "wires": [
            [
                "6eccad64a2223ff8"
            ]
        ]
    },
    {
        "id": "d67c999eabb4aba0",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "Radio Data Raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1680,
        "wires": []
    },
    {
        "id": "3e86130caa4f1f80",
        "type": "link out",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "MultiOP Radio Data OUT",
        "mode": "link",
        "links": [
            "93a6eb43a0cd1622",
            "b2e62889b54520fd",
            "254a70483d8805dc",
            "ec08c4c0b055d4fe"
        ],
        "x": 905,
        "y": 1700,
        "wires": []
    },
    {
        "id": "d9503f18f29524db",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1180,
        "y": 2380,
        "wires": [
            [
                "89588cb6bf69a8d0"
            ]
        ]
    },
    {
        "id": "8a9601bf0a7a7faa",
        "type": "subflow:c967abe5be484ee6",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "",
        "x": 1980,
        "y": 2380,
        "wires": [
            [
                "d37ea6046424b974"
            ],
            [
                "d37ea6046424b974"
            ],
            [
                "d37ea6046424b974"
            ]
        ]
    },
    {
        "id": "7aa65e21deb3bbf5",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 2380,
        "wires": [
            [
                "8a9601bf0a7a7faa"
            ]
        ]
    },
    {
        "id": "6eccad64a2223ff8",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "RadioInfo != Null",
        "property": "payload.RadioInfo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1740,
        "wires": [
            [
                "d67c999eabb4aba0",
                "334aadb089f6f0c0"
            ]
        ]
    },
    {
        "id": "334aadb089f6f0c0",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "Category?",
        "property": "category",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "multiop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "so1v",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "so2r",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 710,
        "y": 1740,
        "wires": [
            [
                "4fdbbfe296a88bce",
                "3e86130caa4f1f80",
                "6351dc9d0c3ec453"
            ],
            [
                "4fdbbfe296a88bce",
                "3e86130caa4f1f80"
            ],
            [
                "15fa6dac50ec3359",
                "bb7fdde37dcf367e"
            ]
        ]
    },
    {
        "id": "15fa6dac50ec3359",
        "type": "link out",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "SO2R Radio Info OUT",
        "mode": "link",
        "links": [
            "facc381ab8ee58c9",
            "93a6eb43a0cd1622",
            "935c9a16abfdf6b5",
            "ec08c4c0b055d4fe"
        ],
        "x": 855,
        "y": 1780,
        "wires": []
    },
    {
        "id": "bb7fdde37dcf367e",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "Radio 1 or 2?",
        "property": "payload.RadioInfo.RadioNr[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 1860,
        "wires": [
            [
                "06389f3eea5c1260",
                "e60f3cadbc4e78ff",
                "d0b1af6883fc61b1",
                "cab897702f8a6f57",
                "1497c72e88a8f6b1",
                "b946bc8caa8d1dfa",
                "b9e129bdae4de517",
                "e4e19daf40493fb9",
                "5bbc72a4e604df32"
            ],
            [
                "a74a987615dd4bb9",
                "fb911af0905d8f5d",
                "ccb12f5a5e87937a",
                "27f4e52f97117294",
                "214b730a1dfad6cb",
                "68eee47c38859dda",
                "90474210b68e90b0",
                "d9503f18f29524db"
            ]
        ]
    },
    {
        "id": "214b730a1dfad6cb",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "Function Key Is Empty?",
        "property": "payload.RadioInfo.FunctionKeyCaption[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 2120,
        "wires": [
            [
                "379a02b32eb2de49"
            ],
            [
                "88be1b74fa6788be"
            ]
        ]
    },
    {
        "id": "d6a02ccab960310f",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "group": "1fd9d5a5d988cd1e",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "Radio 2 Macro Dashboard",
        "label": "Macro",
        "format": "<font size=6 font color={{msg.color}}>{{msg.payload.RadioInfo.FunctionKeyCaption[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1990,
        "y": 2120,
        "wires": []
    },
    {
        "id": "379a02b32eb2de49",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "Color Change",
        "func": "if (msg.payload.RadioInfo.IsRunning[0] == \"True\")\n{\n    msg.color = \"#008000\"\n}\n\nif (msg.payload.RadioInfo.IsRunning[0] == \"False\")\n{\n    msg.color = \"#FF0000\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 2120,
        "wires": [
            [
                "d6a02ccab960310f"
            ]
        ]
    },
    {
        "id": "88be1b74fa6788be",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 2160,
        "wires": [
            [
                "d6a02ccab960310f"
            ]
        ]
    },
    {
        "id": "d87f990426df6b87",
        "type": "ui_led",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "order": 7,
        "group": "1fd9d5a5d988cd1e",
        "width": 3,
        "height": 1,
        "label": "TX",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "True",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Radio 2 TX Transmit LED",
        "x": 1770,
        "y": 2020,
        "wires": []
    },
    {
        "id": "68eee47c38859dda",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "Is TX?",
        "func": "let isTX = msg.payload.RadioInfo.IsTransmitting[0]\n\nif (isTX == \"True\")\n{\n    msg.payload = \"True\";\n    return msg;\n}\n\nif (isTX == \"False\")\n{\n    msg.payload = \"False\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 2020,
        "wires": [
            [
                "d87f990426df6b87"
            ]
        ]
    },
    {
        "id": "90474210b68e90b0",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "name": "Is Focus?",
        "func": "let isfocus = msg.payload.RadioInfo.FocusRadioNr[0]\n\nif (isfocus == \"1\")\n{\n    msg.payload = \"False\";\n    return msg;\n}\n\nif (isfocus == \"2\")\n{\n    msg.payload = \"True\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 2060,
        "wires": [
            [
                "c28f1c9baeeba95d"
            ]
        ]
    },
    {
        "id": "c28f1c9baeeba95d",
        "type": "ui_led",
        "z": "407d2b774fe67647",
        "g": "94f44b7ea0e29d1d",
        "order": 8,
        "group": "1fd9d5a5d988cd1e",
        "width": 3,
        "height": 1,
        "label": "Focus",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#0000ff",
                "value": "True",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Radio 2 Focus LED",
        "x": 1750,
        "y": 2060,
        "wires": []
    },
    {
        "id": "f6305d04b2aeb44c",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.RadioInfo.IsTransmitting[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 2060,
        "wires": []
    },
    {
        "id": "6351dc9d0c3ec453",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1640,
        "wires": []
    },
    {
        "id": "c9f5c786.410838",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Label +  Add Multis + Exchange",
        "func": "// Determine what type of map label to display beside the map pin\n\nlet maplabels = global.get('maplabels')\nlet maplabeltype = global.get('maplabeltype')\nlet contesttype = global.get('contesttype')\nlet greatcircle = global.get('greatcirclelines')\n\ndelete msg.payload.ID\n\nif (maplabels == true)\n{\n    if (maplabeltype == \"bandmode\" || maplabeltype == null)\n    {\n        msg.payload.label = msg.payload.band + ' ' + msg.payload.mode;\n    }\n    if (maplabeltype == \"bandonly\")\n    {\n        msg.payload.label = msg.payload.band;\n    }\n    if (maplabeltype == \"modeonly\")\n    {\n        msg.payload.label = msg.payload.mode;\n    }\n    if (maplabeltype == \"callonly\")\n    {\n        msg.payload.label = msg.payload.name\n    }\n        \n}\n\n// Add mults together.  Later in the flow if ismultiplier >= 1 then the contact is a mult.\n\nlet multi1 = msg.original.ismultiplier1[0];\nlet multi2 = msg.original.ismultiplier2[0];\nlet multi3 = msg.original.ismultiplier3[0];\nmsg.payload.ttl = msg.payload.ttl.toString();\n\nvar m1 = parseFloat(multi1);\nvar m2 = parseFloat(multi2);\nvar m3 = parseFloat(multi3);\n\nmsg.payload.ismultiplier = m1 + m2 + m3;\n\n// Determine what type of Exchange to dispaly\n// stateonly, countystate, namestate, sections, grids, zones, power, other or null\n\n\nif (contesttype == \"stateonly\" || contesttype == \"\" || contesttype == \"other\")\n{\n    if (msg.payload.exchange == \"\")\n    {\n        msg.payload.exchange = msg.original.section[0];\n    }\n}\nif (contesttype == \"countystate\")\n{\n    msg.payload.exchange = msg.original.exchange1[0];\n}\nif (contesttype == \"namestate\")\n{\n    msg.payload.exchange = msg.original.name[0] + \" \" + msg.original.section[0];\n}\nif (contesttype == \"sections\")\n{\n    msg.payload.exchange = msg.original.section[0];\n}\nif (contesttype == \"classsection\" || contesttype == \"all\")\n{\n    msg.payload.exchange = msg.original.exchange1[0] + \" \" + msg.original.section[0]\n}\nif (contesttype == \"grids\")\n{\n    msg.payload.exchange = msg.original.gridsquare[0];\n}\nif (contesttype == \"zones\")\n{\n    msg.payload.exchange = msg.original.zone[0];\n}\nif (contesttype == \"serial\")\n{\n    msg.payload.exchange = msg.original.rcvnr[0];\n}\nif (contesttype == \"power\")\n{\n    msg.payload.exchange = msg.original.power[0];\n}\nif (contesttype == \"blank\")\n{\n    msg.payload.exchange = \"----\";\n}\n\nif (msg.payload.exchange == \"\")\n{\n    msg.payload.exchange = msg.original.exchange1[0] + \" \" + msg.original.section[0];\n}\n\n\n// Derminte the location of the great circle lines\n\nlet lat1 = msg.payload.lat\nlet lon1 = msg.payload.lon\nlet lat = parseFloat(lat1);\nlet lon = parseFloat(lon1);\nlet homelat = global.get('homelat');\nlet homelon = global.get('homelon');\n\nif (greatcircle == true)\n{\n    msg.payload.greatcircle = [[homelat,homelon], [lat,lon]]\n\n    if (msg.payload.greatcircle[0][0] == undefined)\n    {\n        delete msg.payload.greatcircle;\n        msg.payload.distance_km = 0;\n        msg.payload.distance_miles = 0;\n    }\n}\n\n// Limit lat and lon to 4 numbers after decimal \n\nmsg.payload.lat = lat.toFixed(5);\nmsg.payload.lon = lon.toFixed(5);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 340,
        "wires": [
            [
                "eaa8defdbb30a4cb",
                "611bebabf791b26b",
                "3617522441b640cb",
                "a6f01856669d3e50",
                "4320ff577c7cb858",
                "fdfd9133ae52097f"
            ]
        ]
    },
    {
        "id": "6c3eca08.f081a4",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "b8ba38b3.abfb98",
        "order": 1,
        "width": 5,
        "height": 2,
        "name": "Last QSO Call Display",
        "label": "Last QSO",
        "format": "<font color={{msg.color}}>{{msg.payload.name}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2140,
        "y": 100,
        "wires": []
    },
    {
        "id": "df39f838.a40908",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "b8ba38b3.abfb98",
        "order": 3,
        "width": 3,
        "height": 2,
        "name": "Last QSO Mode Display",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{msg.payload.mode}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2150,
        "y": 140,
        "wires": []
    },
    {
        "id": "3f8df851.2a35e8",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "b8ba38b3.abfb98",
        "order": 4,
        "width": 6,
        "height": 2,
        "name": "Last QSO Exchange Display",
        "label": "Exchange",
        "format": "<font color={{msg.color}}>{{msg.payload.exchange}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2160,
        "y": 300,
        "wires": []
    },
    {
        "id": "9f9db1ca.0200a",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "b8ba38b3.abfb98",
        "order": 2,
        "width": 3,
        "height": 2,
        "name": "Last QSO Band Display",
        "label": "Band",
        "format": "<font color={{msg.color}}>{{msg.payload.band}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2150,
        "y": 180,
        "wires": []
    },
    {
        "id": "eaa8defdbb30a4cb",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Is Running?",
        "property": "payload.isrunqso",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1490,
        "y": 460,
        "wires": [
            [
                "26d6dfc5398aed9a",
                "17f8857f30cdf7aa"
            ],
            [
                "8150e2eee30748c6",
                "86194a7969acae11"
            ]
        ]
    },
    {
        "id": "c4ca101c43ab8cb0",
        "type": "hourglass",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "",
        "persistId": "",
        "humanizeLocale": "",
        "x": 1960,
        "y": 540,
        "wires": [
            [
                "46edf21ad9fe8580"
            ]
        ]
    },
    {
        "id": "46edf21ad9fe8580",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Add 0 to Countdown",
        "func": "//msg.payload = spot.hours + ':' + spot.minutes + ':' + spot.seconds;\nvar min = 0;\nvar sec = 0;\n\nif (msg.elapsed.time.minutes <= 9)\n{\n    min = '0'+ msg.elapsed.time.minutes;\n}\nelse\n{\n    min = msg.elapsed.time.minutes;\n}\n\nif (msg.elapsed.time.seconds <= 9)\n{\n    sec = '0'+ msg.elapsed.time.seconds;\n}\nelse\n{\n    sec = msg.elapsed.time.seconds;\n}\n\n\nmsg.payload = msg.elapsed.time.hours + ':' + min + ':'+ sec\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 540,
        "wires": [
            [
                "5a216be2bdc202b8"
            ]
        ]
    },
    {
        "id": "7663a3961ad647b3",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Status",
        "props": [
            {
                "p": "command",
                "v": "status",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 1740,
        "y": 420,
        "wires": [
            [
                "c4ca101c43ab8cb0",
                "1c23e47818d36917"
            ]
        ]
    },
    {
        "id": "6697e03dc0ecce50",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "ba8d90f0d4d46eb0",
        "order": 3,
        "width": 5,
        "height": 3,
        "name": "Last S&P QSO Time",
        "label": "Last S&P QSO",
        "format": "<font color=#FF8C00>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2360,
        "y": 380,
        "wires": []
    },
    {
        "id": "1c23e47818d36917",
        "type": "hourglass",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "",
        "persistId": "",
        "humanizeLocale": "",
        "x": 1960,
        "y": 380,
        "wires": [
            [
                "78b62d696464ca78"
            ]
        ]
    },
    {
        "id": "78b62d696464ca78",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Add 0 to Countdown",
        "func": "//msg.payload = spot.hours + ':' + spot.minutes + ':' + spot.seconds;\nvar min = 0;\nvar sec = 0;\n\nif (msg.elapsed.time.minutes <= 9)\n{\n    min = '0'+ msg.elapsed.time.minutes;\n}\nelse\n{\n    min = msg.elapsed.time.minutes;\n}\n\nif (msg.elapsed.time.seconds <= 9)\n{\n    sec = '0'+ msg.elapsed.time.seconds;\n}\nelse\n{\n    sec = msg.elapsed.time.seconds;\n}\n\n\nmsg.payload = msg.elapsed.time.hours + ':' + min + ':'+ sec\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 380,
        "wires": [
            [
                "6697e03dc0ecce50"
            ]
        ]
    },
    {
        "id": "26d6dfc5398aed9a",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Reset Timer",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 380,
        "wires": [
            [
                "1c23e47818d36917"
            ]
        ]
    },
    {
        "id": "8150e2eee30748c6",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Reset Timer",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 540,
        "wires": [
            [
                "c4ca101c43ab8cb0"
            ]
        ]
    },
    {
        "id": "5a216be2bdc202b8",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "ba8d90f0d4d46eb0",
        "order": 1,
        "width": 5,
        "height": 3,
        "name": "Last Run QSO Time",
        "label": "Last Run QSO",
        "format": "<font color=#008000>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2380,
        "y": 540,
        "wires": []
    },
    {
        "id": "d253cee5fb3ba4b9",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "ba8d90f0d4d46eb0",
        "order": 6,
        "width": 5,
        "height": 3,
        "name": "Last Multi QSO Time",
        "label": "Last Mult QSO",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2380,
        "y": 660,
        "wires": []
    },
    {
        "id": "b77db70e05f8b1d9",
        "type": "hourglass",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "",
        "persistId": "",
        "humanizeLocale": "",
        "x": 1960,
        "y": 660,
        "wires": [
            [
                "a0658e82121731a8"
            ]
        ]
    },
    {
        "id": "a0658e82121731a8",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Add 0 to Countdown",
        "func": "//msg.payload = spot.hours + ':' + spot.minutes + ':' + spot.seconds;\nvar min = 0;\nvar sec = 0;\n\nif (msg.elapsed.time.minutes <= 9)\n{\n    min = '0'+ msg.elapsed.time.minutes;\n}\nelse\n{\n    min = msg.elapsed.time.minutes;\n}\n\nif (msg.elapsed.time.seconds <= 9)\n{\n    sec = '0'+ msg.elapsed.time.seconds;\n}\nelse\n{\n    sec = msg.elapsed.time.seconds;\n}\n\n\nmsg.payload = msg.elapsed.time.hours + ':' + min + ':'+ sec\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 660,
        "wires": [
            [
                "d253cee5fb3ba4b9"
            ]
        ]
    },
    {
        "id": "774ff0257828e8ad",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Reset Timer",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1790,
        "y": 660,
        "wires": [
            [
                "b77db70e05f8b1d9"
            ]
        ]
    },
    {
        "id": "611bebabf791b26b",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Is Multiplier?",
        "property": "payload.ismultiplier",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1510,
        "y": 660,
        "wires": [
            [
                "774ff0257828e8ad"
            ]
        ]
    },
    {
        "id": "64a0de9783f751b5",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Status",
        "props": [
            {
                "p": "command",
                "v": "status",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1780,
        "y": 700,
        "wires": [
            [
                "b77db70e05f8b1d9"
            ]
        ]
    },
    {
        "id": "17f8857f30cdf7aa",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "ba8d90f0d4d46eb0",
        "order": 5,
        "width": 5,
        "height": 3,
        "name": "Last S&P QSO",
        "label": "Last S&P QSO",
        "format": "<font color=#FF8C00>{{msg.payload.name}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1780,
        "y": 340,
        "wires": []
    },
    {
        "id": "86194a7969acae11",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "ba8d90f0d4d46eb0",
        "order": 2,
        "width": 5,
        "height": 3,
        "name": "Last Run QSO",
        "label": "Last Run QSO",
        "format": "<font color=#008000>{{msg.payload.name}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1780,
        "y": 580,
        "wires": []
    },
    {
        "id": "56dc3f83cf57a080",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Reset",
        "props": [
            {
                "p": "command",
                "v": "reset",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payloadType": "str",
        "x": 1750,
        "y": 460,
        "wires": [
            [
                "c4ca101c43ab8cb0",
                "1c23e47818d36917"
            ]
        ]
    },
    {
        "id": "fcf9482ddad8b592",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Reset",
        "props": [
            {
                "p": "command",
                "v": "reset",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1790,
        "y": 740,
        "wires": [
            [
                "b77db70e05f8b1d9"
            ]
        ]
    },
    {
        "id": "0ad5d91b01c01497",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 60,
        "wires": []
    },
    {
        "id": "cadea72441280e66",
        "type": "subflow:bedd4acdc0e27dab",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "",
        "x": 520,
        "y": 340,
        "wires": [
            [
                "13d29b4154be030c",
                "825f9b7a2b7fc6e2"
            ],
            []
        ]
    },
    {
        "id": "13d29b4154be030c",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 280,
        "wires": []
    },
    {
        "id": "3617522441b640cb",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 380,
        "wires": []
    },
    {
        "id": "9b9d60245cebf80a",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "b8ba38b3.abfb98",
        "order": 6,
        "width": 5,
        "height": 2,
        "name": "Last QSO OP Display",
        "label": "OP",
        "format": "<font color={{msg.color}}>{{msg.payload.op}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2140,
        "y": 220,
        "wires": []
    },
    {
        "id": "e4e81a5987819415",
        "type": "link in",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Dashboard IN",
        "links": [
            "677d263669792c2d"
        ],
        "x": 315,
        "y": 340,
        "wires": [
            [
                "cadea72441280e66",
                "12de6739c2037829"
            ]
        ]
    },
    {
        "id": "b560bd86dc5c87f6",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "b5a72874a2f95ce4",
        "name": "Inject Init Layer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1360,
        "y": 120,
        "wires": [
            [
                "1fef8af3224d3ace"
            ]
        ]
    },
    {
        "id": "1fef8af3224d3ace",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "b5a72874a2f95ce4",
        "name": "Inject Init Layer",
        "func": "let lat = global.get('homelat');\nlet lon = global.get('homelon');\nvar command_legend = {\n    \"legend\": \"<b>Band Pin Color</b></br> <i style=\\\"background: #00FF00\\\"></i> 2M<br> <i style=\\\"background: #FFFFFF\\\"></i> 6M<br> <i style=\\\"background: #FF8C00\\\"></i> 10M<br> <i style=\\\"background: #FFFF00\\\"></i> 15M<br> <i style=\\\"background: #FF0000\\\"></i> 20M<br> <i style=\\\"background: #0000FF\\\"></i> 40M<br> <i style=\\\"background: #008000\\\"></i> 80M<br> <i style=\\\"background: #800080\\\"></i> 160M<br> <i style=\\\"background: #000000\\\"></i> Else<br> \",\n    \"button\": {\n        \"name\": \"Center Map\",\n        \"icon\": \"fa-square\",\n        \"position\": \"topleft\"\n    }\n}\nreturn { payload: { name: \"home\", lat: lat, lon: lon, icon: \"fa-home\", layer: \"Home\", command: command_legend } };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 120,
        "wires": [
            [
                "a6f01856669d3e50"
            ]
        ]
    },
    {
        "id": "593016df038ddee5",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Start",
        "props": [
            {
                "p": "command",
                "v": "start",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": ".1",
        "topic": "",
        "x": 1750,
        "y": 500,
        "wires": [
            [
                "c4ca101c43ab8cb0",
                "1c23e47818d36917"
            ]
        ]
    },
    {
        "id": "696566009ad9261d",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Start",
        "props": [
            {
                "p": "command",
                "v": "start",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": ".1",
        "topic": "",
        "x": 1790,
        "y": 780,
        "wires": [
            [
                "b77db70e05f8b1d9"
            ]
        ]
    },
    {
        "id": "adb1747255633e97",
        "type": "catch",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Hourglass Error Catch",
        "scope": [
            "c4ca101c43ab8cb0",
            "1c23e47818d36917",
            "b77db70e05f8b1d9"
        ],
        "uncaught": false,
        "x": 2080,
        "y": 740,
        "wires": [
            [
                "3d9090ccaadd42cb"
            ]
        ]
    },
    {
        "id": "3d9090ccaadd42cb",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2310,
        "y": 740,
        "wires": []
    },
    {
        "id": "12de6739c2037829",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 500,
        "wires": []
    },
    {
        "id": "ce8f3cdfc915749d",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "group": "b8ba38b3.abfb98",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "Last QSO Distance Display",
        "label": "Distance",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2360,
        "y": 260,
        "wires": []
    },
    {
        "id": "a6f01856669d3e50",
        "type": "ui_worldmap",
        "z": "407d2b774fe67647",
        "g": "b5a72874a2f95ce4",
        "group": "b8ba38b3.abfb98",
        "order": 7,
        "width": 26,
        "height": 16,
        "name": "Worked QSOs Map",
        "lat": "40.3426",
        "lon": "-92.8554",
        "zoom": "4",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/qsos",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,OSMH,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1830,
        "y": 180,
        "wires": []
    },
    {
        "id": "af6a11b52841ef4a",
        "type": "comment",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Standard Payload",
        "info": "`{\n   \"payload\":{\n      \"contactinfo\":{\n         \"app\":[\n            \"N1MM\"\n         ],\n         \"contestname\":[\n            \"CQWPXSSB\"\n         ],\n         \"contestnr\":[\n            \"1\"\n         ],\n         \"timestamp\":[\n            \"2022-04-13 17:02:05\"\n         ],\n         \"mycall\":[\n            \"AA0Z\"\n         ],\n         \"band\":[\n            \"21\"\n         ],\n         \"rxfreq\":[\n            \"2130000\"\n         ],\n         \"txfreq\":[\n            \"2130000\"\n         ],\n         \"operator\":[\n            \"AA0Z\"\n         ],\n         \"mode\":[\n            \"USB\"\n         ],\n         \"call\":[\n            \"AA0Z\"\n         ],\n         \"countryprefix\":[\n            \"K\"\n         ],\n         \"wpxprefix\":[\n            \"AA0\"\n         ],\n         \"stationprefix\":[\n            \"AA0Z\"\n         ],\n         \"continent\":[\n            \"NA\"\n         ],\n         \"snt\":[\n            \"59\"\n         ],\n         \"sntnr\":[\n            \"62\"\n         ],\n         \"rcv\":[\n            \"59\"\n         ],\n         \"rcvnr\":[\n            \"7\"\n         ],\n         \"gridsquare\":[\n            \"\"\n         ],\n         \"exchange1\":[\n            \"\"\n         ],\n         \"section\":[\n            \"\"\n         ],\n         \"comment\":[\n            \"\"\n         ],\n         \"qth\":[\n            \"\"\n         ],\n         \"name\":[\n            \"\"\n         ],\n         \"power\":[\n            \"\"\n         ],\n         \"misctext\":[\n            \"\"\n         ],\n         \"zone\":[\n            \"4\"\n         ],\n         \"prec\":[\n            \"\"\n         ],\n         \"ck\":[\n            \"0\"\n         ],\n         \"ismultiplier1\":[\n            \"0\"\n         ],\n         \"ismultiplier2\":[\n            \"0\"\n         ],\n         \"ismultiplier3\":[\n            \"0\"\n         ],\n         \"points\":[\n            \"0\"\n         ],\n         \"radionr\":[\n            \"2\"\n         ],\n         \"run1run2\":[\n            \"1\"\n         ],\n         \"RoverLocation\":[\n            \"\"\n         ],\n         \"RadioInterfaced\":[\n            \"0\"\n         ],\n         \"NetworkedCompNr\":[\n            \"0\"\n         ],\n         \"IsOriginal\":[\n            \"True\"\n         ],\n         \"NetBiosName\":[\n            \"AA0Z-STREAM\"\n         ],\n         \"IsRunQSO\":[\n            \"1\"\n         ],\n         \"StationName\":[\n            \"AA0Z-STREAM\"\n         ],\n         \"ID\":[\n            \"fa753cd2ec5f4f5a82a46063e895d173\"\n         ],\n         \"IsClaimedQso\":[\n            \"1\"\n         ]\n      }\n   },\n   \"fromip\":\"192.168.1.119:57670\",\n   \"ip\":\"192.168.1.119\",\n   \"port\":57670,\n   \"_msgid\":\"1a3050bba95254c1\",\n   \"qsotype\":\"qso\",\n   \"_event\":\"node:677d263669792c2d\"\n}`",
        "x": 390,
        "y": 300,
        "wires": []
    },
    {
        "id": "cf1edc41b5adc8be",
        "type": "comment",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Standard Payload",
        "info": "`{\n   \"payload\":{\n      \"name\":\"AA0Z\",\n      \"lat\":\"38.58\",\n      \"lon\":\"-90.29\",\n      \"ttl\":\"1200\",\n      \"op\":\"AA0Z\",\n      \"band\":\"15M\",\n      \"mode\":\"SSB\",\n      \"isrunqso\":\"1\",\n      \"exchange\":\"7\",\n      \"section\":\"\",\n      \"ID\":\"fa753cd2ec5f4f5a82a46063e895d173\",\n      \"distance_km\":405,\n      \"distance_miles\":252,\n      \"iconColor\":\"#FFFF00\",\n      \"layer\":\"15M\",\n      \"label\":\"15M\",\n      \"ismultiplier\":0,\n      \"greatcircle\":[\n         [\n            35.295004,\n            -88.301451\n         ],\n         [\n            38.58,\n            -90.29\n         ]\n      ]\n   },\n   \"fromip\":\"192.168.1.119:57670\",\n   \"ip\":\"192.168.1.119\",\n   \"port\":57670,\n   \"_msgid\":\"1a3050bba95254c1\",\n   \"qsotype\":\"qso\",\n   \"_event\":\"node:677d263669792c2d\",\n   \"original\":{\n      \"app\":[\n         \"N1MM\"\n      ],\n      \"contestname\":[\n         \"CQWPXSSB\"\n      ],\n      \"contestnr\":[\n         \"1\"\n      ],\n      \"timestamp\":[\n         \"2022-04-13 17:02:05\"\n      ],\n      \"mycall\":[\n         \"AA0Z\"\n      ],\n      \"band\":[\n         \"21\"\n      ],\n      \"rxfreq\":[\n         \"2130000\"\n      ],\n      \"txfreq\":[\n         \"2130000\"\n      ],\n      \"operator\":[\n         \"AA0Z\"\n      ],\n      \"mode\":[\n         \"USB\"\n      ],\n      \"call\":[\n         \"AA0Z\"\n      ],\n      \"countryprefix\":[\n         \"K\"\n      ],\n      \"wpxprefix\":[\n         \"AA0\"\n      ],\n      \"stationprefix\":[\n         \"AA0Z\"\n      ],\n      \"continent\":[\n         \"NA\"\n      ],\n      \"snt\":[\n         \"59\"\n      ],\n      \"sntnr\":[\n         \"62\"\n      ],\n      \"rcv\":[\n         \"59\"\n      ],\n      \"rcvnr\":[\n         \"7\"\n      ],\n      \"gridsquare\":[\n         \"\"\n      ],\n      \"exchange1\":[\n         \"\"\n      ],\n      \"section\":[\n         \"\"\n      ],\n      \"comment\":[\n         \"\"\n      ],\n      \"qth\":[\n         \"\"\n      ],\n      \"name\":[\n         \"\"\n      ],\n      \"power\":[\n         \"\"\n      ],\n      \"misctext\":[\n         \"\"\n      ],\n      \"zone\":[\n         \"4\"\n      ],\n      \"prec\":[\n         \"\"\n      ],\n      \"ck\":[\n         \"0\"\n      ],\n      \"ismultiplier1\":[\n         \"0\"\n      ],\n      \"ismultiplier2\":[\n         \"0\"\n      ],\n      \"ismultiplier3\":[\n         \"0\"\n      ],\n      \"points\":[\n         \"0\"\n      ],\n      \"radionr\":[\n         \"2\"\n      ],\n      \"run1run2\":[\n         \"1\"\n      ],\n      \"RoverLocation\":[\n         \"\"\n      ],\n      \"RadioInterfaced\":[\n         \"0\"\n      ],\n      \"NetworkedCompNr\":[\n         \"0\"\n      ],\n      \"IsOriginal\":[\n         \"True\"\n      ],\n      \"NetBiosName\":[\n         \"AA0Z-STREAM\"\n      ],\n      \"IsRunQSO\":[\n         \"1\"\n      ],\n      \"StationName\":[\n         \"AA0Z-STREAM\"\n      ],\n      \"ID\":[\n         \"fa753cd2ec5f4f5a82a46063e895d173\"\n      ],\n      \"IsClaimedQso\":[\n         \"1\"\n      ]\n   },\n   \"hamqthkey\":\"062aa7cc923e58443c553a0d086319b29cefcde1\",\n   \"statusCode\":200,\n   \"headers\":{\n      \"date\":\"Wed, 13 Apr 2022 17:02:04 GMT\",\n      \"server\":\"Apache/2.4.18 (Ubuntu)\",\n      \"access-control-allow-origin\":\"*\",\n      \"expires\":\"Thu, 19 Nov 1981 08:52:00 GMT\",\n      \"cache-control\":\"no-store, no-cache, must-revalidate, post-check=0, pre-check=0\",\n      \"pragma\":\"no-cache\",\n      \"set-cookie\":[\n         \"nette-browser=r2gbbaxo71; path=/; domain=.hamqth.com; httponly\",\n         \"PHPSESSID=kup08664dnc4bu1bia82bi5ku4; expires=Fri, 13-May-2022 17:02:04 GMT; Max-Age=2592000; path=/; domain=.hamqth.com; HttpOnly\",\n         \"hamqthlang=en; expires=Fri, 22-Jul-2022 17:02:04 GMT; Max-Age=8640000\"\n      ],\n      \"vary\":\"Accept-Encoding\",\n      \"content-length\":\"1023\",\n      \"connection\":\"close\",\n      \"content-type\":\"application/xml\",\n      \"x-node-red-request-node\":\"3ffbed4d\"\n   },\n   \"responseUrl\":\"https://www.hamqth.com/xml.php?id=062aa7cc923e58443c553a0d086319b29cefcde1&callsign=AA0Z&prg=CONTEST_DASHBOARD\",\n   \"redirectList\":[\n      \n   ],\n   \"retry\":0,\n   \"responseCookies\":{\n      \"nette-browser\":{\n         \"path\":\"/\",\n         \"domain\":\".hamqth.com\",\n         \"value\":\"r2gbbaxo71\"\n      },\n      \"PHPSESSID\":{\n         \"expires\":\"Fri, 13-May-2022 17:02:04 GMT\",\n         \"Max-Age\":\"2592000\",\n         \"path\":\"/\",\n         \"domain\":\".hamqth.com\",\n         \"value\":\"kup08664dnc4bu1bia82bi5ku4\"\n      },\n      \"hamqthlang\":{\n         \"expires\":\"Fri, 22-Jul-2022 17:02:04 GMT\",\n         \"Max-Age\":\"8640000\",\n         \"value\":\"en\"\n      }\n   },\n   \"HamQTH\":{\n      \"$\":{\n         \"version\":\"2.8\",\n         \"xmlns\":\"https://www.hamqth.com\"\n      },\n      \"search\":[\n         {\n            \"callsign\":[\n               \"aa0z\"\n            ],\n            \"nick\":[\n               \"Kyle Krieg\"\n            ],\n            \"qth\":[\n               \"St. Louis\"\n            ],\n            \"country\":[\n               \"United States\"\n            ],\n            \"adif\":[\n               \"291\"\n            ],\n            \"itu\":[\n               \"7\"\n            ],\n            \"cq\":[\n               \"4\"\n            ],\n            \"grid\":[\n               \"EM48\"\n            ],\n            \"adr_name\":[\n               \"Kyle T Krieg\"\n            ],\n            \"adr_street1\":[\n               \"5620 Delor\"\n            ],\n            \"adr_city\":[\n               \"Saint Louis\"\n            ],\n            \"adr_zip\":[\n               \"63109\"\n            ],\n            \"adr_country\":[\n               \"United States\"\n            ],\n            \"adr_adif\":[\n               \"291\"\n            ],\n            \"us_state\":[\n               \"MO\"\n            ],\n            \"us_county\":[\n               \"St. Louis city\"\n            ],\n            \"lotw\":[\n               \"?\"\n            ],\n            \"qsldirect\":[\n               \"?\"\n            ],\n            \"qsl\":[\n               \"?\"\n            ],\n            \"eqsl\":[\n               \"?\"\n            ],\n            \"email\":[\n               \"kylekrieg@gmail.com\"\n            ],\n            \"latitude\":[\n               \n            ],\n            \"longitude\":[\n               \n            ],\n            \"continent\":[\n               \"\"\n            ],\n            \"utc_offset\":[\n               \"6\"\n            ],\n            \"picture\":[\n               \"https://www.hamqth.com/images/default/antennas6.png\"\n            ]\n         }\n      ]\n   }\n}`",
        "x": 1030,
        "y": 280,
        "wires": []
    },
    {
        "id": "4320ff577c7cb858",
        "type": "link out",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Logged QSO Stream OUT",
        "mode": "link",
        "links": [
            "247347fc62633734",
            "f3117ed04c2dd2ff",
            "fd220d20c3727d7e"
        ],
        "x": 1185,
        "y": 400,
        "wires": []
    },
    {
        "id": "825f9b7a2b7fc6e2",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Lookup Type",
        "property": "qsotype",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "qso",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lookup",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 340,
        "wires": [
            [
                "c9f5c786.410838"
            ],
            [
                "8804affd65082b4f"
            ]
        ]
    },
    {
        "id": "8804affd65082b4f",
        "type": "link out",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Dashboard Lookup OUT",
        "mode": "link",
        "links": [
            "ed79aa0b1ff456e7"
        ],
        "x": 845,
        "y": 380,
        "wires": []
    },
    {
        "id": "6c1de6ee7473fac9",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Get Miles or KM",
        "func": "let miles = msg.payload.distance_miles.toString();\nlet km = msg.payload.distance_km.toString();\n\nlet measurement = global.get('distance_measurement')\n\nif (measurement == undefined)\n{\n    msg.payload = miles + \" M\";\n    return msg;\n}\n\nif (measurement == 'miles')\n{\n    msg.payload = miles + \" M\";\n    return msg;\n}\n\nif (measurement == 'km')\n{\n    msg.payload = km + \" K\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 260,
        "wires": [
            [
                "ce8f3cdfc915749d"
            ]
        ]
    },
    {
        "id": "fdfd9133ae52097f",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "d48758cdf0c8991d",
        "name": "Set Exchange Color",
        "func": "if (msg.payload.ismultiplier >= 1)\n{\n    msg.color = '#FF0000'\n}\nelse\n{\n    msg.color = '#FFFFFF'\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 300,
        "wires": [
            [
                "6c3eca08.f081a4",
                "df39f838.a40908",
                "9f9db1ca.0200a",
                "9b9d60245cebf80a",
                "6c1de6ee7473fac9",
                "3f8df851.2a35e8",
                "0ad5d91b01c01497"
            ]
        ]
    },
    {
        "id": "f2b91a5dc28385a9",
        "type": "link in",
        "z": "407d2b774fe67647",
        "g": "b5a72874a2f95ce4",
        "name": "Clear Map IN",
        "links": [
            "8f4d88abb858be08"
        ],
        "x": 1725,
        "y": 120,
        "wires": [
            [
                "a6f01856669d3e50"
            ]
        ]
    },
    {
        "id": "b0d18fa59cc49c12",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "b5a72874a2f95ce4",
        "name": "Center Map to Lat/Lon",
        "func": "let lat = global.get('homelat');\nlet lon = global.get('homelon');\n\nif (msg.payload.name == \"Center Map\")\n{\n\nreturn {payload : {\"command\":{\"lat\":lat, \"lon\":lon, \"zoom\":4}}}\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 160,
        "wires": [
            [
                "a6f01856669d3e50"
            ]
        ]
    },
    {
        "id": "0d35873cadebf97f",
        "type": "worldmap in",
        "z": "407d2b774fe67647",
        "g": "b5a72874a2f95ce4",
        "name": "",
        "path": "/qsos",
        "events": "connect,disconnect,point,layer,bounds,files,draw,other",
        "x": 1390,
        "y": 200,
        "wires": [
            [
                "b0d18fa59cc49c12"
            ]
        ]
    },
    {
        "id": "415b4ee138125e2e",
        "type": "ui_ui_control",
        "z": "407d2b774fe67647",
        "g": "b5a72874a2f95ce4",
        "name": "Watch Refresh",
        "events": "all",
        "x": 1020,
        "y": 160,
        "wires": [
            [
                "bc661ac4152269b3"
            ]
        ]
    },
    {
        "id": "bc661ac4152269b3",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "b5a72874a2f95ce4",
        "name": "Center Flag",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"name\":\"Center Map\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 160,
        "wires": [
            [
                "ae7413cce68dfffa"
            ]
        ]
    },
    {
        "id": "ae7413cce68dfffa",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "b5a72874a2f95ce4",
        "name": "3s",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1350,
        "y": 160,
        "wires": [
            [
                "b0d18fa59cc49c12"
            ]
        ]
    },
    {
        "id": "0a5bfb881c2f3bca",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6176c210be856fa7",
        "type": "link in",
        "z": "407d2b774fe67647",
        "g": "81692a3cb68d6cde",
        "name": "Radio_N3FJP",
        "links": [
            "0820988fa43b8a4b",
            "f6dcf7276d984efc"
        ],
        "x": 125,
        "y": 1820,
        "wires": [
            [
                "bd61ab676c6f7232"
            ]
        ]
    },
    {
        "id": "39b7ba7404fb4193",
        "type": "link in",
        "z": "407d2b774fe67647",
        "g": "4f4b9f0c82968b60",
        "name": "link in 1",
        "links": [
            "f6dcf7276d984efc"
        ],
        "x": 375,
        "y": 960,
        "wires": [
            [
                "1e6f9143a325a577"
            ]
        ]
    },
    {
        "id": "8de09b93172d4977",
        "type": "ui_led",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "order": 8,
        "group": "d5edca762660bedf",
        "width": 3,
        "height": 1,
        "label": "Focus",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#0000ff",
                "value": "True",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Radio 1 Focus LED",
        "x": 1750,
        "y": 1920,
        "wires": []
    },
    {
        "id": "06389f3eea5c1260",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "Is Focus?",
        "func": "let isfocus = msg.payload.RadioInfo.FocusRadioNr[0]\n\nif (isfocus == \"1\")\n{\n    msg.payload = \"True\";\n    return msg;\n}\n\nif (isfocus == \"2\")\n{\n    msg.payload = \"False\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1920,
        "wires": [
            [
                "8de09b93172d4977"
            ]
        ]
    },
    {
        "id": "e60f3cadbc4e78ff",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "Is TX?",
        "func": "let isTX = msg.payload.RadioInfo.IsTransmitting[0]\n\nif (isTX == \"True\")\n{\n    msg.payload = \"True\";\n    return msg;\n}\n\nif (isTX == \"False\")\n{\n    msg.payload = \"False\";\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1880,
        "wires": [
            [
                "72403bb4391a1d55",
                "eb5d10e3d8e57f2d"
            ]
        ]
    },
    {
        "id": "72403bb4391a1d55",
        "type": "ui_led",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "order": 7,
        "group": "d5edca762660bedf",
        "width": 3,
        "height": 1,
        "label": "TX",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "True",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Radio 1 TX Transmit LED",
        "x": 1770,
        "y": 1880,
        "wires": []
    },
    {
        "id": "eb5d10e3d8e57f2d",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 1840,
        "wires": []
    },
    {
        "id": "41776f0e7dfe6145",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1740,
        "y": 1820,
        "wires": [
            [
                "644bc9391ec895bf"
            ]
        ]
    },
    {
        "id": "9ac7455179b0e1d0",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "Color Change",
        "func": "if (msg.payload.RadioInfo.IsRunning[0] == \"True\")\n{\n    msg.color = \"#008000\"\n}\n\nif (msg.payload.RadioInfo.IsRunning[0] == \"False\")\n{\n    msg.color = \"#FF0000\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1780,
        "wires": [
            [
                "644bc9391ec895bf"
            ]
        ]
    },
    {
        "id": "644bc9391ec895bf",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "group": "d5edca762660bedf",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "Radio 1 Macro Dashboard",
        "label": "Macro",
        "format": "<font size=6 font color={{msg.color}}>{{msg.payload.RadioInfo.FunctionKeyCaption[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1990,
        "y": 1780,
        "wires": []
    },
    {
        "id": "144f676e5802f76c",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "group": "d5edca762660bedf",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "Radio 1 Freq Dashboard",
        "label": "Freq",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1770,
        "y": 1740,
        "wires": []
    },
    {
        "id": "d0b1af6883fc61b1",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "Function Key Is Empty?",
        "property": "payload.RadioInfo.FunctionKeyCaption[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 1780,
        "wires": [
            [
                "9ac7455179b0e1d0"
            ],
            [
                "41776f0e7dfe6145"
            ]
        ]
    },
    {
        "id": "cab897702f8a6f57",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 1740,
        "wires": [
            [
                "144f676e5802f76c"
            ]
        ]
    },
    {
        "id": "1497c72e88a8f6b1",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "group": "d5edca762660bedf",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "Radio 1 Operator Dashboard",
        "label": "Operator",
        "format": "<font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1520,
        "y": 1700,
        "wires": []
    },
    {
        "id": "b946bc8caa8d1dfa",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "group": "d5edca762660bedf",
        "order": 2,
        "width": 3,
        "height": 2,
        "name": "Radio 1 Mode Dashboard",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1510,
        "y": 1660,
        "wires": []
    },
    {
        "id": "323b33d53e2baade",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "group": "d5edca762660bedf",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "Radio 1 Status Dashboard",
        "label": "Status",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1520,
        "y": 1620,
        "wires": []
    },
    {
        "id": "b9e129bdae4de517",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1620,
        "wires": [
            [
                "323b33d53e2baade"
            ]
        ]
    },
    {
        "id": "b1abd7f75fd32f6f",
        "type": "template",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(call) as rate from qsos where StationName='{{{payload.RadioInfo.StationName}}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1370,
        "y": 1560,
        "wires": [
            [
                "3d1ebae60e058858"
            ]
        ]
    },
    {
        "id": "5bbc72a4e604df32",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1120,
        "y": 1560,
        "wires": [
            [
                "b1abd7f75fd32f6f"
            ]
        ]
    },
    {
        "id": "e4e19daf40493fb9",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 1820,
        "wires": []
    },
    {
        "id": "3d1ebae60e058858",
        "type": "sqlite",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1600,
        "y": 1560,
        "wires": [
            [
                "572d2215a6ea16bb"
            ]
        ]
    },
    {
        "id": "572d2215a6ea16bb",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 1560,
        "wires": [
            [
                "5a5a85080d107e92"
            ]
        ]
    },
    {
        "id": "5a5a85080d107e92",
        "type": "subflow:c967abe5be484ee6",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "name": "",
        "x": 1980,
        "y": 1560,
        "wires": [
            [
                "0baeb2e7ae556661"
            ],
            [
                "0baeb2e7ae556661"
            ],
            [
                "0baeb2e7ae556661"
            ]
        ]
    },
    {
        "id": "0baeb2e7ae556661",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "a9afc3cb2db49407",
        "group": "d5edca762660bedf",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "Radio 1 QSO Rate Dashboard",
        "label": "Q's/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2290,
        "y": 1560,
        "wires": []
    },
    {
        "id": "b829243f42385969",
        "type": "sqlite",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 3060,
        "y": 900,
        "wires": [
            [
                "d13e3608177fffc1"
            ]
        ]
    },
    {
        "id": "ec43df8648bddaa2",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 2430,
        "y": 900,
        "wires": [
            [
                "d3b97c2f3316c129"
            ]
        ]
    },
    {
        "id": "870d2ff5a5b268a5",
        "type": "template",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(*) as rate from qsos where timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 2850,
        "y": 900,
        "wires": [
            [
                "b829243f42385969"
            ]
        ]
    },
    {
        "id": "6d122d15af375ab6",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "group": "aeac5355e22fa2ee",
        "order": 5,
        "width": 5,
        "height": 3,
        "name": "Current Total QSO Rate",
        "label": "<center>Current Hr/Q Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font><font color={{msg.color}}></font>",
        "layout": "col-center",
        "className": "dashboard_large_value",
        "x": 3670,
        "y": 920,
        "wires": []
    },
    {
        "id": "22fe07a2c13d18ff",
        "type": "comment",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Calc Current QSO Rate",
        "info": "",
        "x": 2480,
        "y": 980,
        "wires": []
    },
    {
        "id": "816d3f7e84dd1bf0",
        "type": "ui_chart",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Total QSO Rate Chart",
        "group": "c53924de5e016c59",
        "order": 1,
        "width": 12,
        "height": 4,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4000,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "577c577fed5bf005",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2510,
        "y": 1120,
        "wires": [
            [
                "c700f03ea974bf65"
            ]
        ]
    },
    {
        "id": "61fdced830d7a010",
        "type": "sqlite",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 3080,
        "y": 1120,
        "wires": [
            [
                "fc6208525bfd2db6"
            ]
        ]
    },
    {
        "id": "fc6208525bfd2db6",
        "type": "split",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3230,
        "y": 1120,
        "wires": [
            [
                "e616bcdb29792aa8"
            ]
        ]
    },
    {
        "id": "e616bcdb29792aa8",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Set Topic & Payload",
        "func": "let total = msg.payload.total;\nlet band = msg.payload.band;\nlet control = null\n\nif (band == '1.8')\n{\n    band = '160M'\n}\nif (band == '3.5')\n{\n    band = '80M'\n}\nif (band == '7')\n{\n    band = '40M'\n}\nif (band == '14')\n{\n    band = '20M'\n}\nif (band == '21')\n{\n    band = '15M'\n}\nif (band == '28')\n{\n    band = '10M'\n}\n\nmsg.topic = band;\nmsg.payload = total;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3420,
        "y": 1120,
        "wires": [
            [
                "5d54abefaa3f6011"
            ]
        ]
    },
    {
        "id": "002dded44b1b5ee6",
        "type": "template",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "SQL Select Band",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as total, band as band from qsos group by band order by length(band) desc;",
        "output": "str",
        "x": 2890,
        "y": 1120,
        "wires": [
            [
                "61fdced830d7a010"
            ]
        ]
    },
    {
        "id": "e7705b1d662e98c7",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "group": "aeac5355e22fa2ee",
        "order": 6,
        "width": 5,
        "height": 3,
        "name": "Top OP Score/Mults Per Hour",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 4070,
        "y": 1380,
        "wires": []
    },
    {
        "id": "a2c474948039215e",
        "type": "ui_text",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "group": "ba8d90f0d4d46eb0",
        "order": 7,
        "width": 5,
        "height": 3,
        "name": "Top OP Mults/Distance Stats",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 4060,
        "y": 1260,
        "wires": []
    },
    {
        "id": "ba28175bd864c273",
        "type": "template",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as total, band as band from qsos where timestamp >= datetime('now','-1 hours') group by band;",
        "output": "str",
        "x": 2870,
        "y": 1040,
        "wires": [
            [
                "9ba2b748bca48ba8"
            ]
        ]
    },
    {
        "id": "a806469711612724",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 2470,
        "y": 1040,
        "wires": [
            [
                "afcc0fe55c3cb07e"
            ]
        ]
    },
    {
        "id": "9ba2b748bca48ba8",
        "type": "sqlite",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 3080,
        "y": 1040,
        "wires": [
            [
                "fae0041199166dbc"
            ]
        ]
    },
    {
        "id": "fae0041199166dbc",
        "type": "split",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3230,
        "y": 1040,
        "wires": [
            [
                "1aa94adaa1790106"
            ]
        ]
    },
    {
        "id": "1aa94adaa1790106",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Set Topic & Payload",
        "func": "let total = msg.payload.total;\nlet band = msg.payload.band;\n\nif (band == '1.8')\n{\n    band = '160M'\n}\nif (band == '3.5')\n{\n    band = '80M'\n}\nif (band == '7')\n{\n    band = '40M'\n}\nif (band == '14')\n{\n    band = '20M'\n}\nif (band == '21')\n{\n    band = '15M'\n}\nif (band == '28')\n{\n    band = '10M'\n}\n\nmsg.topic = band;\nmsg.payload = total;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3440,
        "y": 1040,
        "wires": [
            [
                "35dd8fcbbd78da95"
            ]
        ]
    },
    {
        "id": "35dd8fcbbd78da95",
        "type": "ui_chart",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "QSO Rate by Band Chart",
        "group": "390d9212c8d39731",
        "order": 1,
        "width": 12,
        "height": 4,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3990,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "5d54abefaa3f6011",
        "type": "ui_chart",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "QSO Chart by Band",
        "group": "6c1bd04fb9bfea48",
        "order": 1,
        "width": 12,
        "height": 4,
        "label": "",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3980,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "c700f03ea974bf65",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2690,
        "y": 1120,
        "wires": [
            [
                "002dded44b1b5ee6"
            ]
        ]
    },
    {
        "id": "d3b97c2f3316c129",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2630,
        "y": 900,
        "wires": [
            [
                "870d2ff5a5b268a5"
            ]
        ]
    },
    {
        "id": "afcc0fe55c3cb07e",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2670,
        "y": 1040,
        "wires": [
            [
                "ba28175bd864c273"
            ]
        ]
    },
    {
        "id": "6897b580ee50b83f",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2490,
        "y": 1260,
        "wires": [
            [
                "be3cb3b9861c2e31"
            ]
        ]
    },
    {
        "id": "64ca2307721f7954",
        "type": "template",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "SQL Mults Rate per Hour",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(ismultiplier1+ismultiplier2+ismultiplier3) as rate from qsos where timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 3110,
        "y": 1400,
        "wires": [
            [
                "0664e8c97eaa69b8"
            ]
        ]
    },
    {
        "id": "be3cb3b9861c2e31",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2670,
        "y": 1260,
        "wires": [
            [
                "1eb0d9ba4d1bf8d6"
            ]
        ]
    },
    {
        "id": "251ae3f24ba6c178",
        "type": "inject",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2490,
        "y": 1380,
        "wires": [
            [
                "33a1fe7f6bd59c25"
            ]
        ]
    },
    {
        "id": "d1e531d474c42dde",
        "type": "template",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "SQL Top Operator Score",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select operator as operator,\ntotal(points) as points,\ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score\nfrom qsos\ngroup by operator\norder by score desc;",
        "output": "str",
        "x": 3110,
        "y": 1360,
        "wires": [
            [
                "0664e8c97eaa69b8"
            ]
        ]
    },
    {
        "id": "33a1fe7f6bd59c25",
        "type": "delay",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2670,
        "y": 1380,
        "wires": [
            [
                "9757755f9abe81e5"
            ]
        ]
    },
    {
        "id": "bc62893a749a6116",
        "type": "subflow:c967abe5be484ee6",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "",
        "x": 3420,
        "y": 900,
        "wires": [
            [
                "6d122d15af375ab6",
                "8834c50bc7d9a366"
            ],
            [
                "6d122d15af375ab6",
                "8834c50bc7d9a366"
            ],
            [
                "6d122d15af375ab6",
                "8834c50bc7d9a366"
            ]
        ]
    },
    {
        "id": "d13e3608177fffc1",
        "type": "change",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3250,
        "y": 900,
        "wires": [
            [
                "bc62893a749a6116"
            ]
        ]
    },
    {
        "id": "12b4fddb68795a01",
        "type": "link in",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Dashboard to Total QSO Rate & QSO Rate by Band IN",
        "links": [
            "5e1859619292b1b8"
        ],
        "x": 3455,
        "y": 980,
        "wires": [
            [
                "6d122d15af375ab6",
                "816d3f7e84dd1bf0",
                "35dd8fcbbd78da95"
            ]
        ]
    },
    {
        "id": "3fc8a4c3201d42cc",
        "type": "link in",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Dashboard QSO Chart by Band IN",
        "links": [
            "5e1859619292b1b8"
        ],
        "x": 3635,
        "y": 1180,
        "wires": [
            [
                "e7705b1d662e98c7",
                "a2c474948039215e",
                "5d54abefaa3f6011"
            ]
        ]
    },
    {
        "id": "168faf5992e055d7",
        "type": "template",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "SQL Top Distance",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select max(cast(distance as integer)) as max_distance from qsos;",
        "output": "str",
        "x": 3110,
        "y": 1280,
        "wires": [
            [
                "8186c56328392551"
            ]
        ]
    },
    {
        "id": "0664e8c97eaa69b8",
        "type": "sqlite",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 3360,
        "y": 1380,
        "wires": [
            [
                "9cc043acda88da3f"
            ]
        ]
    },
    {
        "id": "1eb0d9ba4d1bf8d6",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Category?",
        "property": "category",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "multiop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "so1v",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "so2r",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2850,
        "y": 1260,
        "wires": [
            [
                "d53bdbd6ba3fdfed"
            ],
            [
                "168faf5992e055d7"
            ],
            [
                "168faf5992e055d7"
            ]
        ]
    },
    {
        "id": "9757755f9abe81e5",
        "type": "switch",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Category?",
        "property": "category",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "multiop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "so1v",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "so2r",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2850,
        "y": 1380,
        "wires": [
            [
                "d1e531d474c42dde"
            ],
            [
                "64ca2307721f7954"
            ],
            [
                "64ca2307721f7954"
            ]
        ]
    },
    {
        "id": "9cc043acda88da3f",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Set Label & Payload",
        "func": "let category = global.get('category')\nlet totalnoqsos = flow.get('totalnoqsos');\nlet totalmults = flow.get('totalmults');\nlet totalpoints = flow.get('totalpoints');\nlet rateperQ = null\nlet rate = null\nmsg.label = null\nlet length = null\n\nif(msg.payload == undefined)\n{\n    msg.payload = 'n/a'\n    return msg;\n}\n\nif (category == \"multiop\")\n{\n    msg.payload = \"<font color=#FFFF00>\" + msg.payload[0].operator;\n    msg.label = \"Top OP Score\";\n    return msg;\n}\n\nif (category == \"so2r\" | category == \"so1v\")\n{\n    if (totalmults == 0 || totalmults == undefined || totalnoqsos == 0 || totalnoqsos == undefined )\n    {\n        rateperQ = 0;\n    }\n    else\n    {\n        rateperQ = totalnoqsos / totalmults;\n        rateperQ = rateperQ.toFixed(1);\n        \n        if (rateperQ < 1)\n        {\n            rateperQ = 0\n        }\n\n    }\n    \n    rate = msg.payload[0].rate\n    \n    length = rate.toString().length + rateperQ.toString().length + 8\n\n    msg.totallength = length;\n    \n    if (length <= 10)\n    {\n        msg.payload = \"<font color=#FFFF00>\" + rate + \"/Hr | \" + rateperQ + \"Qs\"\n    }\n    else\n    {\n        msg.payload = \"<font color=#FFFF00>\" + rate + \"/Hr | \" + rateperQ + \"Qs\"\n    }\n\n    msg.label = \"M/Hr | 1 Mult = \";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 1380,
        "wires": [
            [
                "e7705b1d662e98c7",
                "9d0e444ab32a06f9"
            ]
        ]
    },
    {
        "id": "d53bdbd6ba3fdfed",
        "type": "template",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "SQL Top Operator Multi",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, operator as operator from qsos group by operator order by multiplier desc;",
        "output": "str",
        "x": 3110,
        "y": 1240,
        "wires": [
            [
                "8186c56328392551"
            ]
        ]
    },
    {
        "id": "8186c56328392551",
        "type": "sqlite",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 3360,
        "y": 1260,
        "wires": [
            [
                "0f2162dc3bfae19c"
            ]
        ]
    },
    {
        "id": "0f2162dc3bfae19c",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Set Label & Payload",
        "func": "let category = global.get('category')\nlet distance = global.get('distance_measurement')\n\nif (msg.payload[0].max_distance == null)\n{\n    msg.payload[0].max_distance = 0;\n}\n\nif (category == \"multiop\")\n{\n    msg.payload = \"<font color=#FFFF00>\" + msg.payload[0].operator;\n    msg.label = \"Top OP Mults\";\n    return msg;\n}\n\nif (category == \"so2r\" | category == \"so1v\")\n{\n    if (distance == \"miles\")\n    {\n        msg.payload = \"<font color=#FFFF00>\" + msg.payload[0].max_distance + \" \" + \"M\"\n    }\n    if (distance == \"km\")\n    {\n        msg.payload = \"<font color=#FFFF00>\" + msg.payload[0].max_distance + \" \" + \"Km\"\n    }\n    msg.label = \"Furthest QSO\";\n    return msg;\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 1260,
        "wires": [
            [
                "a2c474948039215e",
                "f0dbae81ebaf286e"
            ]
        ]
    },
    {
        "id": "f0dbae81ebaf286e",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 1200,
        "wires": []
    },
    {
        "id": "9d0e444ab32a06f9",
        "type": "debug",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3810,
        "y": 1320,
        "wires": []
    },
    {
        "id": "8834c50bc7d9a366",
        "type": "function",
        "z": "407d2b774fe67647",
        "g": "26cf0678322d1bb6",
        "name": "Set Rate to Payload",
        "func": "msg.payload = msg.rate\n\n//radiosport.live data\nglobal.set('#currentQrate',msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3680,
        "y": 880,
        "wires": [
            [
                "816d3f7e84dd1bf0"
            ]
        ]
    },
    {
        "id": "4079239a4fd5c11c",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "7fbb5e1689b11c96",
        "order": 1,
        "width": 5,
        "height": 2,
        "name": "RI-Radio 1 Operator",
        "label": "Operator",
        "format": "<font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1420,
        "y": 240,
        "wires": []
    },
    {
        "id": "b884a7032dfb3964",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "04f517e9db4307d1",
        "order": 1,
        "width": 5,
        "height": 2,
        "name": "RI-Radio 2 Operator",
        "label": "Operator",
        "format": "<font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1480,
        "y": 600,
        "wires": []
    },
    {
        "id": "af1d06187a9fdccc",
        "type": "switch",
        "z": "63d876401a56f871",
        "name": "Station Name",
        "property": "payload.RadioInfo.StationName[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PC1",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC2",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC3",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC4",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC5",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC6",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 320,
        "y": 920,
        "wires": [
            [
                "4079239a4fd5c11c",
                "c670964546ae0b06",
                "346e26f12ecee853",
                "f288bcaa2972bb03",
                "0e6c6e43b62e7cd4",
                "c5877e8dd99b4e62",
                "bcb63133f1d58c2f",
                "1c635cbe611077dd"
            ],
            [
                "b884a7032dfb3964",
                "ced635fe1b59f8b9",
                "ed8a415f892888ab",
                "e3316f6b1b477ad8",
                "5b85beefefc8743d",
                "107fc01ab56227ce",
                "fefc7d4c77dca504",
                "b94e85aead67078d"
            ],
            [
                "01ea1ae7f4c7d3e0",
                "8e9dbc818e805489",
                "0f321a04614fd1f0",
                "5c611b698df88c0a",
                "40650919c30de6aa",
                "da1419617e323075",
                "2f224ab81dfe487b",
                "2e21c54be43d8642"
            ],
            [
                "f77601fcb0194cb6",
                "8d5b605d3691bab1",
                "3dd81a1939d7e117",
                "b33185f49ed983fd",
                "b47f27d2853c2495",
                "caf3f7f76c679440",
                "4ad6652ae6d82b00",
                "f0ae975218d92b4d"
            ],
            [
                "0229e39a3516b865",
                "2db6aa1dabfe4b6f",
                "82423ba25e8da23c",
                "3db30b96c7c9b96f",
                "da729aa0eb935bd7",
                "a1d33b13deb1d304",
                "129cf1c30beedec6",
                "eb3c67348bf70742"
            ],
            [
                "2de257ad131f1ba2",
                "bb43fc100f439185",
                "2c582b73d6085693",
                "249a5330f1dc2ce5",
                "77aaa97d6470ce18",
                "88362d3b27d187ed",
                "e0f342e86e901c86",
                "1e68e3b5b9d1998d"
            ]
        ]
    },
    {
        "id": "c670964546ae0b06",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 160,
        "wires": [
            [
                "f5d8df15a55431d6"
            ]
        ]
    },
    {
        "id": "ced635fe1b59f8b9",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 480,
        "wires": [
            [
                "985e40725112bcef"
            ]
        ]
    },
    {
        "id": "f5d8df15a55431d6",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "7fbb5e1689b11c96",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "RI-Radio 1 Freq",
        "label": "Freq",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1600,
        "y": 160,
        "wires": []
    },
    {
        "id": "985e40725112bcef",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "04f517e9db4307d1",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "RI-Radio 2 Freq",
        "label": "Freq",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1640,
        "y": 480,
        "wires": []
    },
    {
        "id": "346e26f12ecee853",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "7fbb5e1689b11c96",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 1 Mode",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1410,
        "y": 280,
        "wires": []
    },
    {
        "id": "f288bcaa2972bb03",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "325870de856b6500"
            ]
        ]
    },
    {
        "id": "325870de856b6500",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "7fbb5e1689b11c96",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 1 Status",
        "label": "Status",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1590,
        "y": 120,
        "wires": []
    },
    {
        "id": "ca555698ddde801e",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "04f517e9db4307d1",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 2 Status",
        "label": "Status",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1650,
        "y": 520,
        "wires": []
    },
    {
        "id": "ed8a415f892888ab",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "04f517e9db4307d1",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 2 Mode",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1470,
        "y": 640,
        "wires": []
    },
    {
        "id": "e3316f6b1b477ad8",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 520,
        "wires": [
            [
                "ca555698ddde801e"
            ]
        ]
    },
    {
        "id": "592c56e3d1449c3e",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(operator) as rate from qsos where operator='{{{payload.RadioInfo.OpCall}}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1610,
        "y": 80,
        "wires": [
            [
                "c1c7c6ce1669d97e"
            ]
        ]
    },
    {
        "id": "c1c7c6ce1669d97e",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1820,
        "y": 80,
        "wires": [
            [
                "3073d60f25abe0f4"
            ]
        ]
    },
    {
        "id": "bed5d086957bf3eb",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "7fbb5e1689b11c96",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 1 OP QSO Rate",
        "label": "OP Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font> ",
        "layout": "col-center",
        "className": "",
        "x": 2450,
        "y": 80,
        "wires": []
    },
    {
        "id": "0e6c6e43b62e7cd4",
        "type": "debug",
        "z": "63d876401a56f871",
        "name": "After Radio 1 Switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 360,
        "wires": []
    },
    {
        "id": "5b85beefefc8743d",
        "type": "debug",
        "z": "63d876401a56f871",
        "name": "After Radio 2 Switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 720,
        "wires": []
    },
    {
        "id": "f34266c5636010da",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(operator) as rate from qsos where operator='{{payload.RadioInfo.OpCall}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1650,
        "y": 440,
        "wires": [
            [
                "8c2c81d60a6b8c62"
            ]
        ]
    },
    {
        "id": "8c2c81d60a6b8c62",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1860,
        "y": 440,
        "wires": [
            [
                "45ddcbd0d057c0bc"
            ]
        ]
    },
    {
        "id": "2dc74f3b33408b91",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "04f517e9db4307d1",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 2 OP QSO Rate",
        "label": "OP Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2430,
        "y": 440,
        "wires": []
    },
    {
        "id": "b2e62889b54520fd",
        "type": "link in",
        "z": "63d876401a56f871",
        "name": "MultiOP Radio Data IN",
        "links": [
            "3e86130caa4f1f80",
            "a96e781180e6e778"
        ],
        "x": 155,
        "y": 920,
        "wires": [
            [
                "af1d06187a9fdccc",
                "bfbc0ca7ae2123b9"
            ]
        ]
    },
    {
        "id": "8e9dbc818e805489",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "9851a548b3e9a744",
        "order": 1,
        "width": 5,
        "height": 2,
        "name": "FI-Radio 3 Operator",
        "label": "Operator",
        "format": "<font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1640,
        "y": 980,
        "wires": []
    },
    {
        "id": "01ea1ae7f4c7d3e0",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 860,
        "wires": [
            [
                "9d5c162828e549f9"
            ]
        ]
    },
    {
        "id": "9d5c162828e549f9",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "9851a548b3e9a744",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "RI-Radio 3 Freq",
        "label": "Freq",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1800,
        "y": 860,
        "wires": []
    },
    {
        "id": "3fe83fa6f3b05861",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "9851a548b3e9a744",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 3 Status",
        "label": "Status",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1790,
        "y": 900,
        "wires": []
    },
    {
        "id": "0f321a04614fd1f0",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "9851a548b3e9a744",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "FI-Radio 3 Mode",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1630,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5c611b698df88c0a",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 900,
        "wires": [
            [
                "3fe83fa6f3b05861"
            ]
        ]
    },
    {
        "id": "40650919c30de6aa",
        "type": "debug",
        "z": "63d876401a56f871",
        "name": "After Radio 3 Switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5fcccd4ae3bc0a9e",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(operator) as rate from qsos where operator='{{payload.RadioInfo.OpCall}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1810,
        "y": 820,
        "wires": [
            [
                "818dd3c57427ad65"
            ]
        ]
    },
    {
        "id": "818dd3c57427ad65",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2020,
        "y": 820,
        "wires": [
            [
                "95c3475ec0e0b4d9"
            ]
        ]
    },
    {
        "id": "1eb96c8eb7139204",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "9851a548b3e9a744",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 3 OP QSO Rate",
        "label": "OP Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2650,
        "y": 820,
        "wires": []
    },
    {
        "id": "8d5b605d3691bab1",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "57f3a809cabd43f5",
        "order": 1,
        "width": 5,
        "height": 2,
        "name": "FI-Radio 4 Operator",
        "label": "Operator",
        "format": "<font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1580,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f77601fcb0194cb6",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1300,
        "wires": [
            [
                "aa9e598a2ae0d2d8"
            ]
        ]
    },
    {
        "id": "aa9e598a2ae0d2d8",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "57f3a809cabd43f5",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "RI-Radio 4 Freq",
        "label": "Freq",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1740,
        "y": 1300,
        "wires": []
    },
    {
        "id": "54253bd63bf7c2e1",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "57f3a809cabd43f5",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 4 Status",
        "label": "Status",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 1340,
        "wires": []
    },
    {
        "id": "3dd81a1939d7e117",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "57f3a809cabd43f5",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "FI-Radio 4 Mode",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1570,
        "y": 1460,
        "wires": []
    },
    {
        "id": "b33185f49ed983fd",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1340,
        "wires": [
            [
                "54253bd63bf7c2e1"
            ]
        ]
    },
    {
        "id": "b47f27d2853c2495",
        "type": "debug",
        "z": "63d876401a56f871",
        "name": "After Radio 4 Switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 1540,
        "wires": []
    },
    {
        "id": "13ab6d0278bf0dd0",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(operator) as rate from qsos where operator='{{payload.RadioInfo.OpCall}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1750,
        "y": 1260,
        "wires": [
            [
                "323857831b25bb1f"
            ]
        ]
    },
    {
        "id": "323857831b25bb1f",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1960,
        "y": 1260,
        "wires": [
            [
                "24c3fc53c5522a8d"
            ]
        ]
    },
    {
        "id": "809b555216468185",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "57f3a809cabd43f5",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 4 OP QSO Rate",
        "label": "OP Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2550,
        "y": 1260,
        "wires": []
    },
    {
        "id": "985d6537f85a2ef7",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "7fbb5e1689b11c96",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 1 Band QSO Rate",
        "label": "Band Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2540,
        "y": 320,
        "wires": []
    },
    {
        "id": "70f732a486ad8790",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "04f517e9db4307d1",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 2 Band QSO Rate",
        "label": "Band Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2620,
        "y": 680,
        "wires": []
    },
    {
        "id": "83c7360db95301bd",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "9851a548b3e9a744",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 3 Band QSO Rate",
        "label": "Band Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2800,
        "y": 1060,
        "wires": []
    },
    {
        "id": "292594747be8586c",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "57f3a809cabd43f5",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 4 Band QSO Rate",
        "label": "Band Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2740,
        "y": 1500,
        "wires": []
    },
    {
        "id": "8541ddb83dc8400c",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='{{{payload}}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1750,
        "y": 320,
        "wires": [
            [
                "93e43ec2aaf5aeeb"
            ]
        ]
    },
    {
        "id": "bfbc0ca7ae2123b9",
        "type": "debug",
        "z": "63d876401a56f871",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 760,
        "wires": []
    },
    {
        "id": "ac94b710db387a71",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Band Parse",
        "func": "let freq = msg.payload.RadioInfo.TXFreq[0]\nlet band = null\n\nif ((freq >= 180000) & (freq <= 200000))\n{\n    band = '1.8'\n}\nif ((freq >= 350000) & (freq <= 400000))\n{\n    band = '3.5'\n}\nif ((freq >= 700000) & (freq <= 730000))\n{\n    band = '7'\n}\nif ((freq >= 1400000) & (freq <= 1435000))\n{\n    band = '14'\n}\nif ((freq >= 2100000) & (freq <= 2145000))\n{\n    band = '21'\n}\nif ((freq >= 2800000) & (freq <= 2970000))\n{\n    band = '28'\n}\n\nmsg.payload = band;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 320,
        "wires": [
            [
                "8541ddb83dc8400c"
            ]
        ]
    },
    {
        "id": "c5877e8dd99b4e62",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 320,
        "wires": [
            [
                "ac94b710db387a71"
            ]
        ]
    },
    {
        "id": "da1419617e323075",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1620,
        "y": 820,
        "wires": [
            [
                "5fcccd4ae3bc0a9e"
            ]
        ]
    },
    {
        "id": "107fc01ab56227ce",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1460,
        "y": 440,
        "wires": [
            [
                "f34266c5636010da"
            ]
        ]
    },
    {
        "id": "caf3f7f76c679440",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1560,
        "y": 1260,
        "wires": [
            [
                "13ab6d0278bf0dd0"
            ]
        ]
    },
    {
        "id": "93e43ec2aaf5aeeb",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1960,
        "y": 320,
        "wires": [
            [
                "a267e8d599520171"
            ]
        ]
    },
    {
        "id": "da098de78cddcd77",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2040,
        "y": 680,
        "wires": [
            [
                "2d9c8ae4d8a9a8fe"
            ]
        ]
    },
    {
        "id": "fefc7d4c77dca504",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1460,
        "y": 680,
        "wires": [
            [
                "8216d4fbaa22b00d"
            ]
        ]
    },
    {
        "id": "4eddc435ac1bbabc",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='{{{payload}}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1990,
        "y": 1060,
        "wires": [
            [
                "f5536ff24e5d840d"
            ]
        ]
    },
    {
        "id": "e1bb32b03d603194",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Band Parse",
        "func": "let freq = msg.payload.RadioInfo.TXFreq[0]\nlet band = null\n\nif ((freq >= 180000) & (freq <= 200000))\n{\n    band = '1.8'\n}\nif ((freq >= 350000) & (freq <= 400000))\n{\n    band = '3.5'\n}\nif ((freq >= 700000) & (freq <= 730000))\n{\n    band = '7'\n}\nif ((freq >= 1400000) & (freq <= 1435000))\n{\n    band = '14'\n}\nif ((freq >= 2100000) & (freq <= 2145000))\n{\n    band = '21'\n}\nif ((freq >= 2800000) & (freq <= 2970000))\n{\n    band = '28'\n}\n\nmsg.payload = band;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 1060,
        "wires": [
            [
                "4eddc435ac1bbabc"
            ]
        ]
    },
    {
        "id": "2f224ab81dfe487b",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1620,
        "y": 1060,
        "wires": [
            [
                "e1bb32b03d603194"
            ]
        ]
    },
    {
        "id": "f5536ff24e5d840d",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2200,
        "y": 1060,
        "wires": [
            [
                "335050ee7717c221"
            ]
        ]
    },
    {
        "id": "1766f475dc8f0329",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='{{{payload}}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1910,
        "y": 1500,
        "wires": [
            [
                "16e3e78fd25d511f"
            ]
        ]
    },
    {
        "id": "3b53505c9402ca85",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Band Parse",
        "func": "let freq = msg.payload.RadioInfo.TXFreq[0]\nlet band = null\n\nif ((freq >= 180000) & (freq <= 200000))\n{\n    band = '1.8'\n}\nif ((freq >= 350000) & (freq <= 400000))\n{\n    band = '3.5'\n}\nif ((freq >= 700000) & (freq <= 730000))\n{\n    band = '7'\n}\nif ((freq >= 1400000) & (freq <= 1435000))\n{\n    band = '14'\n}\nif ((freq >= 2100000) & (freq <= 2145000))\n{\n    band = '21'\n}\nif ((freq >= 2800000) & (freq <= 2970000))\n{\n    band = '28'\n}\n\nmsg.payload = band;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 1500,
        "wires": [
            [
                "1766f475dc8f0329"
            ]
        ]
    },
    {
        "id": "4ad6652ae6d82b00",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1560,
        "y": 1500,
        "wires": [
            [
                "3b53505c9402ca85"
            ]
        ]
    },
    {
        "id": "16e3e78fd25d511f",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2120,
        "y": 1500,
        "wires": [
            [
                "e52eef0c05f525e1"
            ]
        ]
    },
    {
        "id": "8216d4fbaa22b00d",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Band Parse",
        "func": "let freq = msg.payload.RadioInfo.TXFreq[0]\nlet band = null\n\nif ((freq >= 180000) & (freq <= 200000))\n{\n    band = '1.8'\n}\nif ((freq >= 350000) & (freq <= 400000))\n{\n    band = '3.5'\n}\nif ((freq >= 700000) & (freq <= 730000))\n{\n    band = '7'\n}\nif ((freq >= 1400000) & (freq <= 1435000))\n{\n    band = '14'\n}\nif ((freq >= 2100000) & (freq <= 2145000))\n{\n    band = '21'\n}\nif ((freq >= 2800000) & (freq <= 2970000))\n{\n    band = '28'\n}\n\nmsg.payload = band;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 680,
        "wires": [
            [
                "1f2de03473408175"
            ]
        ]
    },
    {
        "id": "1f2de03473408175",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='{{{payload}}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1830,
        "y": 680,
        "wires": [
            [
                "da098de78cddcd77"
            ]
        ]
    },
    {
        "id": "d3b4c0b3270ffdec",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 2340,
        "wires": [
            [
                "8a2ae0e35a8c3ff2"
            ]
        ]
    },
    {
        "id": "81123d6b96a6ef38",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 800,
        "y": 2340,
        "wires": [
            [
                "6630836634a13106"
            ]
        ]
    },
    {
        "id": "9a8e2c5137b90d56",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "160M 1Hr Rate Radio Tab",
        "group": "e0604be1629095c1",
        "order": 6,
        "width": 8,
        "height": 4,
        "label": "160M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "b1da1813e519e35f",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='1.8' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 570,
        "y": 2340,
        "wires": [
            [
                "81123d6b96a6ef38"
            ]
        ]
    },
    {
        "id": "b26c01a4f990c0f5",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 2440,
        "wires": [
            [
                "cfe9e7bc0adade1c"
            ]
        ]
    },
    {
        "id": "86cefd21d998385b",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 800,
        "y": 2440,
        "wires": [
            [
                "210f9d51c8d2795d"
            ]
        ]
    },
    {
        "id": "860347c9c2b71ca9",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "80M 1Hr Rate Radio Tab",
        "group": "e0604be1629095c1",
        "order": 1,
        "width": 8,
        "height": 4,
        "label": "80M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "57124254e0e48fc3",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='3.5' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 570,
        "y": 2440,
        "wires": [
            [
                "86cefd21d998385b"
            ]
        ]
    },
    {
        "id": "d9adb9ae4acfcc7b",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 2540,
        "wires": [
            [
                "ff2443172eb67c83"
            ]
        ]
    },
    {
        "id": "dd9ea1b6f40e8268",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 800,
        "y": 2540,
        "wires": [
            [
                "233ea8591881382c"
            ]
        ]
    },
    {
        "id": "6e1e4011a6488a4d",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "40M 1Hr Rate Radio Tab",
        "group": "e0604be1629095c1",
        "order": 2,
        "width": 8,
        "height": 4,
        "label": "40M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "e7590197f987677e",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='7' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 570,
        "y": 2540,
        "wires": [
            [
                "dd9ea1b6f40e8268"
            ]
        ]
    },
    {
        "id": "190c4529196b91ba",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 2640,
        "wires": [
            [
                "60d60b5aa2d5ff34"
            ]
        ]
    },
    {
        "id": "4d2c1411f283cdb8",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 800,
        "y": 2640,
        "wires": [
            [
                "ec47a9770d288aab"
            ]
        ]
    },
    {
        "id": "e80b43b63f70e382",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "20 1Hr Rate Radio Tab",
        "group": "e0604be1629095c1",
        "order": 3,
        "width": 8,
        "height": 4,
        "label": "20M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "1ad81b42664427b5",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='14' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 570,
        "y": 2640,
        "wires": [
            [
                "4d2c1411f283cdb8"
            ]
        ]
    },
    {
        "id": "f373478e37ae779c",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 2740,
        "wires": [
            [
                "2cd4f55d1521634b"
            ]
        ]
    },
    {
        "id": "36dc8bbf88a91657",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 800,
        "y": 2740,
        "wires": [
            [
                "46e5dd6677cd93d2"
            ]
        ]
    },
    {
        "id": "b9d8aeeff603a454",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "15M 1Hr Rate Radio Tab",
        "group": "e0604be1629095c1",
        "order": 4,
        "width": 8,
        "height": 4,
        "label": "15M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "0e3b542c3dcb10a5",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='21' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 570,
        "y": 2740,
        "wires": [
            [
                "36dc8bbf88a91657"
            ]
        ]
    },
    {
        "id": "773670bb93bce148",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 170,
        "y": 2840,
        "wires": [
            [
                "d34b4e21fc2c70c4"
            ]
        ]
    },
    {
        "id": "780777a148f0b63b",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 800,
        "y": 2840,
        "wires": [
            [
                "0cca615d5ae1c7cf"
            ]
        ]
    },
    {
        "id": "bf2b708ac470da89",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "10M 1Hr Rate Radio Tab",
        "group": "e0604be1629095c1",
        "order": 5,
        "width": 8,
        "height": 4,
        "label": "10M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2840,
        "wires": [
            []
        ]
    },
    {
        "id": "d54bb51d6f9fb2dd",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='28' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 570,
        "y": 2840,
        "wires": [
            [
                "780777a148f0b63b"
            ]
        ]
    },
    {
        "id": "8a2ae0e35a8c3ff2",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 370,
        "y": 2340,
        "wires": [
            [
                "b1da1813e519e35f"
            ]
        ]
    },
    {
        "id": "cfe9e7bc0adade1c",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 370,
        "y": 2440,
        "wires": [
            [
                "57124254e0e48fc3"
            ]
        ]
    },
    {
        "id": "ff2443172eb67c83",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 370,
        "y": 2540,
        "wires": [
            [
                "e7590197f987677e"
            ]
        ]
    },
    {
        "id": "60d60b5aa2d5ff34",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 370,
        "y": 2640,
        "wires": [
            [
                "1ad81b42664427b5"
            ]
        ]
    },
    {
        "id": "2cd4f55d1521634b",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 370,
        "y": 2740,
        "wires": [
            [
                "0e3b542c3dcb10a5"
            ]
        ]
    },
    {
        "id": "d34b4e21fc2c70c4",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 370,
        "y": 2840,
        "wires": [
            [
                "d54bb51d6f9fb2dd"
            ]
        ]
    },
    {
        "id": "233ea8591881382c",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2540,
        "wires": [
            [
                "6e1e4011a6488a4d",
                "3a85d5ef956cd29a"
            ]
        ]
    },
    {
        "id": "6630836634a13106",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2340,
        "wires": [
            [
                "9a8e2c5137b90d56",
                "c6b469a4fcb7b114"
            ]
        ]
    },
    {
        "id": "210f9d51c8d2795d",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2440,
        "wires": [
            [
                "860347c9c2b71ca9",
                "b1f76bb717d01b22"
            ]
        ]
    },
    {
        "id": "ec47a9770d288aab",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2640,
        "wires": [
            [
                "e80b43b63f70e382",
                "93f3edb5369e869f"
            ]
        ]
    },
    {
        "id": "46e5dd6677cd93d2",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2740,
        "wires": [
            [
                "b9d8aeeff603a454",
                "69528648e7f7d786"
            ]
        ]
    },
    {
        "id": "0cca615d5ae1c7cf",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2840,
        "wires": [
            [
                "bf2b708ac470da89",
                "75b3d2e5c1595813"
            ]
        ]
    },
    {
        "id": "7dbbcb9c3c99ac92",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1510,
        "y": 2540,
        "wires": [
            [
                "eda46bd7250928f7"
            ]
        ]
    },
    {
        "id": "98f225527fbd572e",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2080,
        "y": 2540,
        "wires": [
            [
                "522755dda15201db"
            ]
        ]
    },
    {
        "id": "2e09df86d8b33f09",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "160M 2Hr Rate Radio Tab",
        "group": "5b0b0f97dd6d2e04",
        "order": 6,
        "width": 8,
        "height": 4,
        "label": "160M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2570,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "b39feb6cc0a095b0",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='1.8' and timestamp >= datetime('now','-2 hours');",
        "output": "str",
        "x": 1890,
        "y": 2540,
        "wires": [
            [
                "98f225527fbd572e"
            ]
        ]
    },
    {
        "id": "7839fb64054f2b05",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1510,
        "y": 2600,
        "wires": [
            [
                "21813a5f29caad54"
            ]
        ]
    },
    {
        "id": "af2304ecec0d0d85",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2080,
        "y": 2600,
        "wires": [
            [
                "19d4ddb851663143"
            ]
        ]
    },
    {
        "id": "4a9253a93f90996c",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "80M 2Hr Rate Radio Tab",
        "group": "5b0b0f97dd6d2e04",
        "order": 1,
        "width": 8,
        "height": 4,
        "label": "80M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2570,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "e55576cd42fbf910",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='3.5' and timestamp >= datetime('now','-2 hours');",
        "output": "str",
        "x": 1890,
        "y": 2600,
        "wires": [
            [
                "af2304ecec0d0d85"
            ]
        ]
    },
    {
        "id": "6202022c82b2cae6",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1510,
        "y": 2660,
        "wires": [
            [
                "aaa21b5237154e2e"
            ]
        ]
    },
    {
        "id": "604be9302a9ccc35",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2080,
        "y": 2660,
        "wires": [
            [
                "4dda7522f84c1b68"
            ]
        ]
    },
    {
        "id": "0e8f6a490816d7c6",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "40M 2Hr Rate Radio Tab",
        "group": "5b0b0f97dd6d2e04",
        "order": 2,
        "width": 8,
        "height": 4,
        "label": "40M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2570,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "bedacc80df855e6c",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='7' and timestamp >= datetime('now','-2 hours');",
        "output": "str",
        "x": 1890,
        "y": 2660,
        "wires": [
            [
                "604be9302a9ccc35"
            ]
        ]
    },
    {
        "id": "d25a8f0a77cd61b2",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1510,
        "y": 2720,
        "wires": [
            [
                "b76271aca60e8e79"
            ]
        ]
    },
    {
        "id": "82c8815c3f570c8b",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2080,
        "y": 2720,
        "wires": [
            [
                "36ff32309b9d731d"
            ]
        ]
    },
    {
        "id": "625721c6cc9a41a1",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "20M 2Hr Rate Radio Tab",
        "group": "5b0b0f97dd6d2e04",
        "order": 3,
        "width": 8,
        "height": 4,
        "label": "20M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2570,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "3f31584d202f9a2a",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='14' and timestamp >= datetime('now','-2 hours');",
        "output": "str",
        "x": 1890,
        "y": 2720,
        "wires": [
            [
                "82c8815c3f570c8b"
            ]
        ]
    },
    {
        "id": "f4236722967d5256",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1510,
        "y": 2780,
        "wires": [
            [
                "3a23aef662e53a4e"
            ]
        ]
    },
    {
        "id": "8ff495cd540531a5",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2080,
        "y": 2780,
        "wires": [
            [
                "32a82ddbf9a2ece0"
            ]
        ]
    },
    {
        "id": "e16c68643b17ae53",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "15M 2Hr Rate Radio Tab",
        "group": "5b0b0f97dd6d2e04",
        "order": 4,
        "width": 8,
        "height": 4,
        "label": "15M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2570,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "3fd855c51ac25c6b",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='21' and timestamp >= datetime('now','-2 hours');",
        "output": "str",
        "x": 1890,
        "y": 2780,
        "wires": [
            [
                "8ff495cd540531a5"
            ]
        ]
    },
    {
        "id": "3f23396a59e236d6",
        "type": "inject",
        "z": "63d876401a56f871",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1510,
        "y": 2840,
        "wires": [
            [
                "b36670717398e42e"
            ]
        ]
    },
    {
        "id": "b0a55b5c21c3e636",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 2080,
        "y": 2840,
        "wires": [
            [
                "b55a9ad7c644b681"
            ]
        ]
    },
    {
        "id": "70fb0729b94f7b46",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "10M 2Hr Rate Radio Tab",
        "group": "5b0b0f97dd6d2e04",
        "order": 5,
        "width": 8,
        "height": 4,
        "label": "10M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2570,
        "y": 2840,
        "wires": [
            []
        ]
    },
    {
        "id": "e1b2f702a7a8209d",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='28' and timestamp >= datetime('now','-2 hours');",
        "output": "str",
        "x": 1890,
        "y": 2840,
        "wires": [
            [
                "b0a55b5c21c3e636"
            ]
        ]
    },
    {
        "id": "eda46bd7250928f7",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1690,
        "y": 2540,
        "wires": [
            [
                "b39feb6cc0a095b0"
            ]
        ]
    },
    {
        "id": "21813a5f29caad54",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1690,
        "y": 2600,
        "wires": [
            [
                "e55576cd42fbf910"
            ]
        ]
    },
    {
        "id": "aaa21b5237154e2e",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1690,
        "y": 2660,
        "wires": [
            [
                "bedacc80df855e6c"
            ]
        ]
    },
    {
        "id": "b76271aca60e8e79",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1690,
        "y": 2720,
        "wires": [
            [
                "3f31584d202f9a2a"
            ]
        ]
    },
    {
        "id": "3a23aef662e53a4e",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1690,
        "y": 2780,
        "wires": [
            [
                "3fd855c51ac25c6b"
            ]
        ]
    },
    {
        "id": "b36670717398e42e",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1690,
        "y": 2840,
        "wires": [
            [
                "e1b2f702a7a8209d"
            ]
        ]
    },
    {
        "id": "4dda7522f84c1b68",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "40M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 2660,
        "wires": [
            [
                "0e8f6a490816d7c6"
            ]
        ]
    },
    {
        "id": "522755dda15201db",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "160M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 2540,
        "wires": [
            [
                "2e09df86d8b33f09"
            ]
        ]
    },
    {
        "id": "19d4ddb851663143",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "80M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 2600,
        "wires": [
            [
                "4a9253a93f90996c"
            ]
        ]
    },
    {
        "id": "36ff32309b9d731d",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "20M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 2720,
        "wires": [
            [
                "625721c6cc9a41a1"
            ]
        ]
    },
    {
        "id": "32a82ddbf9a2ece0",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "15M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 2780,
        "wires": [
            [
                "e16c68643b17ae53"
            ]
        ]
    },
    {
        "id": "b55a9ad7c644b681",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "Set Payload & Topic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "10M",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 2840,
        "wires": [
            [
                "70fb0729b94f7b46"
            ]
        ]
    },
    {
        "id": "f1653511b5226382",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "env": [],
        "x": 2220,
        "y": 80,
        "wires": [
            [
                "bed5d086957bf3eb"
            ],
            [
                "bed5d086957bf3eb"
            ],
            [
                "bed5d086957bf3eb"
            ]
        ]
    },
    {
        "id": "07548290eb81947d",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2300,
        "y": 320,
        "wires": [
            [
                "985d6537f85a2ef7"
            ],
            [
                "985d6537f85a2ef7"
            ],
            [
                "985d6537f85a2ef7"
            ]
        ]
    },
    {
        "id": "38f4bb7e8a2e1f98",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2210,
        "y": 440,
        "wires": [
            [
                "2dc74f3b33408b91"
            ],
            [
                "2dc74f3b33408b91"
            ],
            [
                "2dc74f3b33408b91"
            ]
        ]
    },
    {
        "id": "e434651ab5732032",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2390,
        "y": 680,
        "wires": [
            [
                "70f732a486ad8790"
            ],
            [
                "70f732a486ad8790"
            ],
            [
                "70f732a486ad8790"
            ]
        ]
    },
    {
        "id": "53e851dc3fd7578e",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2430,
        "y": 820,
        "wires": [
            [
                "1eb96c8eb7139204"
            ],
            [
                "1eb96c8eb7139204"
            ],
            [
                "1eb96c8eb7139204"
            ]
        ]
    },
    {
        "id": "bb4ab426266cfcd3",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2570,
        "y": 1060,
        "wires": [
            [
                "83c7360db95301bd"
            ],
            [
                "83c7360db95301bd"
            ],
            [
                "83c7360db95301bd"
            ]
        ]
    },
    {
        "id": "36789dd53b75fc71",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2330,
        "y": 1260,
        "wires": [
            [
                "809b555216468185"
            ],
            [
                "809b555216468185"
            ],
            [
                "809b555216468185"
            ]
        ]
    },
    {
        "id": "30ae3bb1975bbdd9",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2500,
        "y": 1500,
        "wires": [
            [
                "292594747be8586c"
            ],
            [
                "292594747be8586c"
            ],
            [
                "292594747be8586c"
            ]
        ]
    },
    {
        "id": "b1f76bb717d01b22",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "80M 1Hr Rate Band Tab",
        "group": "29db383704af4b09",
        "order": 1,
        "width": 8,
        "height": 4,
        "label": "80M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "3a85d5ef956cd29a",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "40M 1Hr Rate Band Tab",
        "group": "29db383704af4b09",
        "order": 2,
        "width": 8,
        "height": 4,
        "label": "40M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "93f3edb5369e869f",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "20M 1Hr Rate Band Tab",
        "group": "29db383704af4b09",
        "order": 3,
        "width": 8,
        "height": 4,
        "label": "20M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "69528648e7f7d786",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "15M 1Hr Rate Band Tab",
        "group": "29db383704af4b09",
        "order": 4,
        "width": 8,
        "height": 4,
        "label": "15M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "75b3d2e5c1595813",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "10M 1Hr Rate Band Tab",
        "group": "29db383704af4b09",
        "order": 5,
        "width": 8,
        "height": 4,
        "label": "10M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "bcb63133f1d58c2f",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1400,
        "y": 80,
        "wires": [
            [
                "592c56e3d1449c3e"
            ]
        ]
    },
    {
        "id": "3073d60f25abe0f4",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 80,
        "wires": [
            [
                "f1653511b5226382"
            ]
        ]
    },
    {
        "id": "a267e8d599520171",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 320,
        "wires": [
            [
                "07548290eb81947d"
            ]
        ]
    },
    {
        "id": "45ddcbd0d057c0bc",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 440,
        "wires": [
            [
                "38f4bb7e8a2e1f98"
            ]
        ]
    },
    {
        "id": "2d9c8ae4d8a9a8fe",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2210,
        "y": 680,
        "wires": [
            [
                "e434651ab5732032"
            ]
        ]
    },
    {
        "id": "95c3475ec0e0b4d9",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2210,
        "y": 820,
        "wires": [
            [
                "53e851dc3fd7578e"
            ]
        ]
    },
    {
        "id": "335050ee7717c221",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2370,
        "y": 1060,
        "wires": [
            [
                "bb4ab426266cfcd3"
            ]
        ]
    },
    {
        "id": "24c3fc53c5522a8d",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 1260,
        "wires": [
            [
                "36789dd53b75fc71"
            ]
        ]
    },
    {
        "id": "e52eef0c05f525e1",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2310,
        "y": 1500,
        "wires": [
            [
                "30ae3bb1975bbdd9"
            ]
        ]
    },
    {
        "id": "359cdb13c6617344",
        "type": "link in",
        "z": "63d876401a56f871",
        "name": "Radio Info Band QSO Rates IN",
        "links": [
            "5e1859619292b1b8"
        ],
        "x": 975,
        "y": 3000,
        "wires": [
            [
                "860347c9c2b71ca9",
                "b1f76bb717d01b22",
                "6e1e4011a6488a4d",
                "3a85d5ef956cd29a",
                "e80b43b63f70e382",
                "93f3edb5369e869f",
                "b9d8aeeff603a454",
                "69528648e7f7d786",
                "bf2b708ac470da89",
                "75b3d2e5c1595813",
                "4a9253a93f90996c",
                "0e8f6a490816d7c6",
                "625721c6cc9a41a1",
                "e16c68643b17ae53",
                "70fb0729b94f7b46"
            ]
        ]
    },
    {
        "id": "c6b469a4fcb7b114",
        "type": "ui_chart",
        "z": "63d876401a56f871",
        "name": "160M 1Hr Rate Band Tab",
        "group": "29db383704af4b09",
        "order": 6,
        "width": 8,
        "height": 4,
        "label": "160M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "3db30b96c7c9b96f",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "f5dde741553ee9e7",
        "order": 1,
        "width": 5,
        "height": 2,
        "name": "FI-Radio 5 Operator",
        "label": "Operator",
        "format": "<font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1440,
        "y": 1760,
        "wires": []
    },
    {
        "id": "2db6aa1dabfe4b6f",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 1640,
        "wires": [
            [
                "964c3ff51c44f4ab"
            ]
        ]
    },
    {
        "id": "964c3ff51c44f4ab",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "f5dde741553ee9e7",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "RI-Radio 5 Freq",
        "label": "Freq",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1600,
        "y": 1640,
        "wires": []
    },
    {
        "id": "fdccf090130e942d",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "f5dde741553ee9e7",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 5 Status",
        "label": "Status",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1590,
        "y": 1680,
        "wires": []
    },
    {
        "id": "da729aa0eb935bd7",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "f5dde741553ee9e7",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "FI-Radio 5 Mode",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1430,
        "y": 1800,
        "wires": []
    },
    {
        "id": "82423ba25e8da23c",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1680,
        "wires": [
            [
                "fdccf090130e942d"
            ]
        ]
    },
    {
        "id": "129cf1c30beedec6",
        "type": "debug",
        "z": "63d876401a56f871",
        "name": "After Radio 4 Switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 1880,
        "wires": []
    },
    {
        "id": "58fcbde5cf1aab5e",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(operator) as rate from qsos where operator='{{payload.RadioInfo.OpCall}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1610,
        "y": 1600,
        "wires": [
            [
                "5ff7b1c82e4bc5cb"
            ]
        ]
    },
    {
        "id": "5ff7b1c82e4bc5cb",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1820,
        "y": 1600,
        "wires": [
            [
                "0c53f4520bda7edc"
            ]
        ]
    },
    {
        "id": "1b42710e26a66d3b",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "f5dde741553ee9e7",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 5 OP QSO Rate",
        "label": "OP Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2430,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ab222f8f3c53cd87",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "f5dde741553ee9e7",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 5 Band QSO Rate",
        "label": "Band Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2600,
        "y": 1840,
        "wires": []
    },
    {
        "id": "0229e39a3516b865",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1420,
        "y": 1600,
        "wires": [
            [
                "58fcbde5cf1aab5e"
            ]
        ]
    },
    {
        "id": "ade26f65a6b17c32",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='{{{payload}}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1770,
        "y": 1840,
        "wires": [
            [
                "417ce821ddfa4209"
            ]
        ]
    },
    {
        "id": "8b567c0e329781f6",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Band Parse",
        "func": "let freq = msg.payload.RadioInfo.TXFreq[0]\nlet band = null\n\nif ((freq >= 180000) & (freq <= 200000))\n{\n    band = '1.8'\n}\nif ((freq >= 350000) & (freq <= 400000))\n{\n    band = '3.5'\n}\nif ((freq >= 700000) & (freq <= 730000))\n{\n    band = '7'\n}\nif ((freq >= 1400000) & (freq <= 1435000))\n{\n    band = '14'\n}\nif ((freq >= 2100000) & (freq <= 2145000))\n{\n    band = '21'\n}\nif ((freq >= 2800000) & (freq <= 2970000))\n{\n    band = '28'\n}\n\nmsg.payload = band;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 1840,
        "wires": [
            [
                "ade26f65a6b17c32"
            ]
        ]
    },
    {
        "id": "a1d33b13deb1d304",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1420,
        "y": 1840,
        "wires": [
            [
                "8b567c0e329781f6"
            ]
        ]
    },
    {
        "id": "417ce821ddfa4209",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1980,
        "y": 1840,
        "wires": [
            [
                "1e942633d1b0330e"
            ]
        ]
    },
    {
        "id": "8d7cccfe69747f95",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2190,
        "y": 1600,
        "wires": [
            [
                "1b42710e26a66d3b"
            ],
            [
                "1b42710e26a66d3b"
            ],
            [
                "1b42710e26a66d3b"
            ]
        ]
    },
    {
        "id": "96579eec393ac3b1",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2360,
        "y": 1840,
        "wires": [
            [
                "ab222f8f3c53cd87"
            ],
            [
                "ab222f8f3c53cd87"
            ],
            [
                "ab222f8f3c53cd87"
            ]
        ]
    },
    {
        "id": "0c53f4520bda7edc",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1600,
        "wires": [
            [
                "8d7cccfe69747f95"
            ]
        ]
    },
    {
        "id": "1e942633d1b0330e",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 1840,
        "wires": [
            [
                "96579eec393ac3b1"
            ]
        ]
    },
    {
        "id": "249a5330f1dc2ce5",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "5ccfd9f2fc20c888",
        "order": 1,
        "width": 5,
        "height": 2,
        "name": "FI-Radio 6 Operator",
        "label": "Operator",
        "format": "<font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1380,
        "y": 2140,
        "wires": []
    },
    {
        "id": "bb43fc100f439185",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 2020,
        "wires": [
            [
                "957bfb8d414c8b24"
            ]
        ]
    },
    {
        "id": "957bfb8d414c8b24",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "5ccfd9f2fc20c888",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "RI-Radio 6 Freq",
        "label": "Freq",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1540,
        "y": 2020,
        "wires": []
    },
    {
        "id": "c59936dc6e1f8112",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "5ccfd9f2fc20c888",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 6 Status",
        "label": "Status",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1530,
        "y": 2060,
        "wires": []
    },
    {
        "id": "77aaa97d6470ce18",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "5ccfd9f2fc20c888",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "FI-Radio 6 Mode",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1370,
        "y": 2180,
        "wires": []
    },
    {
        "id": "2c582b73d6085693",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 2060,
        "wires": [
            [
                "c59936dc6e1f8112"
            ]
        ]
    },
    {
        "id": "e0f342e86e901c86",
        "type": "debug",
        "z": "63d876401a56f871",
        "name": "After Radio 4 Switch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 2260,
        "wires": []
    },
    {
        "id": "246e1e4f4f15c5c8",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(operator) as rate from qsos where operator='{{payload.RadioInfo.OpCall}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1550,
        "y": 1980,
        "wires": [
            [
                "73e9a7a1e26c8a8c"
            ]
        ]
    },
    {
        "id": "73e9a7a1e26c8a8c",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1760,
        "y": 1980,
        "wires": [
            [
                "8c845733e92e41e2"
            ]
        ]
    },
    {
        "id": "a6a37936dda0f8f9",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "5ccfd9f2fc20c888",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 6 OP QSO Rate",
        "label": "OP Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2350,
        "y": 1980,
        "wires": []
    },
    {
        "id": "bca717449dc24f29",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "5ccfd9f2fc20c888",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 6 Band QSO Rate",
        "label": "Band Rate Qs/Hr",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2540,
        "y": 2220,
        "wires": []
    },
    {
        "id": "2de257ad131f1ba2",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1360,
        "y": 1980,
        "wires": [
            [
                "246e1e4f4f15c5c8"
            ]
        ]
    },
    {
        "id": "81455cb1501f64a3",
        "type": "template",
        "z": "63d876401a56f871",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as rate from qsos where band='{{{payload}}}' and timestamp >= datetime('now','-1 hours');",
        "output": "str",
        "x": 1710,
        "y": 2220,
        "wires": [
            [
                "7cb7f5f8c30ea2e6"
            ]
        ]
    },
    {
        "id": "697da13221904ea1",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Band Parse",
        "func": "let freq = msg.payload.RadioInfo.TXFreq[0]\nlet band = null\n\nif ((freq >= 180000) & (freq <= 200000))\n{\n    band = '1.8'\n}\nif ((freq >= 350000) & (freq <= 400000))\n{\n    band = '3.5'\n}\nif ((freq >= 700000) & (freq <= 730000))\n{\n    band = '7'\n}\nif ((freq >= 1400000) & (freq <= 1435000))\n{\n    band = '14'\n}\nif ((freq >= 2100000) & (freq <= 2145000))\n{\n    band = '21'\n}\nif ((freq >= 2800000) & (freq <= 2970000))\n{\n    band = '28'\n}\n\nmsg.payload = band;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 2220,
        "wires": [
            [
                "81455cb1501f64a3"
            ]
        ]
    },
    {
        "id": "88362d3b27d187ed",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "30S Drop Limit",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1360,
        "y": 2220,
        "wires": [
            [
                "697da13221904ea1"
            ]
        ]
    },
    {
        "id": "7cb7f5f8c30ea2e6",
        "type": "sqlite",
        "z": "63d876401a56f871",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1920,
        "y": 2220,
        "wires": [
            [
                "14ddf66a8c208255"
            ]
        ]
    },
    {
        "id": "df9e803aec029d4b",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2130,
        "y": 1980,
        "wires": [
            [
                "a6a37936dda0f8f9"
            ],
            [
                "a6a37936dda0f8f9"
            ],
            [
                "a6a37936dda0f8f9"
            ]
        ]
    },
    {
        "id": "f693140c1a3123b2",
        "type": "subflow:c967abe5be484ee6",
        "z": "63d876401a56f871",
        "name": "",
        "x": 2300,
        "y": 2220,
        "wires": [
            [
                "bca717449dc24f29"
            ],
            [
                "bca717449dc24f29"
            ],
            [
                "bca717449dc24f29"
            ]
        ]
    },
    {
        "id": "8c845733e92e41e2",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 1980,
        "wires": [
            [
                "df9e803aec029d4b"
            ]
        ]
    },
    {
        "id": "14ddf66a8c208255",
        "type": "change",
        "z": "63d876401a56f871",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rate",
                "pt": "msg",
                "to": "payload[0].rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 2220,
        "wires": [
            [
                "f693140c1a3123b2"
            ]
        ]
    },
    {
        "id": "aac72059b39fda59",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "7fbb5e1689b11c96",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 1 Macro",
        "label": "Macro",
        "format": "<font size=6 font color={{msg.color}}>{{msg.payload.RadioInfo.FunctionKeyCaption[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1930,
        "y": 200,
        "wires": []
    },
    {
        "id": "1c635cbe611077dd",
        "type": "switch",
        "z": "63d876401a56f871",
        "name": "Function Key Is Empty?",
        "property": "payload.RadioInfo.FunctionKeyCaption[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1430,
        "y": 200,
        "wires": [
            [
                "dcdc849990516e2e"
            ],
            [
                "f21dbda3d927e010"
            ]
        ]
    },
    {
        "id": "f21dbda3d927e010",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1660,
        "y": 240,
        "wires": [
            [
                "aac72059b39fda59"
            ]
        ]
    },
    {
        "id": "b94e85aead67078d",
        "type": "switch",
        "z": "63d876401a56f871",
        "name": "Function Key Is Empty?",
        "property": "payload.RadioInfo.FunctionKeyCaption[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1490,
        "y": 560,
        "wires": [
            [
                "19cc17829f39bb30"
            ],
            [
                "0776fad3976446cc"
            ]
        ]
    },
    {
        "id": "0776fad3976446cc",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1700,
        "y": 600,
        "wires": [
            [
                "c6a8bdfd74f42360"
            ]
        ]
    },
    {
        "id": "c6a8bdfd74f42360",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "04f517e9db4307d1",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 2 Macro",
        "label": "Macro",
        "format": "<font size=6 font color={{msg.color}}>{{msg.payload.RadioInfo.FunctionKeyCaption[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1950,
        "y": 560,
        "wires": []
    },
    {
        "id": "2e21c54be43d8642",
        "type": "switch",
        "z": "63d876401a56f871",
        "name": "Function Key Is Empty?",
        "property": "payload.RadioInfo.FunctionKeyCaption[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1650,
        "y": 940,
        "wires": [
            [
                "6483782b864f4f74"
            ],
            [
                "b7eca8f0f7525764"
            ]
        ]
    },
    {
        "id": "b7eca8f0f7525764",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1860,
        "y": 980,
        "wires": [
            [
                "97288b468af67be3"
            ]
        ]
    },
    {
        "id": "97288b468af67be3",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "9851a548b3e9a744",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 3 Macro",
        "label": "Macro",
        "format": "<font size=6 font color={{msg.color}}>{{msg.payload.RadioInfo.FunctionKeyCaption[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2130,
        "y": 940,
        "wires": []
    },
    {
        "id": "f0ae975218d92b4d",
        "type": "switch",
        "z": "63d876401a56f871",
        "name": "Function Key Is Empty?",
        "property": "payload.RadioInfo.FunctionKeyCaption[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 1380,
        "wires": [
            [
                "198db40134ed3647"
            ],
            [
                "23fdaa804a699aaf"
            ]
        ]
    },
    {
        "id": "23fdaa804a699aaf",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1800,
        "y": 1420,
        "wires": [
            [
                "8309afcde2fb9bb5"
            ]
        ]
    },
    {
        "id": "8309afcde2fb9bb5",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "57f3a809cabd43f5",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 4 Macro",
        "label": "Macro",
        "format": "<font size=6 font color={{msg.color}}>{{msg.payload.RadioInfo.FunctionKeyCaption[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1380,
        "wires": []
    },
    {
        "id": "eb3c67348bf70742",
        "type": "switch",
        "z": "63d876401a56f871",
        "name": "Function Key Is Empty?",
        "property": "payload.RadioInfo.FunctionKeyCaption[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1450,
        "y": 1720,
        "wires": [
            [
                "85dca11dd759282b"
            ],
            [
                "fac7550c65740d73"
            ]
        ]
    },
    {
        "id": "fac7550c65740d73",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1680,
        "y": 1760,
        "wires": [
            [
                "916f7d1f9ec12898"
            ]
        ]
    },
    {
        "id": "916f7d1f9ec12898",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "f5dde741553ee9e7",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 5 Macro",
        "label": "Macro",
        "format": "<font size=6 font color={{msg.color}}>{{msg.payload.RadioInfo.FunctionKeyCaption[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1930,
        "y": 1720,
        "wires": []
    },
    {
        "id": "1e68e3b5b9d1998d",
        "type": "switch",
        "z": "63d876401a56f871",
        "name": "Function Key Is Empty?",
        "property": "payload.RadioInfo.FunctionKeyCaption[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1390,
        "y": 2100,
        "wires": [
            [
                "dfaf09dbf9ef0968"
            ],
            [
                "4ffd230de6920581"
            ]
        ]
    },
    {
        "id": "4ffd230de6920581",
        "type": "delay",
        "z": "63d876401a56f871",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1620,
        "y": 2140,
        "wires": [
            [
                "fe3958c79b77d7e9"
            ]
        ]
    },
    {
        "id": "fe3958c79b77d7e9",
        "type": "ui_text",
        "z": "63d876401a56f871",
        "group": "5ccfd9f2fc20c888",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "RI-Radio 6 Macro",
        "label": "Macro",
        "format": "<font size=6 font color={{msg.color}}>{{msg.payload.RadioInfo.FunctionKeyCaption[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1870,
        "y": 2100,
        "wires": []
    },
    {
        "id": "dcdc849990516e2e",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Color Change",
        "func": "if (msg.payload.RadioInfo.IsRunning[0] == \"True\")\n{\n    msg.color = \"#008000\"\n}\n\nif (msg.payload.RadioInfo.IsRunning[0] == \"False\")\n{\n    msg.color = \"#FF0000\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 200,
        "wires": [
            [
                "aac72059b39fda59"
            ]
        ]
    },
    {
        "id": "19cc17829f39bb30",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Color Change",
        "func": "if (msg.payload.RadioInfo.IsRunning[0] == \"True\")\n{\n    msg.color = \"#008000\"\n}\n\nif (msg.payload.RadioInfo.IsRunning[0] == \"False\")\n{\n    msg.color = \"#FF0000\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 560,
        "wires": [
            [
                "c6a8bdfd74f42360"
            ]
        ]
    },
    {
        "id": "6483782b864f4f74",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Color Change",
        "func": "if (msg.payload.RadioInfo.IsRunning[0] == \"True\")\n{\n    msg.color = \"#008000\"\n}\n\nif (msg.payload.RadioInfo.IsRunning[0] == \"False\")\n{\n    msg.color = \"#FF0000\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 940,
        "wires": [
            [
                "97288b468af67be3"
            ]
        ]
    },
    {
        "id": "198db40134ed3647",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Color Change",
        "func": "if (msg.payload.RadioInfo.IsRunning[0] == \"True\")\n{\n    msg.color = \"#008000\"\n}\n\nif (msg.payload.RadioInfo.IsRunning[0] == \"False\")\n{\n    msg.color = \"#FF0000\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1380,
        "wires": [
            [
                "8309afcde2fb9bb5"
            ]
        ]
    },
    {
        "id": "85dca11dd759282b",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Color Change",
        "func": "if (msg.payload.RadioInfo.IsRunning[0] == \"True\")\n{\n    msg.color = \"#008000\"\n}\n\nif (msg.payload.RadioInfo.IsRunning[0] == \"False\")\n{\n    msg.color = \"#FF0000\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 1720,
        "wires": [
            [
                "916f7d1f9ec12898"
            ]
        ]
    },
    {
        "id": "dfaf09dbf9ef0968",
        "type": "function",
        "z": "63d876401a56f871",
        "name": "Color Change",
        "func": "if (msg.payload.RadioInfo.IsRunning[0] == \"True\")\n{\n    msg.color = \"#008000\"\n}\n\nif (msg.payload.RadioInfo.IsRunning[0] == \"False\")\n{\n    msg.color = \"#FF0000\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 2100,
        "wires": [
            [
                "fe3958c79b77d7e9"
            ]
        ]
    },
    {
        "id": "facc381ab8ee58c9",
        "type": "link in",
        "z": "63d876401a56f871",
        "name": "S02R Radio Info IN",
        "links": [
            "15fa6dac50ec3359",
            "94303f00b0074ac4"
        ],
        "x": 285,
        "y": 200,
        "wires": [
            [
                "c732b3d8a89b845a"
            ]
        ]
    },
    {
        "id": "c732b3d8a89b845a",
        "type": "switch",
        "z": "63d876401a56f871",
        "name": "Radio 1 or 2?",
        "property": "payload.RadioInfo.RadioNr[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 200,
        "wires": [
            [
                "bcb63133f1d58c2f",
                "f288bcaa2972bb03",
                "c670964546ae0b06",
                "1c635cbe611077dd",
                "4079239a4fd5c11c",
                "346e26f12ecee853",
                "c5877e8dd99b4e62",
                "0e6c6e43b62e7cd4"
            ],
            [
                "107fc01ab56227ce",
                "ced635fe1b59f8b9",
                "e3316f6b1b477ad8",
                "b94e85aead67078d",
                "b884a7032dfb3964",
                "ed8a415f892888ab",
                "fefc7d4c77dca504",
                "5b85beefefc8743d"
            ]
        ]
    },
    {
        "id": "135240e2fc51ef8d",
        "type": "comment",
        "z": "63d876401a56f871",
        "name": "SO2R Configuration",
        "info": "",
        "x": 420,
        "y": 140,
        "wires": []
    },
    {
        "id": "8125dc33c592c8ec",
        "type": "inject",
        "z": "c8e1ef6f509cd75a",
        "name": "1 Per Min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "2b2f3e640248b72a"
            ]
        ]
    },
    {
        "id": "e5bfbfa56cbfc533",
        "type": "sqlite",
        "z": "c8e1ef6f509cd75a",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1280,
        "y": 520,
        "wires": [
            [
                "03065499f5880f2d",
                "0abc9757ce66c40d",
                "0e4729df09d27b3e",
                "82ec57515e149fba",
                "3167aedcb8f56641",
                "89681b3be0afcbba",
                "a19b646fa2396669",
                "56cd5215dde42552",
                "2ca6f5a68f913286",
                "8ef98b522b186a8d",
                "e6554b9bbe9cee0e",
                "9b09738fe2ae4dd7",
                "c7dc9ca647a536a0",
                "b72cc44c1d574dce",
                "b80a474784168d46",
                "cfd51f2f87f96fa9",
                "4bcf5aa1cae934bd",
                "9c2f3625304166d0",
                "b78c513f0baf3018",
                "900630ff66352946",
                "cca1c89c90290ebc",
                "97a57d2397a978dc",
                "cc5cb58dad3a8a3b",
                "3acac32e8604c765",
                "57b1c5dc031afdfd",
                "649570d869a2a319",
                "35470e72a63127bd",
                "f72d756d8c137aaa",
                "4bec6621ee7e772f",
                "9430cb53d80fa6b6",
                "a6a25d3c59f7b679",
                "b35683e6760d29f7",
                "f03a0e31a77f68f2",
                "84125f6fa5dde217",
                "71e08397fedf0ff4",
                "2a30d423bfa0de72",
                "dab5d935729234b6",
                "83a4a868bef4d301",
                "08bb28416a4c857f",
                "9db860a23cb0de6e",
                "689a711ac2c1cc37",
                "a44ee2cc9a9b7398",
                "76b9e5dff8bd683f",
                "ef7856ab646dc938",
                "6dc0b640e1c8407e",
                "582eb93ec7687986",
                "f10eaa69c05b8a4c",
                "d89c6e30ca15bf1e",
                "46a109ee0a2e75aa",
                "0d32551591f4febb",
                "4e25eef7a46062ed",
                "74823dbc48c66f23",
                "4e1d05c16ace0917",
                "34008e11c64ab041",
                "5c267064e9a5cfe5",
                "fddd013b3adee514",
                "568d906183a5bd04",
                "3dfd2af79efe8194",
                "e7b5e69e29f5048b",
                "4469d749f5f64ed9",
                "2697e5e8c3c7b86f"
            ]
        ]
    },
    {
        "id": "f678bf79cef11c12",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 2920,
        "wires": []
    },
    {
        "id": "03065499f5880f2d",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "e42cdfb590735e00",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "1st Place OP",
        "label": "OP",
        "format": "{{msg.payload[0].operator}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 40,
        "wires": []
    },
    {
        "id": "0abc9757ce66c40d",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4349237f79c6ee9d",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "3rd Place OP",
        "label": "OP",
        "format": "{{msg.payload[2].operator}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 120,
        "wires": []
    },
    {
        "id": "82ec57515e149fba",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "de79e0318aecd9cc",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "4th Place OP",
        "label": "OP",
        "format": "{{msg.payload[3].operator}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 160,
        "wires": []
    },
    {
        "id": "3167aedcb8f56641",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "ec08fadc8d1d73bf",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "5th Place OP",
        "label": "OP",
        "format": "{{msg.payload[4].operator}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "89681b3be0afcbba",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "3dad506044ed2f24",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "6th Place OP",
        "label": "OP",
        "format": "{{msg.payload[5].operator}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 240,
        "wires": []
    },
    {
        "id": "a19b646fa2396669",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "fbe68cb50c200a91",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "7th Place OP",
        "label": "OP",
        "format": "{{msg.payload[6].operator}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 280,
        "wires": []
    },
    {
        "id": "56cd5215dde42552",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "84c8e4f24085b4d7",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "8th Place OP",
        "label": "OP",
        "format": "{{msg.payload[7].operator}}",
        "layout": "col-center",
        "className": "",
        "x": 1150,
        "y": 320,
        "wires": []
    },
    {
        "id": "0e4729df09d27b3e",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "8bf40d033d555b71",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "2nd Place OP",
        "label": "OP",
        "format": "{{msg.payload[1].operator}}",
        "layout": "col-center",
        "className": "",
        "x": 1160,
        "y": 80,
        "wires": []
    },
    {
        "id": "2ca6f5a68f913286",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "e42cdfb590735e00",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "1st Place OP QSOs",
        "label": "QSOs",
        "format": "{{msg.payload[0].totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1510,
        "y": 40,
        "wires": []
    },
    {
        "id": "8ef98b522b186a8d",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "8bf40d033d555b71",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "2nd Place OP QSOs",
        "label": "QSOs",
        "format": "{{msg.payload[1].totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1520,
        "y": 80,
        "wires": []
    },
    {
        "id": "e6554b9bbe9cee0e",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4349237f79c6ee9d",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "3rd Place OP QSOs",
        "label": "QSOs",
        "format": "{{msg.payload[2].totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1520,
        "y": 120,
        "wires": []
    },
    {
        "id": "9b09738fe2ae4dd7",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "de79e0318aecd9cc",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "4th Place OP QSOs",
        "label": "QSOs",
        "format": "{{msg.payload[3].totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1520,
        "y": 160,
        "wires": []
    },
    {
        "id": "c7dc9ca647a536a0",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "ec08fadc8d1d73bf",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "5th Place OP QSOs",
        "label": "QSOs",
        "format": "{{msg.payload[4].totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1520,
        "y": 200,
        "wires": []
    },
    {
        "id": "b72cc44c1d574dce",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "3dad506044ed2f24",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "6th Place OP QSOs",
        "label": "QSOs",
        "format": "{{msg.payload[5].totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1520,
        "y": 240,
        "wires": []
    },
    {
        "id": "b80a474784168d46",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "fbe68cb50c200a91",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "7th Place OP QSOs",
        "label": "QSOs",
        "format": "{{msg.payload[6].totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1520,
        "y": 280,
        "wires": []
    },
    {
        "id": "cfd51f2f87f96fa9",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "84c8e4f24085b4d7",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "8th Place OP QSOs",
        "label": "QSOs",
        "format": "{{msg.payload[7].totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1520,
        "y": 320,
        "wires": []
    },
    {
        "id": "649570d869a2a319",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "e42cdfb590735e00",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "1st Place OP Score",
        "label": "Score",
        "format": "{{msg.payload[0].score}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 680,
        "wires": []
    },
    {
        "id": "35470e72a63127bd",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "8bf40d033d555b71",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "2nd Place OP Score",
        "label": "Score",
        "format": "{{msg.payload[1].score}}",
        "layout": "col-center",
        "className": "",
        "x": 1280,
        "y": 720,
        "wires": []
    },
    {
        "id": "f72d756d8c137aaa",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4349237f79c6ee9d",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "3rd Place OP Score",
        "label": "Score",
        "format": "{{msg.payload[2].score}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 760,
        "wires": []
    },
    {
        "id": "4bec6621ee7e772f",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "de79e0318aecd9cc",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "4th Place OP Score",
        "label": "Score",
        "format": "{{msg.payload[3].score}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 800,
        "wires": []
    },
    {
        "id": "9430cb53d80fa6b6",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "ec08fadc8d1d73bf",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "5th Place OP Score",
        "label": "Score",
        "format": "{{msg.payload[4].score}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 840,
        "wires": []
    },
    {
        "id": "a6a25d3c59f7b679",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "3dad506044ed2f24",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "6th Place OP Score",
        "label": "Score",
        "format": "{{msg.payload[5].score}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 880,
        "wires": []
    },
    {
        "id": "b35683e6760d29f7",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "fbe68cb50c200a91",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "7th Place OP Score",
        "label": "Score",
        "format": "{{msg.payload[6].score}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 920,
        "wires": []
    },
    {
        "id": "f03a0e31a77f68f2",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "84c8e4f24085b4d7",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "8th Place OP Score",
        "label": "Score",
        "format": "{{msg.payload[7].score}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 960,
        "wires": []
    },
    {
        "id": "4bcf5aa1cae934bd",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "e42cdfb590735e00",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "1st Place OP Mults",
        "label": "Mults",
        "format": "{{msg.payload[0].multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "9c2f3625304166d0",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "8bf40d033d555b71",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "2nd Place OP Mults",
        "label": "Mults",
        "format": "{{msg.payload[1].multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 930,
        "y": 720,
        "wires": []
    },
    {
        "id": "b78c513f0baf3018",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4349237f79c6ee9d",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "3rd Place OP Mults",
        "label": "Mults",
        "format": "{{msg.payload[2].multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 930,
        "y": 760,
        "wires": []
    },
    {
        "id": "900630ff66352946",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "de79e0318aecd9cc",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "4th Place OP Mults",
        "label": "Mults",
        "format": "{{msg.payload[3].multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 930,
        "y": 800,
        "wires": []
    },
    {
        "id": "cca1c89c90290ebc",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "ec08fadc8d1d73bf",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "5th Place OP Mults",
        "label": "Mults",
        "format": "{{msg.payload[4].multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 930,
        "y": 840,
        "wires": []
    },
    {
        "id": "97a57d2397a978dc",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "3dad506044ed2f24",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "6th Place OP Mults",
        "label": "Mults",
        "format": "{{msg.payload[5].multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 930,
        "y": 880,
        "wires": []
    },
    {
        "id": "cc5cb58dad3a8a3b",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "fbe68cb50c200a91",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "7th Place OP Mults",
        "label": "Mults",
        "format": "{{msg.payload[6].multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 930,
        "y": 920,
        "wires": []
    },
    {
        "id": "3acac32e8604c765",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "84c8e4f24085b4d7",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "8th Place OP Mults",
        "label": "Mults",
        "format": "{{msg.payload[7].multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 930,
        "y": 960,
        "wires": []
    },
    {
        "id": "5792447de0131e73",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(operator) as rate, \noperator as operator \nfrom qsos \nwhere operator='{{{payload.operator}}}' \nand timestamp >= datetime('now','-3 hours');",
        "output": "str",
        "x": 550,
        "y": 2960,
        "wires": [
            [
                "b109159d6097873c",
                "e803250cbcc367d9"
            ]
        ]
    },
    {
        "id": "b109159d6097873c",
        "type": "sqlite",
        "z": "c8e1ef6f509cd75a",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 760,
        "y": 2960,
        "wires": [
            [
                "9c9f6b5cec40d880",
                "8c44059f5aac0c6f"
            ]
        ]
    },
    {
        "id": "0b5869c1c2800a67",
        "type": "change",
        "z": "c8e1ef6f509cd75a",
        "name": "Set Original to Payload",
        "rules": [
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 2960,
        "wires": [
            [
                "8ca3011dd6359462"
            ]
        ]
    },
    {
        "id": "85bbbbb955279cce",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "e42cdfb590735e00",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "1st Place Current 1Hr Run Rate",
        "label": "1Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2570,
        "y": 220,
        "wires": []
    },
    {
        "id": "a8a629af1c61453f",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "8bf40d033d555b71",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "2nd Place Current 1Hr Run Rate",
        "label": "1Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2570,
        "y": 280,
        "wires": []
    },
    {
        "id": "a0468e25398dee83",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4349237f79c6ee9d",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "3rd Place Current 1Hr Run Rate",
        "label": "1Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2570,
        "y": 340,
        "wires": []
    },
    {
        "id": "faaa9c2c4f22247a",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "de79e0318aecd9cc",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "4th Place Current 1Hr Run Rate",
        "label": "1Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2570,
        "y": 400,
        "wires": []
    },
    {
        "id": "8195b25c71b87897",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "ec08fadc8d1d73bf",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "5th Place Current 1Hr Run Rate",
        "label": "1Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2570,
        "y": 460,
        "wires": []
    },
    {
        "id": "5c8d08c380f3c83c",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "3dad506044ed2f24",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "6th Place Current 1Hr Run Rate",
        "label": "1Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2570,
        "y": 520,
        "wires": []
    },
    {
        "id": "79544073b704db82",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "fbe68cb50c200a91",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "7th Place Current 1Hr Run Rate",
        "label": "1Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2570,
        "y": 580,
        "wires": []
    },
    {
        "id": "10cdec73865dc8b0",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "84c8e4f24085b4d7",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "8th Place Current 1Hr Run Rate",
        "label": "1Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2570,
        "y": 640,
        "wires": []
    },
    {
        "id": "0dd4886eb5efe40b",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "e42cdfb590735e00",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "1st Place Current 2Hr Run Rate",
        "label": "2Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1d60e2ec9ef777d3",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "8bf40d033d555b71",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "2nd Place Current 2Hr Run Rate",
        "label": "2Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1060,
        "wires": []
    },
    {
        "id": "16ed5df7bb6031a9",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4349237f79c6ee9d",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "3rd Place Current 2Hr Run Rate",
        "label": "2Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1120,
        "wires": []
    },
    {
        "id": "9b0da2b2603edbdd",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "de79e0318aecd9cc",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "4th Place Current 2Hr Run Rate",
        "label": "2Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4a5f395f4ffdd7ed",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "ec08fadc8d1d73bf",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "5th Place Current 2Hr Run Rate",
        "label": "2Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1240,
        "wires": []
    },
    {
        "id": "1343d07ab73fd624",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "3dad506044ed2f24",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "6th Place Current 2Hr Run Rate",
        "label": "2Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1300,
        "wires": []
    },
    {
        "id": "582de778fcc4c175",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "fbe68cb50c200a91",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "7th Place Current 2Hr Run Rate",
        "label": "2Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1360,
        "wires": []
    },
    {
        "id": "648aa4a6cc2e22db",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "84c8e4f24085b4d7",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "8th Place Current 2Hr Run Rate",
        "label": "2Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1420,
        "wires": []
    },
    {
        "id": "da67b9b7e9829477",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "e42cdfb590735e00",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "1st Place Overall Trending",
        "label": "Overall",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1960,
        "y": 1480,
        "wires": []
    },
    {
        "id": "946213d343357cf2",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Overall Trending Arrow Direction",
        "func": "let y = flow.get(\"OP0_1HrTrendScore\");\nlet z = flow.get(\"OP0_2HrTrendScore\");\nlet rate1hr = flow.get(\"OP0_1HRateCurrent\");\nlet rate2hr = flow.get(\"OP0_2HRateCurrent\");\n\nlet totalscore = y + z;\n\nflow.set(\"OP0_TrendScore\",totalscore);\n\n\nif (msg.payload[0] == null)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore == null || (rate1hr == 0 && rate2hr == 0))\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore >= 3)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore == 2)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore <= 1)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1480,
        "wires": [
            [
                "da67b9b7e9829477",
                "7efa1ebb794e5dea"
            ]
        ]
    },
    {
        "id": "567e1c90bbb39274",
        "type": "inject",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "e803250cbcc367d9",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 2920,
        "wires": []
    },
    {
        "id": "57b1c5dc031afdfd",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 360,
        "wires": []
    },
    {
        "id": "9c9f6b5cec40d880",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 2900,
        "wires": []
    },
    {
        "id": "582eb93ec7687986",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "e42cdfb590735e00",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "1st Place Busted Calls",
        "label": "Busted",
        "format": "{{msg.payload[0].busted}}",
        "layout": "col-center",
        "className": "",
        "x": 880,
        "y": 60,
        "wires": []
    },
    {
        "id": "f10eaa69c05b8a4c",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "8bf40d033d555b71",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "2nd Place Busted Calls",
        "label": "Busted",
        "format": "{{msg.payload[1].busted}}",
        "layout": "col-center",
        "className": "",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "d89c6e30ca15bf1e",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4349237f79c6ee9d",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "3rd Place Busted Calls",
        "label": "Busted",
        "format": "{{msg.payload[2].busted}}",
        "layout": "col-center",
        "className": "",
        "x": 880,
        "y": 140,
        "wires": []
    },
    {
        "id": "46a109ee0a2e75aa",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "de79e0318aecd9cc",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "4th Place Busted Calls",
        "label": "Busted",
        "format": "{{msg.payload[3].busted}}",
        "layout": "col-center",
        "className": "",
        "x": 880,
        "y": 180,
        "wires": []
    },
    {
        "id": "0d32551591f4febb",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "ec08fadc8d1d73bf",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "5th Place Busted Calls",
        "label": "Busted",
        "format": "{{msg.payload[4].busted}}",
        "layout": "col-center",
        "className": "",
        "x": 880,
        "y": 220,
        "wires": []
    },
    {
        "id": "4e25eef7a46062ed",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "3dad506044ed2f24",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "6th Place Busted Calls",
        "label": "Busted",
        "format": "{{msg.payload[5].busted}}",
        "layout": "col-center",
        "className": "",
        "x": 880,
        "y": 260,
        "wires": []
    },
    {
        "id": "74823dbc48c66f23",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "fbe68cb50c200a91",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "7th Place Busted Calls",
        "label": "Busted",
        "format": "{{msg.payload[6].busted}}",
        "layout": "col-center",
        "className": "",
        "x": 880,
        "y": 300,
        "wires": []
    },
    {
        "id": "4e1d05c16ace0917",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "84c8e4f24085b4d7",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "8th Place Busted Calls",
        "label": "Busted",
        "format": "{{msg.payload[7].busted}}",
        "layout": "col-center",
        "className": "",
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "8ca3011dd6359462",
        "type": "split",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 370,
        "y": 2960,
        "wires": [
            [
                "5792447de0131e73",
                "f678bf79cef11c12"
            ]
        ]
    },
    {
        "id": "194d2908ec3d0929",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2900,
        "wires": []
    },
    {
        "id": "8c44059f5aac0c6f",
        "type": "join",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 930,
        "y": 2960,
        "wires": [
            [
                "194d2908ec3d0929"
            ]
        ]
    },
    {
        "id": "3bb04de21f29fc73",
        "type": "subflow:c967abe5be484ee6",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 2330,
        "y": 220,
        "wires": [
            [
                "85bbbbb955279cce"
            ],
            [
                "85bbbbb955279cce"
            ],
            [
                "85bbbbb955279cce"
            ]
        ]
    },
    {
        "id": "4f9539da465cd05a",
        "type": "subflow:c967abe5be484ee6",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 2330,
        "y": 280,
        "wires": [
            [
                "a8a629af1c61453f"
            ],
            [
                "a8a629af1c61453f"
            ],
            [
                "a8a629af1c61453f"
            ]
        ]
    },
    {
        "id": "fd38811164759d48",
        "type": "subflow:c967abe5be484ee6",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 2330,
        "y": 340,
        "wires": [
            [
                "a0468e25398dee83"
            ],
            [
                "a0468e25398dee83"
            ],
            [
                "a0468e25398dee83"
            ]
        ]
    },
    {
        "id": "d929f189b5cdeb97",
        "type": "subflow:c967abe5be484ee6",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 2330,
        "y": 400,
        "wires": [
            [
                "faaa9c2c4f22247a"
            ],
            [
                "faaa9c2c4f22247a"
            ],
            [
                "faaa9c2c4f22247a"
            ]
        ]
    },
    {
        "id": "c0c834cec53f2580",
        "type": "subflow:c967abe5be484ee6",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 2330,
        "y": 460,
        "wires": [
            [
                "8195b25c71b87897"
            ],
            [
                "8195b25c71b87897"
            ],
            [
                "8195b25c71b87897"
            ]
        ]
    },
    {
        "id": "52e553a31c598e10",
        "type": "subflow:c967abe5be484ee6",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 2330,
        "y": 520,
        "wires": [
            [
                "5c8d08c380f3c83c"
            ],
            [
                "5c8d08c380f3c83c"
            ],
            [
                "5c8d08c380f3c83c"
            ]
        ]
    },
    {
        "id": "d6bbb415a21b9265",
        "type": "subflow:c967abe5be484ee6",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 2330,
        "y": 580,
        "wires": [
            [
                "79544073b704db82"
            ],
            [
                "79544073b704db82"
            ],
            [
                "79544073b704db82"
            ]
        ]
    },
    {
        "id": "54a6b73ccb177ca4",
        "type": "subflow:c967abe5be484ee6",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 2330,
        "y": 640,
        "wires": [
            [
                "10cdec73865dc8b0"
            ],
            [
                "10cdec73865dc8b0"
            ],
            [
                "10cdec73865dc8b0"
            ]
        ]
    },
    {
        "id": "852b78df4e8c39e7",
        "type": "sqlite",
        "z": "c8e1ef6f509cd75a",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1040,
        "y": 1080,
        "wires": [
            [
                "7469b23c7663c08e",
                "049bcc15ab764004",
                "05e0cd16574b5651",
                "c07a9500991a7f78",
                "f169f8d25b9860cb",
                "29cc830183af111c",
                "2315776197970517",
                "53a7fd969e406817",
                "a65f77a9cdad872f",
                "21fc033df0503c30"
            ]
        ]
    },
    {
        "id": "1aa5e6353669ca19",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 2Hr Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(distinct call) as totalqsos,\ntotal(isbusted) as busted,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-2 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by totalqsos desc;",
        "output": "str",
        "x": 240,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "0173339b90c30073",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "8bf40d033d555b71",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "2nd Place Overall Trending",
        "label": "Overall",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1960,
        "y": 1520,
        "wires": []
    },
    {
        "id": "8ce83f211846106d",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4349237f79c6ee9d",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "3rd Place Overall Trending",
        "label": "Overall",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1960,
        "y": 1560,
        "wires": []
    },
    {
        "id": "a06aef0809e3b058",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "de79e0318aecd9cc",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "4th Place Overall Trending",
        "label": "Overall",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1960,
        "y": 1600,
        "wires": []
    },
    {
        "id": "fcc708c0b3c585dc",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "ec08fadc8d1d73bf",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "5th Place Overall Trending",
        "label": "Overall",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1960,
        "y": 1640,
        "wires": []
    },
    {
        "id": "11aabad73297429a",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "3dad506044ed2f24",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "6th Place Overall Trending",
        "label": "Overall",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1960,
        "y": 1680,
        "wires": []
    },
    {
        "id": "048583383c6c2b63",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "fbe68cb50c200a91",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "7th Place Overall Trending",
        "label": "Overall",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1960,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b92aec5ddc71fafc",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "84c8e4f24085b4d7",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "8th Place Overall Trending",
        "label": "Overall",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1960,
        "y": 1760,
        "wires": []
    },
    {
        "id": "5b5a697a70efb8e5",
        "type": "ui_chart",
        "z": "c8e1ef6f509cd75a",
        "name": "Operator 1Hr Q's/Hr",
        "group": "2da8694540143f9a",
        "order": 1,
        "width": 13,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2540,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "4386336ee678eaa6",
        "type": "ui_chart",
        "z": "c8e1ef6f509cd75a",
        "name": "Operators 2Hr Q's/Hr",
        "group": "ba191f5b911d96f8",
        "order": 1,
        "width": 13,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2020,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "f2a6aaaadecd230e",
        "type": "ui_chart",
        "z": "c8e1ef6f509cd75a",
        "name": "Operators Score Chart",
        "group": "6c301c05c13a5e40",
        "order": 1,
        "width": 13,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2540,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "5efdb6488628af4b",
        "type": "ui_chart",
        "z": "c8e1ef6f509cd75a",
        "name": "Operators QSOs Chart",
        "group": "1d57c18be03cdf58",
        "order": 1,
        "width": 13,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2540,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f1d22697c74b510d",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4fe32a048d3e8016",
        "order": 1,
        "width": 2,
        "height": 2,
        "name": "1st Place 1Hr Rate Trending",
        "label": "1hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 1840,
        "wires": []
    },
    {
        "id": "01133d67adbaf806",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "cf0fd8137d27fde9",
        "order": 1,
        "width": 2,
        "height": 2,
        "name": "2nd Place 1Hr Rate Trending",
        "label": "1hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 1880,
        "wires": []
    },
    {
        "id": "8ce512c3b1c7c11a",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "a54565f26ef859a6",
        "order": 1,
        "width": 2,
        "height": 2,
        "name": "3rd Place 1Hr Rate Trending",
        "label": "1hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 1920,
        "wires": []
    },
    {
        "id": "43d8d1e673f4cd7c",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "53db3fa281c44012",
        "order": 1,
        "width": 2,
        "height": 2,
        "name": "4th Place 1Hr Rate Trending",
        "label": "1hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 1960,
        "wires": []
    },
    {
        "id": "cc1e30724335086d",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "5ea99b2ffafa1455",
        "order": 1,
        "width": 2,
        "height": 2,
        "name": "5th Place 1Hr Rate Trending",
        "label": "1hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2000,
        "wires": []
    },
    {
        "id": "08912b465a9ef75e",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "2083f5d4aa25f442",
        "order": 1,
        "width": 2,
        "height": 2,
        "name": "6th Place 1Hr Rate Trending",
        "label": "1hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2040,
        "wires": []
    },
    {
        "id": "804ab4252f9e6b08",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "1f8381235f15779f",
        "order": 1,
        "width": 2,
        "height": 2,
        "name": "7th Place 1Hr Rate Trending",
        "label": "1hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2080,
        "wires": []
    },
    {
        "id": "51f7aec3999c34fe",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "49e8559f5916fe38",
        "order": 1,
        "width": 2,
        "height": 2,
        "name": "8th Place 1Hr Rate Trending",
        "label": "1hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2120,
        "wires": []
    },
    {
        "id": "84125f6fa5dde217",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP0_1HRateCurrent\");\nflow.set([\"OP0_1HRatePrevious\"],[previousrate]);\n\nif (msg.payload[0] != null)\n{\n    msg.rate = msg.payload[0].rate\n    let call = msg.payload[0].operator\n    let rate = msg.payload[0].rate\n    flow.set([\"OP0\"],[call])\n    flow.set([\"OP0_1HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[0] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 220,
        "wires": [
            [
                "3bb04de21f29fc73"
            ]
        ]
    },
    {
        "id": "049bcc15ab764004",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP0_2HRateCurrent\");\nflow.set([\"OP0_2HRatePrevious\"],[previousrate]);\n\nif (msg.payload[0] != null)\n{\n    msg.rate = msg.payload[0].rate\n    rate = msg.payload[0].rate\n    flow.set([\"OP0_2HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[0] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1000,
        "wires": [
            [
                "c73ec9d8818ae376"
            ]
        ]
    },
    {
        "id": "05e0cd16574b5651",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP1_2HRateCurrent\");\nflow.set([\"OP1_2HRatePrevious\"],[previousrate]);\n\nif (msg.payload[1] != null)\n{\n    msg.rate = msg.payload[1].rate\n    rate = msg.payload[1].rate\n    flow.set([\"OP1_2HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[1] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1060,
        "wires": [
            [
                "99d4566b9cf8980e"
            ]
        ]
    },
    {
        "id": "c07a9500991a7f78",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP2_2HRateCurrent\");\nflow.set([\"OP2_2HRatePrevious\"],[previousrate]);\n\nif (msg.payload[2] != null)\n{\n    msg.rate = msg.payload[2].rate\n    rate = msg.payload[2].rate\n    flow.set([\"OP2_2HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[2] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1120,
        "wires": [
            [
                "02876d688b9989e2"
            ]
        ]
    },
    {
        "id": "f169f8d25b9860cb",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP3_2HRateCurrent\");\nflow.set([\"OP3_2HRatePrevious\"],[previousrate]);\n\nif (msg.payload[3] != null)\n{\n    msg.rate = msg.payload[3].rate\n    rate = msg.payload[3].rate\n    flow.set([\"OP3_2HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[3] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1180,
        "wires": [
            [
                "d44619f01e1ce742"
            ]
        ]
    },
    {
        "id": "29cc830183af111c",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow rate",
        "func": "let previousrate = flow.get(\"OP4_2HRateCurrent\");\nflow.set([\"OP4_2HRatePrevious\"],[previousrate]);\n\nif (msg.payload[4] != null)\n{\n    msg.rate = msg.payload[4].rate\n    rate = msg.payload[4].rate\n    flow.set([\"OP4_2HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[4] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1240,
        "wires": [
            [
                "69315433e45eeb72"
            ]
        ]
    },
    {
        "id": "2315776197970517",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow rate",
        "func": "let previousrate = flow.get(\"OP5_2HRateCurrent\");\nflow.set([\"OP5_2HRatePrevious\"],[previousrate]);\n\nif (msg.payload[5] != null)\n{\n    msg.rate = msg.payload[5].rate\n    rate = msg.payload[5].rate\n    flow.set([\"OP5_2HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[5] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1300,
        "wires": [
            [
                "f5e8e6ce5aaf36a1"
            ]
        ]
    },
    {
        "id": "53a7fd969e406817",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow rate",
        "func": "let previousrate = flow.get(\"OP6_2HRateCurrent\");\nflow.set([\"OP6_2HRatePrevious\"],[previousrate]);\n\nif (msg.payload[6] != null)\n{\n    msg.rate = msg.payload[6].rate\n    rate = msg.payload[6].rate\n    flow.set([\"OP6_2HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[6] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1360,
        "wires": [
            [
                "30dba7714a329859"
            ]
        ]
    },
    {
        "id": "a65f77a9cdad872f",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow rate",
        "func": "let previousrate = flow.get(\"OP7_2HRateCurrent\");\nflow.set([\"OP7_2HRatePrevious\"],[previousrate]);\n\nif (msg.payload[7] != null)\n{\n    msg.rate = msg.payload[7].rate\n    rate = msg.payload[7].rate\n    flow.set([\"OP7_2HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[7] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1420,
        "wires": [
            [
                "1171f1687a20db54"
            ]
        ]
    },
    {
        "id": "71e08397fedf0ff4",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP1_1HRateCurrent\");\nflow.set([\"OP1_1HRatePrevious\"],[previousrate]);\n\nif (msg.payload[1] != null)\n{\n    msg.rate = msg.payload[1].rate\n    let call = msg.payload[1].operator\n    let rate = msg.payload[1].rate\n    flow.set([\"OP1\"],[call])\n    flow.set([\"OP1_1HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[1] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 280,
        "wires": [
            [
                "4f9539da465cd05a"
            ]
        ]
    },
    {
        "id": "2a30d423bfa0de72",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP3_1HRateCurrent\");\nflow.set([\"OP3_1HRatePrevious\"],[previousrate]);\n\nif (msg.payload[3] != null)\n{\n    msg.rate = msg.payload[3].rate\n    let call = msg.payload[3].operator\n    let rate = msg.payload[3].rate\n    flow.set([\"OP3\"],[call])\n    flow.set([\"OP3_1HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[3] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 400,
        "wires": [
            [
                "d929f189b5cdeb97"
            ]
        ]
    },
    {
        "id": "dab5d935729234b6",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP4_1HRateCurrent\");\nflow.set([\"OP4_1HRatePrevious\"],[previousrate]);\n\nif (msg.payload[4] != null)\n{\n    msg.rate = msg.payload[4].rate\n    let call = msg.payload[4].operator\n    let rate = msg.payload[4].rate\n    flow.set([\"OP4\"],[call])\n    flow.set([\"OP4_1HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[4] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 460,
        "wires": [
            [
                "c0c834cec53f2580"
            ]
        ]
    },
    {
        "id": "83a4a868bef4d301",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP5_1HRateCurrent\");\nflow.set([\"OP5_1HRatePrevious\"],[previousrate]);\n\nif (msg.payload[5] != null)\n{\n    msg.rate = msg.payload[5].rate\n    let call = msg.payload[5].operator\n    let rate = msg.payload[5].rate\n    flow.set([\"OP5\"],[call])\n    flow.set([\"OP5_1HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[5] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 520,
        "wires": [
            [
                "52e553a31c598e10"
            ]
        ]
    },
    {
        "id": "08bb28416a4c857f",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP6_1HRateCurrent\");\nflow.set([\"OP6_1HRatePrevious\"],[previousrate]);\n\nif (msg.payload[6] != null)\n{\n    msg.rate = msg.payload[6].rate\n    let call = msg.payload[6].operator\n    let rate = msg.payload[6].rate\n    flow.set([\"OP6\"],[call])\n    flow.set([\"OP6_1HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[6] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 580,
        "wires": [
            [
                "d6bbb415a21b9265"
            ]
        ]
    },
    {
        "id": "9db860a23cb0de6e",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP7_1HRateCurrent\");\nflow.set([\"OP7_1HRatePrevious\"],[previousrate]);\n\nif (msg.payload[7] != null)\n{\n    msg.rate = msg.payload[7].rate\n    let call = msg.payload[7].operator\n    let rate = msg.payload[7].rate\n    flow.set([\"OP7\"],[call])\n    flow.set([\"OP7_1HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[7] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 640,
        "wires": [
            [
                "54a6b73ccb177ca4"
            ]
        ]
    },
    {
        "id": "689a711ac2c1cc37",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set msg.rate & flow set",
        "func": "let previousrate = flow.get(\"OP2_1HRateCurrent\");\nflow.set([\"OP2_1HRatePrevious\"],[previousrate]);\n\nif (msg.payload[2] != null)\n{\n    msg.rate = msg.payload[2].rate\n    let call = msg.payload[2].operator\n    let rate = msg.payload[2].rate\n    flow.set([\"OP2\"],[call])\n    flow.set([\"OP2_1HRateCurrent\"],[rate])\n    return msg;\n}\n\nif (msg.payload[2] == null)\n{\n    msg.rate = 0\n    return msg;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 340,
        "wires": [
            [
                "fd38811164759d48"
            ]
        ]
    },
    {
        "id": "f09ca3fb1f789f90",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4fe32a048d3e8016",
        "order": 2,
        "width": 2,
        "height": 2,
        "name": "1st Place 2Hr Rate Trending",
        "label": "2hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2200,
        "wires": []
    },
    {
        "id": "9f49e1b3a8dbcbc9",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "cf0fd8137d27fde9",
        "order": 2,
        "width": 2,
        "height": 2,
        "name": "2nd Place 2Hr Rate Trending",
        "label": "2hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2240,
        "wires": []
    },
    {
        "id": "78a88421b603dfad",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "a54565f26ef859a6",
        "order": 2,
        "width": 2,
        "height": 2,
        "name": "3rd Place 2Hr Rate Trending",
        "label": "2hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2280,
        "wires": []
    },
    {
        "id": "6d0ddc9efba4411e",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "53db3fa281c44012",
        "order": 2,
        "width": 2,
        "height": 2,
        "name": "4th Place 2Hr Rate Trending",
        "label": "2hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2320,
        "wires": []
    },
    {
        "id": "9fdc4f465d7dc9b1",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "5ea99b2ffafa1455",
        "order": 2,
        "width": 2,
        "height": 2,
        "name": "5th Place 2Hr Rate Trending",
        "label": "2hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2360,
        "wires": []
    },
    {
        "id": "23310392a454374a",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "2083f5d4aa25f442",
        "order": 2,
        "width": 2,
        "height": 2,
        "name": "6th Place 2Hr Rate Trending",
        "label": "2hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2400,
        "wires": []
    },
    {
        "id": "9119d9c282c42a34",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "1f8381235f15779f",
        "order": 2,
        "width": 2,
        "height": 2,
        "name": "7th Place 2Hr Rate Trending",
        "label": "2hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2440,
        "wires": []
    },
    {
        "id": "187d324ac6f32059",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "49e8559f5916fe38",
        "order": 2,
        "width": 2,
        "height": 2,
        "name": "8th Place 2Hr Rate Trending",
        "label": "2hr Rate",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1980,
        "y": 2480,
        "wires": []
    },
    {
        "id": "2dbfd82fa9a1874b",
        "type": "link in",
        "z": "c8e1ef6f509cd75a",
        "name": "OP Competition Stats Clear IN",
        "links": [
            "5e1859619292b1b8"
        ],
        "x": 1875,
        "y": 880,
        "wires": [
            [
                "f48d809a801528dc",
                "ea093b5555301fc3",
                "48a3eb8596b10e96"
            ]
        ]
    },
    {
        "id": "f48d809a801528dc",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Reset Flow Variables",
        "func": "flow.set('OP0', undefined);\nflow.set('OP0_1HRateCurrent', undefined);\nflow.set('OP0_1HRatePrevious', undefined);\nflow.set('OP0_1HrTrendScore', undefined);\nflow.set('OP0_2HRateCurrent', undefined);\nflow.set('OP0_2HRatePrevious', undefined);\nflow.set('OP0_2HrTrendScore', undefined);\nflow.set('OP0_TrendScore', undefined);\n\nflow.set('OP1', undefined);\nflow.set('OP1_1HRateCurrent', undefined);\nflow.set('OP1_1HRatePrevious', undefined);\nflow.set('OP1_1HrTrendScore', undefined);\nflow.set('OP1_2HRateCurrent', undefined);\nflow.set('OP1_2HRatePrevious', undefined);\nflow.set('OP1_2HrTrendScore', undefined);\nflow.set('OP1_TrendScore', undefined);\n\nflow.set('OP2', undefined);\nflow.set('OP2_1HRateCurrent', undefined);\nflow.set('OP2_1HRatePrevious', undefined);\nflow.set('OP2_1HrTrendScore', undefined);\nflow.set('OP2_2HRateCurrent', undefined);\nflow.set('OP2_2HRatePrevious', undefined);\nflow.set('OP2_2HrTrendScore', undefined);\nflow.set('OP2_TrendScore', undefined);\n\nflow.set('OP3', undefined);\nflow.set('OP3_1HRateCurrent', undefined);\nflow.set('OP3_1HRatePrevious', undefined);\nflow.set('OP3_1HrTrendScore', undefined);\nflow.set('OP3_2HRateCurrent', undefined);\nflow.set('OP3_2HRatePrevious', undefined);\nflow.set('OP3_2HrTrendScore', undefined);\nflow.set('OP3_TrendScore', undefined);\n\nflow.set('OP4', undefined);\nflow.set('OP4_1HRateCurrent', undefined);\nflow.set('OP4_1HRatePrevious', undefined);\nflow.set('OP4_1HrTrendScore', undefined);\nflow.set('OP4_2HRateCurrent', undefined);\nflow.set('OP4_2HRatePrevious', undefined);\nflow.set('OP4_2HrTrendScore', undefined);\nflow.set('OP4_TrendScore', undefined);\n\nflow.set('OP5', undefined);\nflow.set('OP5_1HRateCurrent', undefined);\nflow.set('OP5_1HRatePrevious', undefined);\nflow.set('OP5_1HrTrendScore', undefined);\nflow.set('OP5_2HRateCurrent', undefined);\nflow.set('OP5_2HRatePrevious', undefined);\nflow.set('OP5_2HrTrendScore', undefined);\nflow.set('OP5_TrendScore', undefined);\n\nflow.set('OP6', undefined);\nflow.set('OP6_1HRateCurrent', undefined);\nflow.set('OP6_1HRatePrevious', undefined);\nflow.set('OP6_1HrTrendScore', undefined);\nflow.set('OP6_2HRateCurrent', undefined);\nflow.set('OP6_2HRatePrevious', undefined);\nflow.set('OP6_2HrTrendScore', undefined);\nflow.set('OP6_TrendScore', undefined);\n\nflow.set('OP7', undefined);\nflow.set('OP7_1HRateCurrent', undefined);\nflow.set('OP7_1HRatePrevious', undefined);\nflow.set('OP7_1HrTrendScore', undefined);\nflow.set('OP7_2HRateCurrent', undefined);\nflow.set('OP7_2HRatePrevious', undefined);\nflow.set('OP7_2HrTrendScore', undefined);\nflow.set('OP7_TrendScore', undefined);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "85b47be5c163b3f0",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "1Hr Rate Trending Arrow Direction",
        "func": "\nlet ratecurrent = flow.get(\"OP0_1HRateCurrent\")\nlet rateprevious = flow.get(\"OP0_1HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP0_1HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP0_1HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP0_1HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\n//flow.set([\"OP0_1HRateTrendscore\"],[ratecurrent]);\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1840,
        "wires": [
            [
                "f1d22697c74b510d",
                "fb8bc0817c84501c"
            ]
        ]
    },
    {
        "id": "5086efc9ddeec8ac",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "1Hr Rate Trending Arrow Direction",
        "func": "let ratecurrent = flow.get(\"OP1_1HRateCurrent\")\nlet rateprevious = flow.get(\"OP1_1HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP1_1HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP1_1HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP1_1HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1880,
        "wires": [
            [
                "01133d67adbaf806",
                "4062aca95dfdd1be"
            ]
        ]
    },
    {
        "id": "9dfe1a3480d22cf3",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "1Hr Rate Trending Arrow Direction",
        "func": "let ratecurrent = flow.get(\"OP2_1HRateCurrent\")\nlet rateprevious = flow.get(\"OP2_1HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP2_1HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP2_1HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP2_1HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1920,
        "wires": [
            [
                "8ce512c3b1c7c11a",
                "84e26f7e2bc1bf34"
            ]
        ]
    },
    {
        "id": "92ed056eda686753",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "1Hr Rate Trending Arrow Direction",
        "func": "let ratecurrent = flow.get(\"OP3_1HRateCurrent\")\nlet rateprevious = flow.get(\"OP3_1HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP3_1HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP3_1HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP3_1HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1960,
        "wires": [
            [
                "43d8d1e673f4cd7c",
                "e11754ef4c698278"
            ]
        ]
    },
    {
        "id": "f5227e733dc9367f",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "1Hr Rate Trending Arrow Direction",
        "func": "let ratecurrent = flow.get(\"OP4_1HRateCurrent\")\nlet rateprevious = flow.get(\"OP4_1HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP4_1HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP4_1HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP4_1HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2000,
        "wires": [
            [
                "cc1e30724335086d",
                "61d1f848cde15fe2"
            ]
        ]
    },
    {
        "id": "5e640a0c686ea653",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "1Hr Rate Trending Arrow Direction",
        "func": "let ratecurrent = flow.get(\"OP5_1HRateCurrent\")\nlet rateprevious = flow.get(\"OP5_1HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP5_1HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP5_1HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP5_1HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2040,
        "wires": [
            [
                "08912b465a9ef75e",
                "9e5fa2f331f79e43"
            ]
        ]
    },
    {
        "id": "95638eb6e9f95f5c",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "1Hr Rate Trending Arrow Direction",
        "func": "let ratecurrent = flow.get(\"OP6_1HRateCurrent\")\nlet rateprevious = flow.get(\"OP6_1HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP6_1HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP6_1HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP6_1HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2080,
        "wires": [
            [
                "804ab4252f9e6b08",
                "6be503635fa850eb"
            ]
        ]
    },
    {
        "id": "262914991187e01b",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "1Hr Rate Trending Arrow Direction",
        "func": "let ratecurrent = flow.get(\"OP7_1HRateCurrent\")\nlet rateprevious = flow.get(\"OP7_1HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP7_1HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP7_1HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP7_1HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2120,
        "wires": [
            [
                "51f7aec3999c34fe",
                "4a1a6dfeb336fb4a"
            ]
        ]
    },
    {
        "id": "fdcd1a86d1dbece5",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set topic & payload",
        "func": "let rate = 0\n\nif (msg.payload != null)\n{\n    msg.topic = msg.payload.operator;\n    rate = msg.payload.rate\n    msg.payload = rate;\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 680,
        "wires": [
            [
                "5b5a697a70efb8e5"
            ]
        ]
    },
    {
        "id": "a44ee2cc9a9b7398",
        "type": "split",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2030,
        "y": 680,
        "wires": [
            [
                "fdcd1a86d1dbece5"
            ]
        ]
    },
    {
        "id": "2b2f3e640248b72a",
        "type": "delay",
        "z": "c8e1ef6f509cd75a",
        "name": "10s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "10",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 310,
        "y": 520,
        "wires": [
            [
                "7871710524fd6ea8",
                "a44c95b611befae2"
            ]
        ]
    },
    {
        "id": "fd25a617c30bc58c",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set topic & payload",
        "func": "let rate = 0\n\nif (msg.payload != null)\n{\n    msg.topic = msg.payload.operator;\n    rate = msg.payload.rate\n    msg.payload = rate;\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 960,
        "wires": [
            [
                "4386336ee678eaa6"
            ]
        ]
    },
    {
        "id": "7469b23c7663c08e",
        "type": "split",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1530,
        "y": 960,
        "wires": [
            [
                "fd25a617c30bc58c"
            ]
        ]
    },
    {
        "id": "e86e6ef9f37c360d",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set topic & payload",
        "func": "let score = 0\n\nif (msg.payload != null)\n{\n    msg.topic = msg.payload.operator;\n    score = msg.payload.score\n    msg.payload = score;\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 720,
        "wires": [
            [
                "f2a6aaaadecd230e"
            ]
        ]
    },
    {
        "id": "76b9e5dff8bd683f",
        "type": "split",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2030,
        "y": 720,
        "wires": [
            [
                "e86e6ef9f37c360d"
            ]
        ]
    },
    {
        "id": "ab1fc32faaf1b4e3",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Set topic & payload",
        "func": "let qsos = 0\n\nif (msg.payload != null)\n{\n    msg.topic = msg.payload.operator;\n    qsos = msg.payload.totalqsos;\n    msg.payload = qsos;\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2230,
        "y": 760,
        "wires": [
            [
                "5efdb6488628af4b"
            ]
        ]
    },
    {
        "id": "ef7856ab646dc938",
        "type": "split",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2030,
        "y": 760,
        "wires": [
            [
                "ab1fc32faaf1b4e3"
            ]
        ]
    },
    {
        "id": "ea093b5555301fc3",
        "type": "change",
        "z": "c8e1ef6f509cd75a",
        "name": "Clear Stats",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2350,
        "y": 880,
        "wires": [
            [
                "5b5a697a70efb8e5",
                "f2a6aaaadecd230e",
                "5efdb6488628af4b",
                "4386336ee678eaa6"
            ]
        ]
    },
    {
        "id": "c73ec9d8818ae376",
        "type": "subflow:7d3bb9d663bb9f7c",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 1840,
        "y": 1000,
        "wires": [
            [
                "0dd4886eb5efe40b"
            ],
            [
                "0dd4886eb5efe40b"
            ],
            [
                "0dd4886eb5efe40b"
            ]
        ]
    },
    {
        "id": "99d4566b9cf8980e",
        "type": "subflow:7d3bb9d663bb9f7c",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 1840,
        "y": 1060,
        "wires": [
            [
                "1d60e2ec9ef777d3"
            ],
            [
                "1d60e2ec9ef777d3"
            ],
            [
                "1d60e2ec9ef777d3"
            ]
        ]
    },
    {
        "id": "02876d688b9989e2",
        "type": "subflow:7d3bb9d663bb9f7c",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 1840,
        "y": 1120,
        "wires": [
            [
                "16ed5df7bb6031a9"
            ],
            [
                "16ed5df7bb6031a9"
            ],
            [
                "16ed5df7bb6031a9"
            ]
        ]
    },
    {
        "id": "d44619f01e1ce742",
        "type": "subflow:7d3bb9d663bb9f7c",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 1840,
        "y": 1180,
        "wires": [
            [
                "9b0da2b2603edbdd"
            ],
            [
                "9b0da2b2603edbdd"
            ],
            [
                "9b0da2b2603edbdd"
            ]
        ]
    },
    {
        "id": "69315433e45eeb72",
        "type": "subflow:7d3bb9d663bb9f7c",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 1840,
        "y": 1240,
        "wires": [
            [
                "4a5f395f4ffdd7ed"
            ],
            [
                "4a5f395f4ffdd7ed"
            ],
            [
                "4a5f395f4ffdd7ed"
            ]
        ]
    },
    {
        "id": "f5e8e6ce5aaf36a1",
        "type": "subflow:7d3bb9d663bb9f7c",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 1840,
        "y": 1300,
        "wires": [
            [
                "1343d07ab73fd624"
            ],
            [
                "1343d07ab73fd624"
            ],
            [
                "1343d07ab73fd624"
            ]
        ]
    },
    {
        "id": "30dba7714a329859",
        "type": "subflow:7d3bb9d663bb9f7c",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 1840,
        "y": 1360,
        "wires": [
            [
                "582de778fcc4c175"
            ],
            [
                "582de778fcc4c175"
            ],
            [
                "582de778fcc4c175"
            ]
        ]
    },
    {
        "id": "1171f1687a20db54",
        "type": "subflow:7d3bb9d663bb9f7c",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "x": 1840,
        "y": 1420,
        "wires": [
            [
                "648aa4a6cc2e22db"
            ],
            [
                "648aa4a6cc2e22db"
            ],
            []
        ]
    },
    {
        "id": "6dc0b640e1c8407e",
        "type": "link out",
        "z": "c8e1ef6f509cd75a",
        "name": "OP Competition 1Hr Rate Trending OUT",
        "mode": "link",
        "links": [
            "2c852c39b9025338"
        ],
        "x": 1455,
        "y": 620,
        "wires": []
    },
    {
        "id": "2c852c39b9025338",
        "type": "link in",
        "z": "c8e1ef6f509cd75a",
        "name": "OP Competition 1Hr Rate Trending IN",
        "links": [
            "6dc0b640e1c8407e"
        ],
        "x": 95,
        "y": 2000,
        "wires": [
            [
                "42dd44c1b9117a77",
                "876a37f507199eeb",
                "064a889f6409cc77"
            ]
        ]
    },
    {
        "id": "42dd44c1b9117a77",
        "type": "delay",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 720,
        "y": 1640,
        "wires": [
            [
                "946213d343357cf2",
                "c41fe5e78ced3900",
                "8b7529644a06a10b",
                "68dc1380a35da70a",
                "7a218c90f41660bb",
                "0f2a696a3e1e9795",
                "6fb6403fef98802f",
                "ab0335159c22cdf3",
                "c683557c7a6ec5e5"
            ]
        ]
    },
    {
        "id": "7871710524fd6ea8",
        "type": "delay",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 240,
        "y": 1080,
        "wires": [
            [
                "ab15bdd28dcafc0f"
            ]
        ]
    },
    {
        "id": "7efa1ebb794e5dea",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1480,
        "wires": []
    },
    {
        "id": "8433fd3cfc7ddddc",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1520,
        "wires": []
    },
    {
        "id": "05eb80183770322c",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1560,
        "wires": []
    },
    {
        "id": "25baec64d0da4507",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1600,
        "wires": []
    },
    {
        "id": "7f7d7ec4af88bb2c",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1640,
        "wires": []
    },
    {
        "id": "2618bdd7f2dcf19e",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1680,
        "wires": []
    },
    {
        "id": "7c182c86d2aa1bbb",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1720,
        "wires": []
    },
    {
        "id": "5b48eca13a7f6b38",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1760,
        "wires": []
    },
    {
        "id": "29d1e8f7a6175ead",
        "type": "comment",
        "z": "c8e1ef6f509cd75a",
        "name": "Arrow Decision Tree",
        "info": "Up = 2 pt\nEven = 1 pt\nDown = 0 pt\n\n\n\nOverall         1Hr             2Hr             Score\n--------------------------------------------------\n6               2               2               2\n5               2               1               2\n5               2               2               1\n++++++++\n4               2               1               1\n4               2               2               0\n4               2               0               2\n++++++++\n3               2               1               0\n3               2               0               1\n2               2               0               0\n\n---------------------------------------------------\n4               1               2               2\n4               1               1               2\n4               1               2               1\n++++++++\n3               1               1               1\n3               1               2               0\n3               1               0               2\n2               1               1               0\n2               1               0               1\n++++++++\n1               1               0               0\n\n\n---------------------------------------------------\n4               0               2               2\n++++++++\n3               0               1               2\n3               0               2               1\n3               0               1               2\n2               0               1               1\n2               0               2               0\n2               0               0               2\n++++++++\n1               0               1               0\n1               0               0               1\n0               0               0               0",
        "x": 390,
        "y": 1580,
        "wires": []
    },
    {
        "id": "61d3849fc0346ed6",
        "type": "sqlite",
        "z": "c8e1ef6f509cd75a",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1140,
        "y": 2000,
        "wires": [
            [
                "85b47be5c163b3f0",
                "5086efc9ddeec8ac",
                "9dfe1a3480d22cf3",
                "92ed056eda686753",
                "f5227e733dc9367f",
                "5e640a0c686ea653",
                "95638eb6e9f95f5c",
                "262914991187e01b"
            ]
        ]
    },
    {
        "id": "876a37f507199eeb",
        "type": "delay",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 2000,
        "wires": [
            [
                "cae8e34448c7d707"
            ]
        ]
    },
    {
        "id": "064a889f6409cc77",
        "type": "delay",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 2360,
        "wires": [
            [
                "ba87c2d797a27f49"
            ]
        ]
    },
    {
        "id": "ea8fe7c3d099027a",
        "type": "sqlite",
        "z": "c8e1ef6f509cd75a",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1120,
        "y": 2360,
        "wires": [
            [
                "51d5370931f82b77",
                "0c7100be1b8f1e6e",
                "574e2b1b185f9621",
                "973bea3c3c2c49fc",
                "63b8becc7f3f04d2",
                "18412a2c6a9c09f9",
                "572e78028a063520",
                "52a9a7586d46fa54"
            ]
        ]
    },
    {
        "id": "a44c95b611befae2",
        "type": "switch",
        "z": "c8e1ef6f509cd75a",
        "name": "Sort By",
        "property": "opsorttype",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "mults",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "qsos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "score",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 540,
        "y": 520,
        "wires": [
            [
                "71575ce3c0ee86ec"
            ],
            [
                "b75e17f3e122ce80"
            ],
            [
                "a94eae46690b111a"
            ]
        ]
    },
    {
        "id": "71575ce3c0ee86ec",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 1Hr Rate Sorty by Mults",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount(case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-1 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by multiplier desc;",
        "output": "str",
        "x": 860,
        "y": 480,
        "wires": [
            [
                "e5bfbfa56cbfc533"
            ]
        ]
    },
    {
        "id": "b75e17f3e122ce80",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 1Hr Rate Sorty by QSOs",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-1 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by totalqsos desc;",
        "output": "str",
        "x": 860,
        "y": 520,
        "wires": [
            [
                "e5bfbfa56cbfc533"
            ]
        ]
    },
    {
        "id": "a94eae46690b111a",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 1Hr Rate Sorty by Score",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-1 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by score desc;",
        "output": "str",
        "x": 860,
        "y": 560,
        "wires": [
            [
                "e5bfbfa56cbfc533"
            ]
        ]
    },
    {
        "id": "21fc033df0503c30",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ab15bdd28dcafc0f",
        "type": "switch",
        "z": "c8e1ef6f509cd75a",
        "name": "Sort By",
        "property": "opsorttype",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "mults",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "qsos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "score",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "2a3df4895a5d6780"
            ],
            [
                "a84a90b1ace92c67"
            ],
            [
                "ef5a4a7424394ddf"
            ]
        ]
    },
    {
        "id": "2a3df4895a5d6780",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 2Hr Rate Sorty by Mults",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-2 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by multiplier desc;",
        "output": "str",
        "x": 740,
        "y": 1040,
        "wires": [
            [
                "852b78df4e8c39e7"
            ]
        ]
    },
    {
        "id": "a84a90b1ace92c67",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 2Hr Rate Sorty by QSOs",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-2 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by totalqsos desc;",
        "output": "str",
        "x": 740,
        "y": 1080,
        "wires": [
            [
                "852b78df4e8c39e7"
            ]
        ]
    },
    {
        "id": "ef5a4a7424394ddf",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 2Hr Rate Sorty by Score",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-2 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by score desc;",
        "output": "str",
        "x": 740,
        "y": 1120,
        "wires": [
            [
                "852b78df4e8c39e7"
            ]
        ]
    },
    {
        "id": "34008e11c64ab041",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "e42cdfb590735e00",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "1st Place Run Qs",
        "label": "Run Qs",
        "format": "{{msg.payload[0].totalrun}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "5c267064e9a5cfe5",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "8bf40d033d555b71",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "2nd Place Run Qs",
        "label": "Run Qs",
        "format": "{{msg.payload[1].totalrun}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 100,
        "wires": []
    },
    {
        "id": "fddd013b3adee514",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "4349237f79c6ee9d",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "3rd Place Run Qs",
        "label": "Run Qs",
        "format": "{{msg.payload[2].totalrun}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 140,
        "wires": []
    },
    {
        "id": "568d906183a5bd04",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "de79e0318aecd9cc",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "4th Place Run Qs",
        "label": "Run Qs",
        "format": "{{msg.payload[3].totalrun}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 180,
        "wires": []
    },
    {
        "id": "3dfd2af79efe8194",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "ec08fadc8d1d73bf",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "5th Place Run Qs",
        "label": "Run Qs",
        "format": "{{msg.payload[4].totalrun}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 220,
        "wires": []
    },
    {
        "id": "e7b5e69e29f5048b",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "3dad506044ed2f24",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "6th Place Run Qs",
        "label": "Run Qs",
        "format": "{{msg.payload[5].totalrun}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 260,
        "wires": []
    },
    {
        "id": "4469d749f5f64ed9",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "fbe68cb50c200a91",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "7th Place Run Qs",
        "label": "Run Qs",
        "format": "{{msg.payload[6].totalrun}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "2697e5e8c3c7b86f",
        "type": "ui_text",
        "z": "c8e1ef6f509cd75a",
        "group": "84c8e4f24085b4d7",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "8th Place Run Qs",
        "label": "Run Qs",
        "format": "{{msg.payload[7].totalrun}}",
        "layout": "col-center",
        "className": "",
        "x": 570,
        "y": 340,
        "wires": []
    },
    {
        "id": "b2ca0d5b02a007c5",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 1Hr Rate Sorty by Mults",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-1 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by multiplier desc;",
        "output": "str",
        "x": 840,
        "y": 1960,
        "wires": [
            [
                "61d3849fc0346ed6"
            ]
        ]
    },
    {
        "id": "0c2d78020fc43d3c",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 1Hr Rate Sorty by QSOs",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-1 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by totalqsos desc;",
        "output": "str",
        "x": 840,
        "y": 2000,
        "wires": [
            [
                "61d3849fc0346ed6"
            ]
        ]
    },
    {
        "id": "49d35b7b223d6684",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 1Hr Rate Sorty by Score",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-1 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by score desc;",
        "output": "str",
        "x": 840,
        "y": 2040,
        "wires": [
            [
                "61d3849fc0346ed6"
            ]
        ]
    },
    {
        "id": "60bf62f0336c1629",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 2Hr Rate Sorty by Mults",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-2 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by multiplier desc;",
        "output": "str",
        "x": 800,
        "y": 2320,
        "wires": [
            [
                "ea8fe7c3d099027a"
            ]
        ]
    },
    {
        "id": "833228df29bb26b4",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 2Hr Rate Sorty by QSOs",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-2 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by totalqsos desc;",
        "output": "str",
        "x": 800,
        "y": 2360,
        "wires": [
            [
                "ea8fe7c3d099027a"
            ]
        ]
    },
    {
        "id": "04c095a340a5d105",
        "type": "template",
        "z": "c8e1ef6f509cd75a",
        "name": "SQL by Operator 2Hr Rate Sorty by Score",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(call) as totalqsos,\ntotal(isbusted) as busted,\ncount(case when IsRunQSO == 1 then 1 end) as totalrun,\ncount (case when IsRunQSO != 1 then 1 end) as totalsandp,\nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\noperator as operator,\n(select count(operator)\nfrom qsos \nwhere operator=qout.operator\nand timestamp >= datetime('now','-2 hours')) as rate\nfrom qsos qout\ngroup by operator \norder by score desc;",
        "output": "str",
        "x": 800,
        "y": 2400,
        "wires": [
            [
                "ea8fe7c3d099027a"
            ]
        ]
    },
    {
        "id": "0c7100be1b8f1e6e",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "2Hr Rate Trending Arrow Direction",
        "func": "\nlet ratecurrent = flow.get(\"OP0_2HRateCurrent\")\nlet rateprevious = flow.get(\"OP0_2HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP0_2HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP0_2HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP0_2HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\n//flow.set([\"OP0_1HRatePrevious\"],[ratecurrent]);\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2200,
        "wires": [
            [
                "f09ca3fb1f789f90"
            ]
        ]
    },
    {
        "id": "51d5370931f82b77",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "2Hr Rate Trending Arrow Direction",
        "func": "\nlet ratecurrent = flow.get(\"OP1_2HRateCurrent\")\nlet rateprevious = flow.get(\"OP1_2HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP1_2HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP1_2HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP1_2HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\n//flow.set([\"OP0_1HRatePrevious\"],[ratecurrent]);\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2240,
        "wires": [
            [
                "9f49e1b3a8dbcbc9"
            ]
        ]
    },
    {
        "id": "574e2b1b185f9621",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "2Hr Rate Trending Arrow Direction",
        "func": "\nlet ratecurrent = flow.get(\"OP2_2HRateCurrent\")\nlet rateprevious = flow.get(\"OP2_2HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP2_2HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP2_2HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP2_2HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\n//flow.set([\"OP0_1HRatePrevious\"],[ratecurrent]);\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2280,
        "wires": [
            [
                "78a88421b603dfad"
            ]
        ]
    },
    {
        "id": "973bea3c3c2c49fc",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "2Hr Rate Trending Arrow Direction",
        "func": "\nlet ratecurrent = flow.get(\"OP3_2HRateCurrent\")\nlet rateprevious = flow.get(\"OP3_2HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP3_2HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP3_2HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP3_2HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\n//flow.set([\"OP0_1HRatePrevious\"],[ratecurrent]);\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2320,
        "wires": [
            [
                "6d0ddc9efba4411e"
            ]
        ]
    },
    {
        "id": "63b8becc7f3f04d2",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "2Hr Rate Trending Arrow Direction",
        "func": "\nlet ratecurrent = flow.get(\"OP4_2HRateCurrent\")\nlet rateprevious = flow.get(\"OP4_2HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP4_2HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP4_2HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP4_2HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\n//flow.set([\"OP0_1HRatePrevious\"],[ratecurrent]);\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2360,
        "wires": [
            [
                "9fdc4f465d7dc9b1"
            ]
        ]
    },
    {
        "id": "18412a2c6a9c09f9",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "2Hr Rate Trending Arrow Direction",
        "func": "\nlet ratecurrent = flow.get(\"OP5_2HRateCurrent\")\nlet rateprevious = flow.get(\"OP5_2HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP5_2HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP5_2HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP5_2HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\n//flow.set([\"OP0_1HRatePrevious\"],[ratecurrent]);\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2400,
        "wires": [
            [
                "23310392a454374a"
            ]
        ]
    },
    {
        "id": "572e78028a063520",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "2Hr Rate Trending Arrow Direction",
        "func": "\nlet ratecurrent = flow.get(\"OP6_2HRateCurrent\")\nlet rateprevious = flow.get(\"OP6_2HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP6_2HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP6_2HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP6_2HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\n//flow.set([\"OP0_1HRatePrevious\"],[ratecurrent]);\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2440,
        "wires": [
            [
                "9119d9c282c42a34"
            ]
        ]
    },
    {
        "id": "52a9a7586d46fa54",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "2Hr Rate Trending Arrow Direction",
        "func": "\nlet ratecurrent = flow.get(\"OP7_2HRateCurrent\")\nlet rateprevious = flow.get(\"OP7_2HRatePrevious\")\n\nif (ratecurrent == null || ratecurrent == 0)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (ratecurrent == rateprevious)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>'};\n    flow.set([\"OP7_2HrTrendScore\"],[1]);\n    return msg;\n}\n\nif (ratecurrent > rateprevious)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>'};\n    flow.set([\"OP7_2HrTrendScore\"],[2]);\n    return msg;\n}\n\nif (ratecurrent < rateprevious)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>'};\n    flow.set([\"OP7_2HrTrendScore\"],[0]);\n    return msg;\n    \n}\n\n//flow.set([\"OP0_1HRatePrevious\"],[ratecurrent]);\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 2480,
        "wires": [
            [
                "187d324ac6f32059"
            ]
        ]
    },
    {
        "id": "c41fe5e78ced3900",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Overall Trending Arrow Direction",
        "func": "let y = flow.get(\"OP1_1HrTrendScore\");\nlet z = flow.get(\"OP1_2HrTrendScore\");\nlet rate1hr = flow.get(\"OP1_1HRateCurrent\");\nlet rate2hr = flow.get(\"OP1_2HRateCurrent\");\n\nlet totalscore = y + z;\n\nflow.set(\"OP1_TrendScore\",totalscore);\n\nif (msg.payload[1] == null)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore == null || (rate1hr == 0 && rate2hr == 0))\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore >= 3)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore == 2)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore <= 1)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1520,
        "wires": [
            [
                "0173339b90c30073",
                "8433fd3cfc7ddddc"
            ]
        ]
    },
    {
        "id": "8b7529644a06a10b",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Overall Trending Arrow Direction",
        "func": "let y = flow.get(\"OP2_1HrTrendScore\");\nlet z = flow.get(\"OP2_2HrTrendScore\");\nlet rate1hr = flow.get(\"OP2_1HRateCurrent\");\nlet rate2hr = flow.get(\"OP2_2HRateCurrent\");\n\nlet totalscore = y + z;\n\nflow.set(\"OP2_TrendScore\",totalscore);\n\nif (msg.payload[2] == null)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore == null || (rate1hr == 0 && rate2hr == 0))\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore >= 3)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore == 2)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore <= 1)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1560,
        "wires": [
            [
                "8ce83f211846106d",
                "05eb80183770322c"
            ]
        ]
    },
    {
        "id": "68dc1380a35da70a",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Overall Trending Arrow Direction",
        "func": "let y = flow.get(\"OP3_1HrTrendScore\");\nlet z = flow.get(\"OP3_2HrTrendScore\");\nlet rate1hr = flow.get(\"OP3_1HRateCurrent\");\nlet rate2hr = flow.get(\"OP3_2HRateCurrent\");\n\nlet totalscore = y + z;\n\nflow.set(\"OP3_TrendScore\",totalscore);\n\nif (msg.payload[3] == null)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\n\nif (totalscore == null || (rate1hr == 0 && rate2hr == 0))\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore >= 3)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore == 2)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore <= 1)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1600,
        "wires": [
            [
                "a06aef0809e3b058",
                "25baec64d0da4507"
            ]
        ]
    },
    {
        "id": "7a218c90f41660bb",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Overall Trending Arrow Direction",
        "func": "let y = flow.get(\"OP4_1HrTrendScore\");\nlet z = flow.get(\"OP4_2HrTrendScore\");\nlet rate1hr = flow.get(\"OP4_1HRateCurrent\");\nlet rate2hr = flow.get(\"OP4_2HRateCurrent\");\n\nlet totalscore = y + z;\n\nflow.set(\"OP4_TrendScore\",totalscore);\n\nif (msg.payload[4] == null)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore == null || (rate1hr == 0 && rate2hr == 0))\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore >= 3)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore == 2)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore <= 1)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1640,
        "wires": [
            [
                "fcc708c0b3c585dc",
                "7f7d7ec4af88bb2c"
            ]
        ]
    },
    {
        "id": "0f2a696a3e1e9795",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Overall Trending Arrow Direction",
        "func": "let y = flow.get(\"OP5_1HrTrendScore\");\nlet z = flow.get(\"OP5_2HrTrendScore\");\nlet rate1hr = flow.get(\"OP5_1HRateCurrent\");\nlet rate2hr = flow.get(\"OP5_2HRateCurrent\");\n\nlet totalscore = y + z;\n\nflow.set(\"OP5_TrendScore\",totalscore);\n\nif (msg.payload[5] == null)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore == null || (rate1hr == 0 && rate2hr == 0))\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore >= 3)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore == 2)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore <= 1)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1680,
        "wires": [
            [
                "11aabad73297429a",
                "2618bdd7f2dcf19e"
            ]
        ]
    },
    {
        "id": "6fb6403fef98802f",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Overall Trending Arrow Direction",
        "func": "let y = flow.get(\"OP6_1HrTrendScore\");\nlet z = flow.get(\"OP6_2HrTrendScore\");\nlet rate1hr = flow.get(\"OP6_1HRateCurrent\");\nlet rate2hr = flow.get(\"OP6_2HRateCurrent\");\n\nlet totalscore = y + z;\n\nflow.set(\"OP6_TrendScore\",totalscore);\n\nif (msg.payload[6] == null)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore == null || (rate1hr == 0 && rate2hr == 0))\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore >= 3)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore == 2)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore <= 1)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1720,
        "wires": [
            [
                "048583383c6c2b63",
                "7c182c86d2aa1bbb"
            ]
        ]
    },
    {
        "id": "ab0335159c22cdf3",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Overall Trending Arrow Direction",
        "func": "let y = flow.get(\"OP7_1HrTrendScore\");\nlet z = flow.get(\"OP7_2HrTrendScore\");\nlet rate1hr = flow.get(\"OP7_1HRateCurrent\");\nlet rate2hr = flow.get(\"OP7_2HRateCurrent\");\n\nlet totalscore = y + z;\n\nflow.set(\"OP7_TrendScore\",totalscore);\n\nif (msg.payload[7] == null)\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore == null || (rate1hr == 0 && rate2hr == 0))\n{\n    msg = {payload:'<font color=\"gray\"><i class=\"fa fa-minus fa-4x\"></i></font>'};\n    return msg;\n}\n\nif (totalscore >= 3)\n{\n    msg = {payload:'<font color=\"green\"><i class=\"fa fa-arrow-up fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore == 2)\n{\n    msg = {payload:'<font color=\"yellow\"><i class=\"fa fa-arrow-right fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n}\n\nif (totalscore <= 1)\n{\n    msg = {payload:'<font color=\"red\"><i class=\"fa fa-arrow-down fa-4x\"></i></font>', totalscore:totalscore};\n    return msg;\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1760,
        "wires": [
            [
                "b92aec5ddc71fafc",
                "5b48eca13a7f6b38"
            ]
        ]
    },
    {
        "id": "fb8bc0817c84501c",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1840,
        "wires": []
    },
    {
        "id": "4062aca95dfdd1be",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1880,
        "wires": []
    },
    {
        "id": "84e26f7e2bc1bf34",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1920,
        "wires": []
    },
    {
        "id": "e11754ef4c698278",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 1960,
        "wires": []
    },
    {
        "id": "61d1f848cde15fe2",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 2000,
        "wires": []
    },
    {
        "id": "9e5fa2f331f79e43",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 2040,
        "wires": []
    },
    {
        "id": "6be503635fa850eb",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 2080,
        "wires": []
    },
    {
        "id": "4a1a6dfeb336fb4a",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 2120,
        "wires": []
    },
    {
        "id": "cae8e34448c7d707",
        "type": "switch",
        "z": "c8e1ef6f509cd75a",
        "name": "Sort By",
        "property": "opsorttype",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "mults",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "qsos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "score",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 500,
        "y": 2000,
        "wires": [
            [
                "b2ca0d5b02a007c5"
            ],
            [
                "0c2d78020fc43d3c"
            ],
            [
                "49d35b7b223d6684"
            ]
        ]
    },
    {
        "id": "ba87c2d797a27f49",
        "type": "switch",
        "z": "c8e1ef6f509cd75a",
        "name": "Sort By",
        "property": "opsorttype",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "mults",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "qsos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "score",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 500,
        "y": 2360,
        "wires": [
            [
                "60bf62f0336c1629"
            ],
            [
                "833228df29bb26b4"
            ],
            [
                "04c095a340a5d105"
            ]
        ]
    },
    {
        "id": "48a3eb8596b10e96",
        "type": "function",
        "z": "c8e1ef6f509cd75a",
        "name": "Clear Stats",
        "func": "let arr = []\nlet obj\nfor(let i=0;i<9;i++){\n    obj = {}\n    obj.points = null\n    obj.multiplier = null\n    obj.totalqsos = null\n    obj.busted = null\n    obj.totalrun = null\n    obj.totalsandp = null\n    obj.score = null\n    obj.operator = null\n    obj.rate = null\n    arr.push(obj)\n}\n//node.warn(arr)\nmsg.payload = arr\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 240,
        "wires": [
            [
                "34008e11c64ab041",
                "5c267064e9a5cfe5",
                "fddd013b3adee514",
                "568d906183a5bd04",
                "3dfd2af79efe8194",
                "e7b5e69e29f5048b",
                "4469d749f5f64ed9",
                "2697e5e8c3c7b86f",
                "582eb93ec7687986",
                "f10eaa69c05b8a4c",
                "d89c6e30ca15bf1e",
                "46a109ee0a2e75aa",
                "0d32551591f4febb",
                "4e25eef7a46062ed",
                "74823dbc48c66f23",
                "4e1d05c16ace0917",
                "03065499f5880f2d",
                "0e4729df09d27b3e",
                "0abc9757ce66c40d",
                "82ec57515e149fba",
                "3167aedcb8f56641",
                "89681b3be0afcbba",
                "a19b646fa2396669",
                "56cd5215dde42552",
                "2ca6f5a68f913286",
                "8ef98b522b186a8d",
                "e6554b9bbe9cee0e",
                "9b09738fe2ae4dd7",
                "c7dc9ca647a536a0",
                "b72cc44c1d574dce",
                "b80a474784168d46",
                "cfd51f2f87f96fa9",
                "4bcf5aa1cae934bd",
                "9c2f3625304166d0",
                "b78c513f0baf3018",
                "900630ff66352946",
                "cca1c89c90290ebc",
                "97a57d2397a978dc",
                "cc5cb58dad3a8a3b",
                "3acac32e8604c765",
                "649570d869a2a319",
                "35470e72a63127bd",
                "f72d756d8c137aaa",
                "4bec6621ee7e772f",
                "9430cb53d80fa6b6",
                "a6a25d3c59f7b679",
                "b35683e6760d29f7",
                "f03a0e31a77f68f2"
            ]
        ]
    },
    {
        "id": "c683557c7a6ec5e5",
        "type": "debug",
        "z": "c8e1ef6f509cd75a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1520,
        "wires": []
    },
    {
        "id": "425f3c637f4bf34a",
        "type": "sqlite",
        "z": "9ed270102b553c75",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 740,
        "y": 840,
        "wires": [
            [
                "3eef6f4fb58523ba",
                "43bc1a3505c40d5f"
            ]
        ]
    },
    {
        "id": "ef5c39d0008ce5d5",
        "type": "inject",
        "z": "9ed270102b553c75",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "0245a7587a98c7f0"
            ]
        ]
    },
    {
        "id": "0245a7587a98c7f0",
        "type": "delay",
        "z": "9ed270102b553c75",
        "name": "30s Random Delay",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "30",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 330,
        "y": 840,
        "wires": [
            [
                "91bacd8bcb72b207"
            ]
        ]
    },
    {
        "id": "b55326c20125b41b",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b597a92689c997ee",
        "order": 4,
        "width": 5,
        "height": 2,
        "name": "160M Points",
        "label": "Points",
        "format": "{{msg.payload.points}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 1220,
        "wires": []
    },
    {
        "id": "63abfb398ead707e",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "33f39234d06022c4",
        "order": 4,
        "width": 5,
        "height": 2,
        "name": "40M Points",
        "label": "Points",
        "format": "{{msg.payload.points}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 1300,
        "wires": []
    },
    {
        "id": "4313293214f26dbf",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "16293e8283ac8032",
        "order": 4,
        "width": 5,
        "height": 2,
        "name": "20M Points",
        "label": "Points",
        "format": "{{msg.payload.points}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 1340,
        "wires": []
    },
    {
        "id": "4f5a3a427a33cd39",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b058bc1a30b324a8",
        "order": 4,
        "width": 5,
        "height": 2,
        "name": "15M Points",
        "label": "Points",
        "format": "{{msg.payload.points}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 1380,
        "wires": []
    },
    {
        "id": "28efc1ef3a740f5d",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "7f3af38546f365bf",
        "order": 4,
        "width": 5,
        "height": 2,
        "name": "10M Points",
        "label": "Points",
        "format": "{{msg.payload.points}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 1420,
        "wires": []
    },
    {
        "id": "6a6dd4cb7a83c669",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "ba5556bd38a9b0dc",
        "order": 4,
        "width": 5,
        "height": 2,
        "name": "80M Points",
        "label": "Points",
        "format": "{{msg.payload.points}}",
        "layout": "col-center",
        "className": "",
        "x": 1270,
        "y": 1260,
        "wires": []
    },
    {
        "id": "3eef6f4fb58523ba",
        "type": "split",
        "z": "9ed270102b553c75",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 910,
        "y": 840,
        "wires": [
            [
                "aaafe6ffffa92c6f"
            ]
        ]
    },
    {
        "id": "aaafe6ffffa92c6f",
        "type": "switch",
        "z": "9ed270102b553c75",
        "name": "",
        "property": "payload.band",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1.8",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3.5",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "14",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "21",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "28",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1070,
        "y": 840,
        "wires": [
            [
                "b55326c20125b41b",
                "71266673ab99d216",
                "cb46a0a044dac301",
                "7897a6a80bcdb38c",
                "918e88cbc4882d15"
            ],
            [
                "6a6dd4cb7a83c669",
                "869db0d6987ea03d",
                "78274317a63b6352",
                "8a973bd18783dc29",
                "cc3361f3b6330437"
            ],
            [
                "63abfb398ead707e",
                "a41df0ff4269fc30",
                "b127f6336a037c44",
                "b63fc232db48fe7d",
                "58d23e7f82b5c4e3"
            ],
            [
                "4313293214f26dbf",
                "b5d226d22a29431b",
                "09ea8d32749d5c88",
                "8c2e7810d6eb41a6",
                "2459c52ec0b60c95"
            ],
            [
                "4f5a3a427a33cd39",
                "2c9ce288264b3c5a",
                "adf10c73a4709d70",
                "f2cea60a88271f1b",
                "9b4cdcd2420f328e"
            ],
            [
                "28efc1ef3a740f5d",
                "596fbe6bb05a863b",
                "a571968d5ae12d7c",
                "cf02763a474fb76b",
                "ed80acad2866a4c5"
            ]
        ]
    },
    {
        "id": "e9a1427278cb27c6",
        "type": "template",
        "z": "9ed270102b553c75",
        "name": "SQL Select Rate",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select count(band) as total, band as band from qsos where timestamp >= datetime('now','-1 hours') group by band;",
        "output": "str",
        "x": 630,
        "y": 1580,
        "wires": [
            [
                "4a446c6385f1d577"
            ]
        ]
    },
    {
        "id": "8c064b88ad1e9b3e",
        "type": "inject",
        "z": "9ed270102b553c75",
        "name": "1 per min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 370,
        "y": 1580,
        "wires": [
            [
                "e9a1427278cb27c6"
            ]
        ]
    },
    {
        "id": "4a446c6385f1d577",
        "type": "sqlite",
        "z": "9ed270102b553c75",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 860,
        "y": 1580,
        "wires": [
            [
                "877e7ccf49e12338"
            ]
        ]
    },
    {
        "id": "877e7ccf49e12338",
        "type": "split",
        "z": "9ed270102b553c75",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1030,
        "y": 1580,
        "wires": [
            [
                "687940fe10bc1d90"
            ]
        ]
    },
    {
        "id": "687940fe10bc1d90",
        "type": "function",
        "z": "9ed270102b553c75",
        "name": "Set Topic & Payload",
        "func": "let total = msg.payload.total;\nlet band = msg.payload.band;\n\nif (band == '1.8')\n{\n    band = '160M'\n}\nif (band == '3.5')\n{\n    band = '80M'\n}\nif (band == '7')\n{\n    band = '40M'\n}\nif (band == '14')\n{\n    band = '20M'\n}\nif (band == '21')\n{\n    band = '15M'\n}\nif (band == '28')\n{\n    band = '10M'\n}\n\nmsg.topic = band;\nmsg.payload = total;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1580,
        "wires": [
            [
                "e0540eb13ce52ccc"
            ]
        ]
    },
    {
        "id": "e0540eb13ce52ccc",
        "type": "ui_chart",
        "z": "9ed270102b553c75",
        "name": "QSO Rate by Band Chart",
        "group": "4244ba9d238d6a13",
        "order": 1,
        "width": 30,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1570,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "917c86c665fa20e2",
        "type": "link in",
        "z": "9ed270102b553c75",
        "name": "Band Stats Clear IN",
        "links": [
            "5e1859619292b1b8"
        ],
        "x": 375,
        "y": 1500,
        "wires": [
            [
                "a0302a54a10a9798",
                "9653f8afb92077a2"
            ]
        ]
    },
    {
        "id": "9653f8afb92077a2",
        "type": "change",
        "z": "9ed270102b553c75",
        "name": "Clear Stats",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 1500,
        "wires": [
            [
                "e0540eb13ce52ccc"
            ]
        ]
    },
    {
        "id": "43bc1a3505c40d5f",
        "type": "debug",
        "z": "9ed270102b553c75",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 780,
        "wires": []
    },
    {
        "id": "91bacd8bcb72b207",
        "type": "template",
        "z": "9ed270102b553c75",
        "name": "SQL by Operator",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(distinct call) as totalqsos, \nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score,\nband as band,\n(select count(band)\nfrom qsos \nwhere band=qout.band\nand timestamp >= datetime('now','-1 hours')) as rate\nfrom qsos qout\ngroup by band \norder by score desc;",
        "output": "str",
        "x": 530,
        "y": 840,
        "wires": [
            [
                "425f3c637f4bf34a"
            ]
        ]
    },
    {
        "id": "71266673ab99d216",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b597a92689c997ee",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "160M Multis",
        "label": "Multi",
        "format": "{{msg.payload.multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 1550,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a41df0ff4269fc30",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "33f39234d06022c4",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "40M Multi",
        "label": "Multi",
        "format": "{{msg.payload.multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 1540,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b5d226d22a29431b",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "16293e8283ac8032",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "20M Multis",
        "label": "Multi",
        "format": "{{msg.payload.multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 1550,
        "y": 1220,
        "wires": []
    },
    {
        "id": "2c9ce288264b3c5a",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b058bc1a30b324a8",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "15M Multis",
        "label": "Multi",
        "format": "{{msg.payload.multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 1550,
        "y": 1260,
        "wires": []
    },
    {
        "id": "596fbe6bb05a863b",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "7f3af38546f365bf",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "10M Multis",
        "label": "Multi",
        "format": "{{msg.payload.multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 1550,
        "y": 1300,
        "wires": []
    },
    {
        "id": "869db0d6987ea03d",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "ba5556bd38a9b0dc",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "80M Multis",
        "label": "Multi",
        "format": "{{msg.payload.multiplier}}",
        "layout": "col-center",
        "className": "",
        "x": 1550,
        "y": 1140,
        "wires": []
    },
    {
        "id": "cb46a0a044dac301",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b597a92689c997ee",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "160M Total QSOs",
        "label": "QSOs",
        "format": "{{msg.payload.totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1570,
        "y": 300,
        "wires": []
    },
    {
        "id": "b127f6336a037c44",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "33f39234d06022c4",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "40M Total QSOs",
        "label": "QSOs",
        "format": "{{msg.payload.totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1560,
        "y": 380,
        "wires": []
    },
    {
        "id": "09ea8d32749d5c88",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "16293e8283ac8032",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "20M Total QSOs",
        "label": "QSOs",
        "format": "{{msg.payload.totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1560,
        "y": 420,
        "wires": []
    },
    {
        "id": "adf10c73a4709d70",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b058bc1a30b324a8",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "15M Total QSOs",
        "label": "QSOs",
        "format": "{{msg.payload.totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1560,
        "y": 460,
        "wires": []
    },
    {
        "id": "a571968d5ae12d7c",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "7f3af38546f365bf",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "10M Total QSOs",
        "label": "QSOs",
        "format": "{{msg.payload.totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1560,
        "y": 500,
        "wires": []
    },
    {
        "id": "78274317a63b6352",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "ba5556bd38a9b0dc",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "80M Total QSOs",
        "label": "QSOs",
        "format": "{{msg.payload.totalqsos}}",
        "layout": "col-center",
        "className": "",
        "x": 1560,
        "y": 340,
        "wires": []
    },
    {
        "id": "7897a6a80bcdb38c",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b597a92689c997ee",
        "order": 1,
        "width": 7,
        "height": 2,
        "name": "160M Score",
        "label": "Score",
        "format": "{{msg.payload.score}}",
        "layout": "col-center",
        "className": "",
        "x": 1230,
        "y": 280,
        "wires": []
    },
    {
        "id": "b63fc232db48fe7d",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "33f39234d06022c4",
        "order": 1,
        "width": 7,
        "height": 2,
        "name": "40M Score",
        "label": "Score",
        "format": "{{msg.payload.score}}",
        "layout": "col-center",
        "className": "",
        "x": 1230,
        "y": 360,
        "wires": []
    },
    {
        "id": "8c2e7810d6eb41a6",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "16293e8283ac8032",
        "order": 1,
        "width": 7,
        "height": 2,
        "name": "20M Score",
        "label": "Score",
        "format": "{{msg.payload.score}}",
        "layout": "col-center",
        "className": "",
        "x": 1230,
        "y": 400,
        "wires": []
    },
    {
        "id": "f2cea60a88271f1b",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b058bc1a30b324a8",
        "order": 1,
        "width": 7,
        "height": 2,
        "name": "15M Score",
        "label": "Score",
        "format": "{{msg.payload.score}}",
        "layout": "col-center",
        "className": "",
        "x": 1230,
        "y": 440,
        "wires": []
    },
    {
        "id": "cf02763a474fb76b",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "7f3af38546f365bf",
        "order": 1,
        "width": 7,
        "height": 2,
        "name": "10M Score",
        "label": "Score",
        "format": "{{msg.payload.score}}",
        "layout": "col-center",
        "className": "",
        "x": 1230,
        "y": 480,
        "wires": []
    },
    {
        "id": "8a973bd18783dc29",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "ba5556bd38a9b0dc",
        "order": 1,
        "width": 7,
        "height": 2,
        "name": "80M Score",
        "label": "Score",
        "format": "{{msg.payload.score}}",
        "layout": "col-center",
        "className": "",
        "x": 1230,
        "y": 320,
        "wires": []
    },
    {
        "id": "f4010db8c771c6ca",
        "type": "subflow:c967abe5be484ee6",
        "z": "9ed270102b553c75",
        "name": "",
        "x": 1840,
        "y": 640,
        "wires": [
            [
                "d4703b6d99cdbccc"
            ],
            [
                "d4703b6d99cdbccc"
            ],
            [
                "d4703b6d99cdbccc"
            ]
        ]
    },
    {
        "id": "ee82bf1abcbd7154",
        "type": "subflow:c967abe5be484ee6",
        "z": "9ed270102b553c75",
        "name": "",
        "x": 1840,
        "y": 700,
        "wires": [
            [
                "9ee2f2189af44fae"
            ],
            [
                "9ee2f2189af44fae"
            ],
            [
                "9ee2f2189af44fae"
            ]
        ]
    },
    {
        "id": "310f79c9d007a699",
        "type": "subflow:c967abe5be484ee6",
        "z": "9ed270102b553c75",
        "name": "",
        "x": 1840,
        "y": 760,
        "wires": [
            [
                "c1efdb7a76c94b3c"
            ],
            [
                "c1efdb7a76c94b3c"
            ],
            [
                "c1efdb7a76c94b3c"
            ]
        ]
    },
    {
        "id": "e056cd58b24b6eed",
        "type": "subflow:c967abe5be484ee6",
        "z": "9ed270102b553c75",
        "name": "",
        "x": 1840,
        "y": 820,
        "wires": [
            [
                "27d0fa2e0916dab5"
            ],
            [
                "27d0fa2e0916dab5"
            ],
            [
                "27d0fa2e0916dab5"
            ]
        ]
    },
    {
        "id": "8f0d5673855b7560",
        "type": "subflow:c967abe5be484ee6",
        "z": "9ed270102b553c75",
        "name": "",
        "x": 1840,
        "y": 880,
        "wires": [
            [
                "c982b2a1618b9398"
            ],
            [
                "c982b2a1618b9398"
            ],
            [
                "c982b2a1618b9398"
            ]
        ]
    },
    {
        "id": "b6a1dbe0f8113b6d",
        "type": "subflow:c967abe5be484ee6",
        "z": "9ed270102b553c75",
        "name": "",
        "x": 1840,
        "y": 940,
        "wires": [
            [
                "bc28c87ae2f786d0"
            ],
            [
                "bc28c87ae2f786d0"
            ],
            [
                "bc28c87ae2f786d0"
            ]
        ]
    },
    {
        "id": "918e88cbc4882d15",
        "type": "function",
        "z": "9ed270102b553c75",
        "name": "Set msg.rate",
        "func": "let rate = msg.payload.rate\nmsg.rate = rate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 640,
        "wires": [
            [
                "f4010db8c771c6ca"
            ]
        ]
    },
    {
        "id": "cc3361f3b6330437",
        "type": "function",
        "z": "9ed270102b553c75",
        "name": "Set msg.rate",
        "func": "let rate = msg.payload.rate\nmsg.rate = rate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 700,
        "wires": [
            [
                "ee82bf1abcbd7154"
            ]
        ]
    },
    {
        "id": "58d23e7f82b5c4e3",
        "type": "function",
        "z": "9ed270102b553c75",
        "name": "Set msg.rate",
        "func": "let rate = msg.payload.rate\nmsg.rate = rate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 760,
        "wires": [
            [
                "310f79c9d007a699"
            ]
        ]
    },
    {
        "id": "2459c52ec0b60c95",
        "type": "function",
        "z": "9ed270102b553c75",
        "name": "Set msg.rate",
        "func": "let rate = msg.payload.rate\nmsg.rate = rate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 820,
        "wires": [
            [
                "e056cd58b24b6eed"
            ]
        ]
    },
    {
        "id": "9b4cdcd2420f328e",
        "type": "function",
        "z": "9ed270102b553c75",
        "name": "Set msg.rate",
        "func": "let rate = msg.payload.rate\nmsg.rate = rate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 880,
        "wires": [
            [
                "8f0d5673855b7560"
            ]
        ]
    },
    {
        "id": "ed80acad2866a4c5",
        "type": "function",
        "z": "9ed270102b553c75",
        "name": "Set msg.rate",
        "func": "let rate = msg.payload.rate\nmsg.rate = rate;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 940,
        "wires": [
            [
                "b6a1dbe0f8113b6d"
            ]
        ]
    },
    {
        "id": "d4703b6d99cdbccc",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b597a92689c997ee",
        "order": 5,
        "width": 5,
        "height": 2,
        "name": "160M 1Hr Rate",
        "label": "1 Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2060,
        "y": 640,
        "wires": []
    },
    {
        "id": "c1efdb7a76c94b3c",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "33f39234d06022c4",
        "order": 5,
        "width": 5,
        "height": 2,
        "name": "40M 1Hr Rate",
        "label": "1 Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2060,
        "y": 760,
        "wires": []
    },
    {
        "id": "27d0fa2e0916dab5",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "16293e8283ac8032",
        "order": 5,
        "width": 5,
        "height": 2,
        "name": "20M 1Hr Rate",
        "label": "1 Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2060,
        "y": 820,
        "wires": []
    },
    {
        "id": "c982b2a1618b9398",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "b058bc1a30b324a8",
        "order": 5,
        "width": 5,
        "height": 2,
        "name": "15M 1Hr Rate",
        "label": "1 Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2060,
        "y": 880,
        "wires": []
    },
    {
        "id": "bc28c87ae2f786d0",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "7f3af38546f365bf",
        "order": 5,
        "width": 5,
        "height": 2,
        "name": "10M 1Hr Rate",
        "label": "1 Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2060,
        "y": 940,
        "wires": []
    },
    {
        "id": "9ee2f2189af44fae",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "ba5556bd38a9b0dc",
        "order": 5,
        "width": 5,
        "height": 2,
        "name": "80M 1Hr Rate",
        "label": "1 Hr Rate",
        "format": "<font color={{msg.color}}>{{msg.rate}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2060,
        "y": 700,
        "wires": []
    },
    {
        "id": "a0302a54a10a9798",
        "type": "function",
        "z": "9ed270102b553c75",
        "name": "Clear Stats",
        "func": "\nreturn {\n    \n   \"payload\":[\n      {\n         score:0,\n         totalqsos:0,\n         band:\"1.8\",\n         multiplier:0,\n         points:0,\n          \n      },\n      {\n         score:0,\n         totalqsos:0,\n         band:\"3.5\",\n         multiplier:0,\n         points:0,\n          \n      },\n      {\n         score:0,\n         totalqsos:0,\n         band:\"7\",\n         multiplier:0,\n         points:0,\n          \n      },\n      {\n         score:0,\n         totalqsos:0,\n         band:\"14\",\n         multiplier:0,\n         points:0,\n          \n      },\n      {\n         score:0,\n         totalqsos:0,\n         band:\"21\",\n         multiplier:0,\n         points:0,\n          \n      },\n      {\n         score:0,\n         totalqsos:0,\n         band:\"28\",\n         multiplier:0,\n         points:0,\n          \n      },\n   ]\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1120,
        "wires": [
            [
                "3eef6f4fb58523ba"
            ]
        ]
    },
    {
        "id": "62e83a7590098e1b",
        "type": "link in",
        "z": "9ed270102b553c75",
        "name": "From RBN Spots IN",
        "links": [
            "8b67a949f2e70ade"
        ],
        "x": 375,
        "y": 1800,
        "wires": [
            [
                "4fc4bceed411f767"
            ]
        ]
    },
    {
        "id": "3ae89c5cc4fe103f",
        "type": "ui_chart",
        "z": "9ed270102b553c75",
        "name": "80M Spots Per Min",
        "group": "76879f1e69f23640",
        "order": 1,
        "width": 8,
        "height": 4,
        "label": "80M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "6d65f63213b762f7",
        "type": "ui_chart",
        "z": "9ed270102b553c75",
        "name": "40M Spots Per Min",
        "group": "76879f1e69f23640",
        "order": 2,
        "width": 8,
        "height": 4,
        "label": "40M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "4ef5080065abf323",
        "type": "ui_chart",
        "z": "9ed270102b553c75",
        "name": "20M Spots Per Min",
        "group": "76879f1e69f23640",
        "order": 3,
        "width": 8,
        "height": 4,
        "label": "20M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "98ad9959135590cc",
        "type": "ui_chart",
        "z": "9ed270102b553c75",
        "name": "15M Spots Per Min",
        "group": "76879f1e69f23640",
        "order": 4,
        "width": 8,
        "height": 4,
        "label": "15M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "c9f3f35ee4a07b4d",
        "type": "ui_chart",
        "z": "9ed270102b553c75",
        "name": "10M Spots Per Min",
        "group": "76879f1e69f23640",
        "order": 5,
        "width": 8,
        "height": 4,
        "label": "10M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1350,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "5809e19089ededaa",
        "type": "ui_chart",
        "z": "9ed270102b553c75",
        "name": "160M Spots Per Min",
        "group": "76879f1e69f23640",
        "order": 6,
        "width": 8,
        "height": 4,
        "label": "160M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "4fc4bceed411f767",
        "type": "function",
        "z": "9ed270102b553c75",
        "name": "Trim & ParseFloat",
        "func": "let x = msg.payload.freq;\n\nlet y = x.trim();\nlet spot = parseFloat(x);\n\nmsg.payload = spot;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1800,
        "wires": [
            [
                "26fbf393d82420b1"
            ]
        ]
    },
    {
        "id": "26fbf393d82420b1",
        "type": "switch",
        "z": "9ed270102b553c75",
        "name": "Band Parse",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "1800",
                "vt": "num",
                "v2": "2000",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "3500",
                "vt": "num",
                "v2": "4000",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "7000",
                "vt": "num",
                "v2": "7200",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "14000",
                "vt": "num",
                "v2": "14350",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "21000",
                "vt": "num",
                "v2": "21450",
                "v2t": "num"
            },
            {
                "t": "btwn",
                "v": "28000",
                "vt": "num",
                "v2": "29700",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 770,
        "y": 1800,
        "wires": [
            [
                "8cb123db9e38f0d9"
            ],
            [
                "e3c03b634ca50647"
            ],
            [
                "b96583d9e042633a"
            ],
            [
                "50ce72254aa55172"
            ],
            [
                "cf70cfd9e2f3f353"
            ],
            [
                "aa763d09c03d0b3d"
            ]
        ]
    },
    {
        "id": "8cb123db9e38f0d9",
        "type": "msg-speed",
        "z": "9ed270102b553c75",
        "name": "160M Speed",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 1110,
        "y": 1700,
        "wires": [
            [
                "5809e19089ededaa",
                "506e377454faef12"
            ],
            []
        ]
    },
    {
        "id": "e3c03b634ca50647",
        "type": "msg-speed",
        "z": "9ed270102b553c75",
        "name": "80M Speed",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 1110,
        "y": 1820,
        "wires": [
            [
                "3ae89c5cc4fe103f",
                "e622ffd5cdbaef68"
            ],
            []
        ]
    },
    {
        "id": "b96583d9e042633a",
        "type": "msg-speed",
        "z": "9ed270102b553c75",
        "name": "40M Speed",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 1110,
        "y": 1940,
        "wires": [
            [
                "6d65f63213b762f7",
                "d798a2b1c1c0b17b"
            ],
            []
        ]
    },
    {
        "id": "50ce72254aa55172",
        "type": "msg-speed",
        "z": "9ed270102b553c75",
        "name": "20M Speed",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 1110,
        "y": 2060,
        "wires": [
            [
                "4ef5080065abf323",
                "1f5203b34775bd75"
            ],
            []
        ]
    },
    {
        "id": "cf70cfd9e2f3f353",
        "type": "msg-speed",
        "z": "9ed270102b553c75",
        "name": "15M Speed",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 1110,
        "y": 2180,
        "wires": [
            [
                "98ad9959135590cc",
                "c1122300b4ec1134"
            ],
            []
        ]
    },
    {
        "id": "aa763d09c03d0b3d",
        "type": "msg-speed",
        "z": "9ed270102b553c75",
        "name": "10M Speed",
        "frequency": "min",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 1110,
        "y": 2320,
        "wires": [
            [
                "c9f3f35ee4a07b4d",
                "9402f6c4e82b6f9a"
            ],
            []
        ]
    },
    {
        "id": "cfa17dadbe89f655",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "1d924a93b9821236",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "160M N1MM Dashboard Spot Rate",
        "label": "",
        "format": "<font color={{msg.color}}> 160M - {{msg.payload}}/Min</font>",
        "layout": "row-left",
        "className": "",
        "x": 1620,
        "y": 1740,
        "wires": []
    },
    {
        "id": "00c538c65092fee5",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "1d924a93b9821236",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "80M N1MM Dashboard Spot Rate",
        "label": "",
        "format": "<font color={{msg.color}}> 80M - {{msg.payload}}/Min</font>",
        "layout": "row-left",
        "className": "",
        "x": 1620,
        "y": 1860,
        "wires": []
    },
    {
        "id": "4027ad68721e01ae",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "1d924a93b9821236",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "40M N1MM Dashboard Spot Rate",
        "label": "",
        "format": "<font color={{msg.color}}> 40M - {{msg.payload}}/Min</font>",
        "layout": "row-center",
        "className": "<font color={{msg.color}}>{{msg.rate}} Q's/Hr</font>",
        "x": 1620,
        "y": 1980,
        "wires": []
    },
    {
        "id": "3d79af706b0596f0",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "1d924a93b9821236",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "20M N1MM Dashboard Spot Rate",
        "label": "",
        "format": "<font color={{msg.color}}> 20M - {{msg.payload}}/Min</font>",
        "layout": "row-left",
        "className": "",
        "x": 1620,
        "y": 2100,
        "wires": []
    },
    {
        "id": "da9417eff5bc179a",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "1d924a93b9821236",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "15M N1MM Dashboard Spot Rate",
        "label": "",
        "format": "<font color={{msg.color}}> 15M - {{msg.payload}}/Min</font>",
        "layout": "row-center",
        "className": "",
        "x": 1620,
        "y": 2220,
        "wires": []
    },
    {
        "id": "fd35788fe10c1ee7",
        "type": "ui_text",
        "z": "9ed270102b553c75",
        "group": "1d924a93b9821236",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "10M N1MM Dashboard Spot Rate",
        "label": "",
        "format": "<font color={{msg.color}}> 10M - {{msg.payload}}/Min</font>",
        "layout": "row-left",
        "className": "",
        "x": 1620,
        "y": 2340,
        "wires": []
    },
    {
        "id": "d798a2b1c1c0b17b",
        "type": "subflow:74c92a5f32f17459",
        "z": "9ed270102b553c75",
        "x": 1330,
        "y": 1980,
        "wires": [
            [
                "4027ad68721e01ae"
            ],
            [
                "4027ad68721e01ae"
            ],
            [
                "4027ad68721e01ae"
            ]
        ]
    },
    {
        "id": "506e377454faef12",
        "type": "subflow:74c92a5f32f17459",
        "z": "9ed270102b553c75",
        "name": "",
        "x": 1330,
        "y": 1740,
        "wires": [
            [
                "cfa17dadbe89f655"
            ],
            [
                "cfa17dadbe89f655"
            ],
            [
                "cfa17dadbe89f655"
            ]
        ]
    },
    {
        "id": "e622ffd5cdbaef68",
        "type": "subflow:74c92a5f32f17459",
        "z": "9ed270102b553c75",
        "x": 1330,
        "y": 1860,
        "wires": [
            [
                "00c538c65092fee5"
            ],
            [
                "00c538c65092fee5"
            ],
            [
                "00c538c65092fee5"
            ]
        ]
    },
    {
        "id": "1f5203b34775bd75",
        "type": "subflow:74c92a5f32f17459",
        "z": "9ed270102b553c75",
        "x": 1330,
        "y": 2100,
        "wires": [
            [
                "3d79af706b0596f0"
            ],
            [
                "3d79af706b0596f0"
            ],
            [
                "3d79af706b0596f0"
            ]
        ]
    },
    {
        "id": "c1122300b4ec1134",
        "type": "subflow:74c92a5f32f17459",
        "z": "9ed270102b553c75",
        "x": 1330,
        "y": 2220,
        "wires": [
            [
                "da9417eff5bc179a"
            ],
            [
                "da9417eff5bc179a"
            ],
            [
                "da9417eff5bc179a"
            ]
        ]
    },
    {
        "id": "9402f6c4e82b6f9a",
        "type": "subflow:74c92a5f32f17459",
        "z": "9ed270102b553c75",
        "x": 1330,
        "y": 2340,
        "wires": [
            [
                "fd35788fe10c1ee7"
            ],
            [
                "fd35788fe10c1ee7"
            ],
            [
                "fd35788fe10c1ee7"
            ]
        ]
    },
    {
        "id": "c619ce9fa95f791b",
        "type": "ui_worldmap",
        "z": "b59d8b7ca43e59ce",
        "group": "13e71f1ba641b9c9",
        "order": 5,
        "width": 16,
        "height": 9,
        "name": "QSO Being Worked",
        "lat": "40.3426",
        "lon": "-92.8554",
        "zoom": "4",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/beingworkedqso",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1670,
        "y": 260,
        "wires": []
    },
    {
        "id": "69d83cae2e4e6a4c",
        "type": "ui_worldmap",
        "z": "b59d8b7ca43e59ce",
        "group": "74f6d374fb94524c",
        "order": 6,
        "width": 16,
        "height": 9,
        "name": "Worked QSOs",
        "lat": "40.3426",
        "lon": "-92.8554",
        "zoom": "4",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/workedqso",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1640,
        "y": 500,
        "wires": []
    },
    {
        "id": "8c261ef14e000fab",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "13e71f1ba641b9c9",
        "order": 2,
        "width": 5,
        "height": 2,
        "name": "Being Worked Call Sign",
        "label": "Call Sign",
        "format": "<font color={{msg.color}}>{{msg.payload.name}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1690,
        "y": 140,
        "wires": []
    },
    {
        "id": "4b288d63d33664da",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "13e71f1ba641b9c9",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "Being Worked Mode",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{msg.payload.mode}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1680,
        "y": 180,
        "wires": []
    },
    {
        "id": "7465992a1b281676",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "13e71f1ba641b9c9",
        "order": 4,
        "width": 6,
        "height": 2,
        "name": "Being Worked Distance Away",
        "label": "Distance",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1920,
        "y": 220,
        "wires": []
    },
    {
        "id": "6b2eb9fe84b9ab5b",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "d": true,
        "group": "13e71f1ba641b9c9",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "Title Being Worked",
        "label": "Current Call Sign Being Contacted NOW!",
        "format": "<font color={{msg.color}}>{{msg.payload.name}}</font>",
        "layout": "row-center",
        "className": "",
        "x": 1670,
        "y": 100,
        "wires": []
    },
    {
        "id": "93c97ccaa3e53d22",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "74f6d374fb94524c",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "Worked Call Sign",
        "label": "Call Sign",
        "format": "<font color={{msg.color}}>{{msg.payload.name}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1650,
        "y": 580,
        "wires": []
    },
    {
        "id": "482152c92f2f5813",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "74f6d374fb94524c",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "Worked Mode",
        "label": "Mode",
        "format": "<font color={{msg.color}}>{{msg.payload.mode}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1640,
        "y": 620,
        "wires": []
    },
    {
        "id": "2f7d9a2d94268e97",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "74f6d374fb94524c",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "Worked Exchange",
        "label": "Exchange",
        "format": "<font color={{msg.color}}>{{msg.payload.exchange}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1650,
        "y": 660,
        "wires": []
    },
    {
        "id": "aafb155f821969bb",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "74f6d374fb94524c",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "Worked Distance Away",
        "label": "Distance",
        "format": "<font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1860,
        "y": 700,
        "wires": []
    },
    {
        "id": "485ec414a558aa92",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "d": true,
        "group": "74f6d374fb94524c",
        "order": 1,
        "width": 16,
        "height": 1,
        "name": "Title QSO Just Worked",
        "label": "Call Sign Just Logged",
        "format": "<font color={{msg.color}}>{{msg.payload.name}}</font>",
        "layout": "row-center",
        "className": "",
        "x": 1660,
        "y": 540,
        "wires": []
    },
    {
        "id": "957eae866ade3bf2",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "aff1f74aeb47511e",
        "order": 1,
        "width": 5,
        "height": 3,
        "name": "Total Score",
        "label": "Total Score",
        "format": "{{payload.dynamicresults.score[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1110,
        "y": 780,
        "wires": []
    },
    {
        "id": "c3e82d630ac3af74",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "aff1f74aeb47511e",
        "order": 3,
        "width": 5,
        "height": 2,
        "name": "Total Mults",
        "label": "Mults",
        "format": "{{payload.totalmult}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1370,
        "y": 1040,
        "wires": []
    },
    {
        "id": "ecd6ccdaad69204f",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "aff1f74aeb47511e",
        "order": 2,
        "width": 5,
        "height": 3,
        "name": "Total QSO's",
        "label": "QSOs",
        "format": "{{payload.totalnoqsos}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1370,
        "y": 920,
        "wires": []
    },
    {
        "id": "405c8aa66e5e4591",
        "type": "function",
        "z": "b59d8b7ca43e59ce",
        "name": "Total QSO Array Parse",
        "func": "//if (msg.payload.dynamicresults.score == \"0\")\n//{\n//    return {\"payload\":{totalnoqsos:0}};\n//}\n\nlet arraylength = msg.payload.dynamicresults.breakdown[0].qso.length\ntotalnoqsos = 0;\n\nfor (let i=0; i < msg.payload.dynamicresults.breakdown[0].qso.length; i++)\n{\n    \n    if (msg.payload.dynamicresults.breakdown[0].qso[i].$.band == \"total\" && msg.payload.dynamicresults.breakdown[0].qso[i].$.mode == \"ALL\")\n    {\n        totalnoqsos = msg.payload.dynamicresults.breakdown[0].qso[i]._;\n        return {\"payload\":{totalnoqsos:totalnoqsos}};\n        \n    }\n    \n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 920,
        "wires": [
            [
                "ef0a05338aaec349"
            ]
        ]
    },
    {
        "id": "ebcd86a7c9742a58",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "aff1f74aeb47511e",
        "order": 4,
        "width": 5,
        "height": 3,
        "name": "Total Points",
        "label": "Points",
        "format": "{{payload.totalpoints}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1390,
        "y": 1160,
        "wires": []
    },
    {
        "id": "4296adaf5ac5e757",
        "type": "function",
        "z": "b59d8b7ca43e59ce",
        "name": "Total Points Array Parse",
        "func": "if (msg.payload.dynamicresults.score == \"0\")\n{\n    return {\"payload\":{totalpoints:0}};\n}\n\nlet arraylength = msg.payload.dynamicresults.breakdown[0].point.length\nlet totalpoints = 0;\n\nfor (let i=0; i < msg.payload.dynamicresults.breakdown[0].point.length; i++)\n{\n    \n    if (msg.payload.dynamicresults.breakdown[0].point[i].$.band == \"total\" && msg.payload.dynamicresults.breakdown[0].point[i].$.mode == \"ALL\")\n    {\n        totalpoints = msg.payload.dynamicresults.breakdown[0].point[i]._;\n        return {\"payload\":{totalpoints:totalpoints}};\n        \n    }\n    \n}\n\n\nreturn;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1160,
        "wires": [
            [
                "3b834e94e10842af"
            ]
        ]
    },
    {
        "id": "dec2582d441f407c",
        "type": "debug",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 860,
        "wires": []
    },
    {
        "id": "a7b7e69e5128e9c5",
        "type": "debug",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 900,
        "wires": []
    },
    {
        "id": "d01e4f6e8082c23c",
        "type": "debug",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 940,
        "wires": []
    },
    {
        "id": "9ac6b8134108e3b3",
        "type": "link in",
        "z": "b59d8b7ca43e59ce",
        "name": "Spectator Dashboard Score IN",
        "links": [
            "aec65d796aed9cee"
        ],
        "x": 245,
        "y": 900,
        "wires": [
            [
                "405c8aa66e5e4591",
                "4296adaf5ac5e757",
                "f307470858320eea",
                "48978d41ef0f8847"
            ]
        ]
    },
    {
        "id": "325531df7894f668",
        "type": "comment",
        "z": "b59d8b7ca43e59ce",
        "name": "Map Properties To Do",
        "info": "msg.command\n\nto position map to specific location\nlat\nlon\n\nto zoom into the map\nzoom\n\nadd great circle lines?\n\n\n\n\nmsg.payload = { \"command\": \n{ \n\"layer\":\"Esri Satellite\", \n\"lat\":51, \n\"lon\":3, \n\"zoom\":10 \n    \n}};\n\nTo clear map :\ndeleted : set to true to remove the named marker. (default false)\n\n\nmsg.payload.greatcircle = [[homelat,homelon], [lat,lon]]\n",
        "x": 160,
        "y": 160,
        "wires": []
    },
    {
        "id": "55bf9cdbda7ef90e",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "aafad41ae29aabef",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Contest Info and Overlay",
        "label": "Contest Info and Goal Overlay",
        "format": "",
        "layout": "row-left",
        "className": "",
        "x": 170,
        "y": 220,
        "wires": []
    },
    {
        "id": "b80f7e753e4d50bb",
        "type": "comment",
        "z": "b59d8b7ca43e59ce",
        "name": "FUTURE WORK ON DASHBOARD",
        "info": "",
        "x": 330,
        "y": 80,
        "wires": []
    },
    {
        "id": "f307470858320eea",
        "type": "function",
        "z": "b59d8b7ca43e59ce",
        "name": "Total Multi Array Parse",
        "func": "if (msg.payload.dynamicresults.breakdown[0].mult == undefined)\n{\n    return {\"payload\":{totalmult:\"N/A\"}};\n}\n\nlet arraylength = msg.payload.dynamicresults.breakdown[0].mult.length\nlet totalmult = 0;\n\nfor (let i=0; i < msg.payload.dynamicresults.breakdown[0].mult.length; i++)\n{\n    \n    if (msg.payload.dynamicresults.breakdown[0].mult[i].$.band == \"total\" && msg.payload.dynamicresults.breakdown[0].mult[i].$.mode == \"ALL\")\n    {\n        total = parseInt(msg.payload.dynamicresults.breakdown[0].mult[i]._)\n        totalmult = totalmult + total;\n    }\n    \n}\n\nreturn {\"payload\":{totalmult:totalmult}};\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1040,
        "wires": [
            [
                "6b43d48adeb344f8"
            ]
        ]
    },
    {
        "id": "42d2b28a24a61f75",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "ab90bdc2382e7735",
        "order": 1,
        "width": 7,
        "height": 11,
        "name": "Chat Box Overlay",
        "label": "Overlay Your Chat Box Here",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 150,
        "y": 260,
        "wires": []
    },
    {
        "id": "15bffcca247104f2",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "9e3f259da9c7796b",
        "order": 1,
        "width": 33,
        "height": 6,
        "name": "Waterfall Overlay",
        "label": "Overlay Your Waterfall Here",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 150,
        "y": 300,
        "wires": []
    },
    {
        "id": "dacd6c121eb7a21a",
        "type": "ui_text",
        "z": "b59d8b7ca43e59ce",
        "group": "61f1faff3469a80a",
        "order": 1,
        "width": 7,
        "height": 6,
        "name": "Webcam Overlay",
        "label": "Overlay Your Webcam Here",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 150,
        "y": 340,
        "wires": []
    },
    {
        "id": "247347fc62633734",
        "type": "link in",
        "z": "b59d8b7ca43e59ce",
        "name": "Worked QSO Stream IN",
        "links": [
            "4320ff577c7cb858"
        ],
        "x": 215,
        "y": 560,
        "wires": [
            [
                "e08bbfefae9ae6c0",
                "1621cbc09402bd19"
            ]
        ]
    },
    {
        "id": "ed79aa0b1ff456e7",
        "type": "link in",
        "z": "b59d8b7ca43e59ce",
        "name": "QSO Lookup IN",
        "links": [
            "8804affd65082b4f"
        ],
        "x": 415,
        "y": 180,
        "wires": [
            [
                "8c261ef14e000fab",
                "4b288d63d33664da",
                "0fe0e7c3dcbe97e9",
                "98e7482ec778ed6c",
                "b36078808a8a6ad3",
                "b14a4de771554740"
            ]
        ]
    },
    {
        "id": "34f4bf78ec8102ac",
        "type": "function",
        "z": "b59d8b7ca43e59ce",
        "name": "Get Miles or KM",
        "func": "let miles = msg.payload.distance_miles.toString();\nlet km = msg.payload.distance_km.toString();\n\nlet measurement = global.get('distance_measurement')\n\nif (measurement == undefined)\n{\n    msg.payload = miles + \"M\";\n    return msg;\n}\n\nif (measurement == 'miles')\n{\n    msg.payload = miles + \"M\";\n    return msg;\n}\n\nif (measurement == 'km')\n{\n    msg.payload = km + \"K\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 700,
        "wires": [
            [
                "aafb155f821969bb"
            ]
        ]
    },
    {
        "id": "0fe0e7c3dcbe97e9",
        "type": "function",
        "z": "b59d8b7ca43e59ce",
        "name": "Get Miles or KM",
        "func": "let miles = msg.payload.distance_miles.toString();\nlet km = msg.payload.distance_km.toString();\n\nlet measurement = global.get('distance_measurement')\n\nif (measurement == undefined)\n{\n    msg.payload = miles + \"M\";\n    return msg;\n}\n\nif (measurement == 'miles')\n{\n    msg.payload = miles + \"M\";\n    return msg;\n}\n\nif (measurement == 'km')\n{\n    msg.payload = km + \"K\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 220,
        "wires": [
            [
                "7465992a1b281676"
            ]
        ]
    },
    {
        "id": "1621cbc09402bd19",
        "type": "switch",
        "z": "b59d8b7ca43e59ce",
        "name": "Set Exchange Color",
        "property": "payload.ismultiplier",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 780,
        "y": 600,
        "wires": [
            [
                "6e8e001072beccc3"
            ],
            [
                "0107aee122696217"
            ]
        ]
    },
    {
        "id": "0107aee122696217",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Otherwise Color White",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 620,
        "wires": [
            [
                "93c97ccaa3e53d22",
                "482152c92f2f5813",
                "2f7d9a2d94268e97",
                "34f4bf78ec8102ac"
            ]
        ]
    },
    {
        "id": "6e8e001072beccc3",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Is Multi Then Color Red",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FF0000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 580,
        "wires": [
            [
                "93c97ccaa3e53d22",
                "482152c92f2f5813",
                "2f7d9a2d94268e97",
                "34f4bf78ec8102ac"
            ]
        ]
    },
    {
        "id": "1ff6df90c01046ae",
        "type": "inject",
        "z": "b59d8b7ca43e59ce",
        "name": "Inject Home Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 950,
        "y": 380,
        "wires": [
            [
                "69e686fc1a9e8f14"
            ]
        ]
    },
    {
        "id": "69e686fc1a9e8f14",
        "type": "function",
        "z": "b59d8b7ca43e59ce",
        "name": "Inject Home",
        "func": "let lat = global.get('homelat');\nlet lon = global.get('homelon');\n\nreturn {payload : {name:\"home\", lat:lat, lon:lon, icon:\"fa-home\", layer:\"Home\"}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 380,
        "wires": [
            [
                "c619ce9fa95f791b",
                "69d83cae2e4e6a4c"
            ]
        ]
    },
    {
        "id": "e08bbfefae9ae6c0",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Remove Contact Info",
        "rules": [
            {
                "t": "delete",
                "p": "payload.label",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.band",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 500,
        "wires": [
            [
                "d3d6702c318319cb"
            ]
        ]
    },
    {
        "id": "cd4571df3441bb88",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Remove Contact Info",
        "rules": [
            {
                "t": "delete",
                "p": "payload.label",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.band",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.ID",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.layer",
                "pt": "msg",
                "to": "lookup",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 260,
        "wires": [
            [
                "7163c86597a36265"
            ]
        ]
    },
    {
        "id": "48978d41ef0f8847",
        "type": "rbe",
        "z": "b59d8b7ca43e59ce",
        "name": "RBE Total Score",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.dynamicresults.score[0]",
        "topi": "topic",
        "x": 580,
        "y": 780,
        "wires": [
            [
                "7ab0d467c7b76a81",
                "cac88b428ea7e6e0"
            ]
        ]
    },
    {
        "id": "cac88b428ea7e6e0",
        "type": "delay",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 820,
        "wires": [
            [
                "13fe729c7aabf5b5"
            ]
        ]
    },
    {
        "id": "7ab0d467c7b76a81",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Color Green",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 780,
        "wires": [
            [
                "957eae866ade3bf2"
            ]
        ]
    },
    {
        "id": "13fe729c7aabf5b5",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Color White",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 820,
        "wires": [
            [
                "957eae866ade3bf2"
            ]
        ]
    },
    {
        "id": "ef0a05338aaec349",
        "type": "rbe",
        "z": "b59d8b7ca43e59ce",
        "name": "RBE Total QSOs",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.totalnoqsos",
        "topi": "topic",
        "x": 870,
        "y": 920,
        "wires": [
            [
                "b19c87c226aec28a",
                "4906c59bcd04142f"
            ]
        ]
    },
    {
        "id": "4906c59bcd04142f",
        "type": "delay",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 960,
        "wires": [
            [
                "9bb9e5c1ae1bf3d5"
            ]
        ]
    },
    {
        "id": "b19c87c226aec28a",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Color Green",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 920,
        "wires": [
            [
                "ecd6ccdaad69204f"
            ]
        ]
    },
    {
        "id": "9bb9e5c1ae1bf3d5",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Color White",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 960,
        "wires": [
            [
                "ecd6ccdaad69204f"
            ]
        ]
    },
    {
        "id": "6b43d48adeb344f8",
        "type": "rbe",
        "z": "b59d8b7ca43e59ce",
        "name": "RBE Total Mults",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.totalmult",
        "topi": "topic",
        "x": 880,
        "y": 1040,
        "wires": [
            [
                "9e5ee1840a1b5563",
                "0256c5da5a588d7a"
            ]
        ]
    },
    {
        "id": "0256c5da5a588d7a",
        "type": "delay",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 1080,
        "wires": [
            [
                "2c37c2173a08b611"
            ]
        ]
    },
    {
        "id": "9e5ee1840a1b5563",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Color Green",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "c3e82d630ac3af74"
            ]
        ]
    },
    {
        "id": "2c37c2173a08b611",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Color White",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1080,
        "wires": [
            [
                "c3e82d630ac3af74"
            ]
        ]
    },
    {
        "id": "3b834e94e10842af",
        "type": "rbe",
        "z": "b59d8b7ca43e59ce",
        "name": "RBE Total Points",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.totalpoints",
        "topi": "topic",
        "x": 890,
        "y": 1160,
        "wires": [
            [
                "71c4ab9fccab69ff",
                "6e284ec98ce3bf08"
            ]
        ]
    },
    {
        "id": "6e284ec98ce3bf08",
        "type": "delay",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 1200,
        "wires": [
            [
                "5e523473ba049748"
            ]
        ]
    },
    {
        "id": "71c4ab9fccab69ff",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Color Green",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#008000",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 1160,
        "wires": [
            [
                "ebcd86a7c9742a58"
            ]
        ]
    },
    {
        "id": "5e523473ba049748",
        "type": "change",
        "z": "b59d8b7ca43e59ce",
        "name": "Color White",
        "rules": [
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "#FFFFFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1200,
        "wires": [
            [
                "ebcd86a7c9742a58"
            ]
        ]
    },
    {
        "id": "98e7482ec778ed6c",
        "type": "debug",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 80,
        "wires": []
    },
    {
        "id": "8680b1c875cebcb6",
        "type": "debug",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 460,
        "wires": []
    },
    {
        "id": "b36078808a8a6ad3",
        "type": "delay",
        "z": "b59d8b7ca43e59ce",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 260,
        "wires": [
            [
                "cd4571df3441bb88"
            ]
        ]
    },
    {
        "id": "b14a4de771554740",
        "type": "function",
        "z": "b59d8b7ca43e59ce",
        "name": "Reset Map",
        "func": "msg.payload = {command:{clear:\"lookup\"}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 200,
        "wires": [
            [
                "c619ce9fa95f791b"
            ]
        ]
    },
    {
        "id": "7163c86597a36265",
        "type": "function",
        "z": "b59d8b7ca43e59ce",
        "name": "Draw Great Circle Lines",
        "func": "let lat1 = msg.payload.lat\nlet lon1 = msg.payload.lon\nlet lat = parseFloat(lat1);\nlet lon = parseFloat(lon1);\nlet homelat = global.get('homelat');\nlet homelon = global.get('homelon');\n\nmsg.payload.greatcircle = [[homelat,homelon], [lat,lon]]\n\nif (msg.payload.greatcircle[0][0] == undefined)\n{\n    delete msg.payload.greatcircle;\n}\n\n// Limit lat and lon to 4 numbers after decimal \n\nmsg.payload.lat = lat.toFixed(5);\nmsg.payload.lon = lon.toFixed(5);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 260,
        "wires": [
            [
                "c619ce9fa95f791b"
            ]
        ]
    },
    {
        "id": "d3d6702c318319cb",
        "type": "function",
        "z": "b59d8b7ca43e59ce",
        "name": "Draw Great Circle Lines",
        "func": "let lat1 = msg.payload.lat\nlet lon1 = msg.payload.lon\nlet lat = parseFloat(lat1);\nlet lon = parseFloat(lon1);\nlet homelat = global.get('homelat');\nlet homelon = global.get('homelon');\n\nmsg.payload.greatcircle = [[homelat,homelon], [lat,lon]]\n\nif (msg.payload.greatcircle[0][0] == undefined)\n{\n    delete msg.payload.greatcircle;\n}\n\n// Limit lat and lon to 4 numbers after decimal \n\nmsg.payload.lat = lat.toFixed(5);\nmsg.payload.lon = lon.toFixed(5);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 500,
        "wires": [
            [
                "69d83cae2e4e6a4c"
            ]
        ]
    },
    {
        "id": "dffc242.cc36fd8",
        "type": "exec",
        "z": "db5600520bb7f279",
        "d": true,
        "command": "vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "winHide": false,
        "name": "RPi Temp.",
        "x": 490,
        "y": 320,
        "wires": [
            [
                "b5ed9875.c4a018"
            ],
            [],
            []
        ]
    },
    {
        "id": "82af5b64.ec0bb8",
        "type": "inject",
        "z": "db5600520bb7f279",
        "name": "Every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 282.27777099609375,
        "y": 320.4722194671631,
        "wires": [
            [
                "dffc242.cc36fd8",
                "9bdcdf74.974df",
                "4f06a834.7ba218",
                "cae8b4ca.06b218",
                "ff3e660.2675e98"
            ]
        ]
    },
    {
        "id": "b5ed9875.c4a018",
        "type": "function",
        "z": "db5600520bb7f279",
        "name": "Set temp to String",
        "func": "str = msg.payload\nmsg.payload = str.substring(5,9);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 320,
        "wires": [
            [
                "f042fa28.8f2bf8"
            ]
        ]
    },
    {
        "id": "5d727c3b.003534",
        "type": "exec",
        "z": "db5600520bb7f279",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Reboot",
        "x": 479.6667251586914,
        "y": 603.666708946228,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a7a4f275.ae976",
        "type": "exec",
        "z": "db5600520bb7f279",
        "command": "sudo shutdown -h now",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Shutdown",
        "x": 488.94446563720703,
        "y": 660.3611555099487,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9bdcdf74.974df",
        "type": "exec",
        "z": "db5600520bb7f279",
        "command": "top -d 0.5 -b -n2 | grep \"Cpu(s)\"|tail -n 1 | awk '{print $2 + $4}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "CPU Load",
        "x": 490,
        "y": 400,
        "wires": [
            [
                "68c64778.cfee38"
            ],
            [],
            []
        ]
    },
    {
        "id": "4f06a834.7ba218",
        "type": "exec",
        "z": "db5600520bb7f279",
        "command": "free | grep Mem | awk '{print 4096-($2/1024)}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Memory Used",
        "x": 500.0000190734863,
        "y": 464.22223567962646,
        "wires": [
            [
                "9361ceb4.1735b"
            ],
            [],
            []
        ]
    },
    {
        "id": "a4592fc6.2862c",
        "type": "exec",
        "z": "db5600520bb7f279",
        "command": "df -h",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Disk Usage",
        "x": 487.66665267944336,
        "y": 531.8889074325562,
        "wires": [
            [
                "2af889a4.6ca3f6"
            ],
            [],
            []
        ]
    },
    {
        "id": "2af889a4.6ca3f6",
        "type": "function",
        "z": "db5600520bb7f279",
        "name": "Do Math",
        "func": "var re = /([0-9]{2})%/\nvar idx = msg.payload.search(re);\nvar str = msg.payload;\nif (idx >=0) {\n    str = msg.payload.substring(idx, idx + 2);\n}\nmsg.payload = str;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 520,
        "wires": [
            [
                "5f6a15ab.35686c"
            ]
        ]
    },
    {
        "id": "54c76243.56c1ac",
        "type": "inject",
        "z": "db5600520bb7f279",
        "name": "Every 1 min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 287.66665267944336,
        "y": 531.8889074325562,
        "wires": [
            [
                "a4592fc6.2862c"
            ]
        ]
    },
    {
        "id": "50446066.86337",
        "type": "inject",
        "z": "db5600520bb7f279",
        "name": "Every 1 min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 283.68601989746094,
        "y": 719.2337446212769,
        "wires": [
            [
                "b820cdbc.610bc"
            ]
        ]
    },
    {
        "id": "b820cdbc.610bc",
        "type": "exec",
        "z": "db5600520bb7f279",
        "command": "hostname",
        "addpay": false,
        "append": "-I",
        "useSpawn": "",
        "timer": "",
        "name": "Get Local IP",
        "x": 488.24157333374023,
        "y": 719.7337579727173,
        "wires": [
            [
                "36680891.7950e8"
            ],
            [],
            []
        ]
    },
    {
        "id": "9361ceb4.1735b",
        "type": "smooth",
        "z": "db5600520bb7f279",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "1",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 744.7778091430664,
        "y": 453.66666316986084,
        "wires": [
            [
                "2e791614.455c2a"
            ]
        ]
    },
    {
        "id": "cae8b4ca.06b218",
        "type": "exec",
        "z": "db5600520bb7f279",
        "command": "cat /proc/net/dev | grep eth0 | awk '{print $3}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Received Packets",
        "x": 514.7778091430664,
        "y": 253.66666316986084,
        "wires": [
            [
                "9fb38b04.0c5d98"
            ],
            [],
            []
        ]
    },
    {
        "id": "ff3e660.2675e98",
        "type": "exec",
        "z": "db5600520bb7f279",
        "command": "cat /proc/net/dev | grep eth0 | awk '{print $11}'",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Transmitted Packets",
        "x": 524.7778091430664,
        "y": 193.66666316986084,
        "wires": [
            [
                "694a5b7b.825854"
            ],
            [],
            []
        ]
    },
    {
        "id": "f5b11785.f1ed18",
        "type": "ui_button",
        "z": "db5600520bb7f279",
        "name": "",
        "group": "dea9d7ac.0cefc8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reboot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 279.4445037841797,
        "y": 603.6667327880859,
        "wires": [
            [
                "5d727c3b.003534"
            ]
        ]
    },
    {
        "id": "c07dded1.bd445",
        "type": "ui_button",
        "z": "db5600520bb7f279",
        "name": "",
        "group": "dea9d7ac.0cefc8",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 269.05558013916016,
        "y": 660.1389617919922,
        "wires": [
            [
                "a7a4f275.ae976"
            ]
        ]
    },
    {
        "id": "36680891.7950e8",
        "type": "ui_text",
        "z": "db5600520bb7f279",
        "group": "dea9d7ac.0cefc8",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "IP Address",
        "format": "{{value.substring(0, value.indexOf(\" \"))}}",
        "layout": "col-center",
        "x": 826.3334007263184,
        "y": 704.5555734634399,
        "wires": []
    },
    {
        "id": "9fb38b04.0c5d98",
        "type": "ui_text",
        "z": "db5600520bb7f279",
        "group": "8ca85278.65932",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Received Packets",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 834.7778091430664,
        "y": 253.66666316986084,
        "wires": []
    },
    {
        "id": "694a5b7b.825854",
        "type": "ui_text",
        "z": "db5600520bb7f279",
        "group": "8ca85278.65932",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Transmitted Bytes",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 814.7778091430664,
        "y": 193.66666316986084,
        "wires": []
    },
    {
        "id": "3d67dce5.112054",
        "type": "ui_gauge",
        "z": "db5600520bb7f279",
        "name": "CPU Temp",
        "group": "dea9d7ac.0cefc8",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "CPU Temperature",
        "label": "F",
        "format": "{{value}}",
        "min": 0,
        "max": "170",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "125",
        "seg2": "150",
        "x": 1094.7778091430664,
        "y": 173.66666316986084,
        "wires": []
    },
    {
        "id": "68c64778.cfee38",
        "type": "ui_gauge",
        "z": "db5600520bb7f279",
        "name": "",
        "group": "dea9d7ac.0cefc8",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "CPU",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 809.8888931274414,
        "y": 387.77777767181396,
        "wires": []
    },
    {
        "id": "2e791614.455c2a",
        "type": "ui_gauge",
        "z": "db5600520bb7f279",
        "name": "",
        "group": "dea9d7ac.0cefc8",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Memory Used",
        "label": "Mb",
        "format": "{{value}}",
        "min": "0",
        "max": "4096",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "3000",
        "seg2": "3500",
        "x": 984.7778091430664,
        "y": 453.66666316986084,
        "wires": []
    },
    {
        "id": "5f6a15ab.35686c",
        "type": "ui_gauge",
        "z": "db5600520bb7f279",
        "name": "",
        "group": "dea9d7ac.0cefc8",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Disk Space",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 870,
        "y": 500,
        "wires": []
    },
    {
        "id": "cd3f0873.755ee8",
        "type": "ui_chart",
        "z": "db5600520bb7f279",
        "name": "",
        "group": "dea9d7ac.0cefc8",
        "order": 5,
        "width": 6,
        "height": 4,
        "label": "CPU Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "6",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1114.7778091430664,
        "y": 233.66666316986084,
        "wires": [
            []
        ]
    },
    {
        "id": "f042fa28.8f2bf8",
        "type": "unit-converter",
        "z": "db5600520bb7f279",
        "category": "temperature",
        "inputUnit": "C",
        "outputUnit": "F",
        "inputField": "payload",
        "outputField": "payload",
        "inputFieldType": "msg",
        "outputFieldType": "msg",
        "roundOutputField": true,
        "outputFieldDecimals": "1",
        "name": "",
        "x": 920,
        "y": 320,
        "wires": [
            [
                "3d67dce5.112054",
                "cd3f0873.755ee8"
            ]
        ]
    },
    {
        "id": "4427987ff3a86c40",
        "type": "inject",
        "z": "db5600520bb7f279",
        "name": "Tick 1hr",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1340,
        "y": 640,
        "wires": [
            [
                "f5b492524e891569"
            ]
        ]
    },
    {
        "id": "f5b492524e891569",
        "type": "http request",
        "z": "db5600520bb7f279",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://www.hamqsl.com/solarxml.php",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1510,
        "y": 640,
        "wires": [
            [
                "6ffebb50d8d236c3"
            ]
        ]
    },
    {
        "id": "390148b044f3e251",
        "type": "ui_template",
        "z": "db5600520bb7f279",
        "group": "4c7c4383a5f4d36f",
        "name": "Solar Data",
        "order": 1,
        "width": 5,
        "height": 15,
        "format": "\n<style type='text/css'>\n\t.main\n\t\n\ttable {\n\t  width: 220px;\n\t  background:#000000;\n\t  border: 1px;\n\t  margin-top: 15px;\n\t  margin-bottom: 25px;\n\t}\n\tth {\n\t  font-family: \"Trebuchet MS\", Arial, Verdana;\n\t  font-size: 14px;\n\t  color: #FFFFFF;\n\t  padding: 1px;\n\t}\n\ttd {\n\t  border-bottom: 1px;\n\t  padding: 1px;\n\t  color: #F0EEEE;\n\t  text-align: center;\n\t  white-space:nowrap;\n\t}\n\t\n\ta.one:link {color:#ff0000;text-decoration:none;}\n\ta.one:visited {color:#0000ff;text-decoration:none;}\n\ta.one:hover {text-decoration:underline;}\n\n\t.lFont {font-size: 10px;}\n\t.nFont {font-size: 12px;}\n\t.bFont {font-size: 14px;}\n\t\n\t.green  {color: #14ED0D;}\n\t.yellow {color: #FEFE0B;}\n\t.red    {color: #E94D0A;}\n\t.white  {color: #F0EEEE;}\n\t\n\t/* change color of band conditions */\n\t.Poor {color: #E94D0A;}\n\t.Fair {color: #FEFE0B;}\n\t.Good {color: #14ED0D;}\n\t\n\t/* change color of geomagnetic field */\n\t.ACTIVE     {color: #FEFE0B;}\n\t.INACTIVE   {color: #14ED0D;}\n\t.UNSETTLD   {color: #14ED0D;}\n\t.QUIET      {color: #14ED0D;}\n\t.VRQUIET    {color: #14ED0D;}\n\t\n\t/* change color of sig noise*/\n\t.S0-S1  {color: #14ED0D;}\n\t.S1-S2  {color: #14ED0D;}\n\t.S2-S3  {color: #14ED0D;}\n\t.S3-S4  {color: #FEFE0B;}\n\t\n\t/* VHF band condition colours */\n\t.HighLATAUR {color: #FEFE0B;}\n\t.MIDLATAUR  {color: #14ED0D;}\n\t.BandClosed {color: #E94D0A;}\n\t.at50MHzEs    {color: #14ED0D;}\n\t.at70MHzEs    {color: #14ED0D;}\n\t.at144MHzEs   {color: #14ED0D;}\n\t.HighMUF    {color: #FEFE0B;}\n\t.NotSet     {color: #f003fc;}\n\t\n\t.cellUL {border-bottom: 1px solid #F0EEEE;}\n\n</style>\n\n    <div class=\"main\">\n        <table>\n            <tr>\n                <th colspan=\"4\" class=\"nFont\">Solar-Terrestrial Data provided by N0NBH</th>\n            </tr>\n            <tr>\n    \t\t\t<!-- {{msg.payload.solardata.updated[0]}} -->\n                <td colspan=\"4\" class=\"nFont\"><font class=\"yellow\"><strong>{{msg.payload.solardata.updated[0]}}</strong></font></td>\n            </tr>\n            <tr>\n    \t\t\t<!-- {{msg.payload.solardata.solarflux[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">SFI:</td>\n                <td style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.solarflux[0]}}</strong></font></td>\n    \t\t\t<!-- {{msg.payload.solardata.sunspots[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">SN:</td>\n                <td style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.sunspots[0]}}</strong></font></td>\n            </tr>\n            <tr>\n    \t\t\t<!-- {{msg.payload.solardata.aindex[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">A-Index:</td>\n                <td style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.aindex[0]}}</strong></font></td>\n    \t\t\t<!-- {{msg.payload.solardata.kindex[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">K-Index:</td>\n                <td style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.kindex[0]}}</strong></font></td> \n            </tr>\n            <tr>\n    \t\t\t<!-- {{msg.payload.solardata.xray[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">X-Ray:</td>\n                <td colspan=\"3\" style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.xray[0]}}</strong></font></td>\n    \t\t</tr>\n            <tr>\n                <!-- {{msg.payload.solardata.heliumline[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">304A:</td>\n                <td colspan=\"3\" style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.heliumline[0]}}</strong></font><span class=\"left\"> @ SEM</span></td>\n            </tr>\n            <tr>\n    \t\t\t<!-- {{msg.payload.solardata.protonflux[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">Ptn Flx:</td>\n                <td style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.protonflux[0]}}</strong></font></td>\n    \t\t\t<!-- {{msg.payload.solardata.electonflux[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">Elc Flx:</td>\n                <td style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.electonflux[0]}}</strong></font></td>\n            </tr>\n            <tr>\n    \t\t\t<!-- {{msg.payload.solardata.aurora[0]}} / {{msg.payload.solardata.normalization[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">Auroa: </td>\n                <td colspan=\"3\" style=\"text-align:left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.aurora[0]}}</strong></font>&nbsp;/&nbsp;<font class=\"green\"><strong>n={{msg.payload.solardata.normalization[0]}}</strong></font></td>\n            </tr>\n            <tr>\n    \t\t\t<!-- {{msg.payload.solardata.magneticfield[0]}} -->\n                <td style=\"text-align: right\" class=\"nFont\">Bz:</td>\n                <td style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.magneticfield[0]}}</strong></font></td>\n                <!-- {{msg.payload.solardata.solarwind[0]}} -->\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">SW:</td>\n    \t\t\t<td style=\"text-align: left\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.solarwind[0]}}</strong></font></td>\n            </tr>\n    \t\t<tr>\n    \t\t\t<td colspan=\"4\" class=\"cellUL\"></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t    <td colspan=\"4\" style=\"text-align: center\" class=\"nFont\">HF Conditions</td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">Band</td>\n    \t\t\t<td style=\"text-align: center\" class=\"nFont\">Day</td>\n                <td style=\"text-align: center\" class=\"nFont\">Night</td>\n                <td></td>\n            </tr>\n    \t\t<tr>\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">80m-40m</td>\n                <td style=\"text-align: center\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedconditions[0].band[0]._}}\"><strong>{{msg.payload.solardata.calculatedconditions[0].band[0]._}}</strong></font></td>\n                <td style=\"text-align: center\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedconditions[0].band[4]._}}\"><strong>{{msg.payload.solardata.calculatedconditions[0].band[4]._}}</strong></font></td>\n                <td></td>\n            </tr>\n            <tr>\n                <td style=\"text-align: right\" class=\"nFont\">30m-20m</td>\n                <td style=\"text-align: center\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedconditions[0].band[1]._}}\"><strong>{{msg.payload.solardata.calculatedconditions[0].band[1]._}}</strong></font></td>\n                <td style=\"text-align: center\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedconditions[0].band[5]._}}\"><strong>{{msg.payload.solardata.calculatedconditions[0].band[5]._}}</strong></font></td>\n                <td></td>\n            </tr>\n            <tr>\n                <td style=\"text-align: right\" class=\"nFont\">17m-15m</td>\n                <td style=\"text-align: center\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedconditions[0].band[2]._}}\"><strong>{{msg.payload.solardata.calculatedconditions[0].band[2]._}}</strong></font></td>\n                <td style=\"text-align: center\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedconditions[0].band[6]._}}\"><strong>{{msg.payload.solardata.calculatedconditions[0].band[6]._}}</strong></font></td>\n                <td></td>\n    \t\t</tr>\n            <tr>    \n                <td style=\"text-align: right\" class=\"nFont\">12m-10m</td>\n                <td style=\"text-align: center\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedconditions[0].band[3]._}}\"><strong>{{msg.payload.solardata.calculatedconditions[0].band[3]._}}</strong></font></td>\n                <td style=\"text-align: center\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedconditions[0].band[7]._}}\"><strong>{{msg.payload.solardata.calculatedconditions[0].band[7]._}}</strong></font></td>\n                <td></td>\n            </tr>\n    \t\t<tr>\n    \t\t\t<td colspan=\"4\" class=\"cellUL\"></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t<td colspan=\"4\" style=\"text-align: center\" class=\"nFont\">VHF Conditions</td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t<!-- {{msg.payload.solardata.latdegree[0]}} -->\n    \t\t<td style=\"text-align: right\" class=\"nFont\">Aur Lat</td>\n    \t\t<td colspan=\"3\" class=\"nFont\"><font class=\"red\"><strong>{{msg.payload.solardata.latdegree[0]}}&#176;</strong></font></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t    <!-- payload.solardata.calculatedvhfconditions[0].phenomenon[0]._ -->\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">Aurora</td>\n    \t\t\t<td colspan=\"3\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[0].$.bandcond}}\"><strong>{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[0]._}}</strong></font></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t    <!-- payload.solardata.calculatedvhfconditions[0].phenomenon[3]._  -->\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">6m EsEU</td>\n    \t\t\t<td colspan=\"3\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[3].$.bandcond}}\"><strong>{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[3]._}}</strong></font></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t    <!-- payload.solardata.calculatedvhfconditions[0].phenomenon[4]._ -->\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">4m EsEU</td>\n    \t\t\t<td colspan=\"3\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[4].$.bandcond}}\"><strong>{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[4]._}}</strong></font></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t    <!-- payload.solardata.calculatedvhfconditions[0].phenomenon[1]._ -->\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">2m EsEU</td>\n    \t\t\t<td colspan=\"3\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[1].$.bandcond}}\"><strong>{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[1]._}}</strong></font></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t    <!-- payload.solardata.calculatedvhfconditions[0].phenomenon[2]._ -->\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">2m EsNA</td>\n    \t\t\t<td colspan=\"3\" class=\"nFont\"><font class=\"{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[2].$.bandcond}}\"><strong>{{msg.payload.solardata.calculatedvhfconditions[0].phenomenon[2]._}}</strong></font></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">EME Deg</td>\n    \t\t\t<td colspan=\"3\" >\n    \t\t\t\t<a href=\"https://mmmonvhf.de/eme.php\" target=\"_blank\">\n    \t\t\t\t\t<div style=\"display: inline-block; background: url(https://www.mmmonvhf.de/eme/eme.png) 10% 50%; background-repeat: no-repeat; width: 100px; height: 19px;\"></div>\n    \t\t\t\t</a>\n    \t\t\t</td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\" valign=\"top\">Solar Flare Prb</td>\n    \t\t\t<td colspan=\"3\" >\n    \t\t\t\t<a href=\"http://spaceweather.inf.brad.ac.uk/fm/\" target=\"_blank\">\n    \t\t\t\t\t<div style=\"display: inline-block; background: url(http://spaceweather.inf.brad.ac.uk/ASAP_latest/flaremonitor_24.png) 30% 2%; width: 35px; height: 20px; background-color: #ffffff; background-repeat: no-repeat; filter: brightness(0.6) contrast(3);\"></div>\n    \t\t\t\t</a>\n    \t\t\t</td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\" valign=\"top\"><a href=\"https://mmmonvhf.de/es.php\" target=\"_blank\" style=\"color: #ffffff;\">MUF</a> <br/> <a href=\"https://mmmonvhf.de/ms.php\" target=\"_blank\" style=\"color: #ffffff;\">MS</a></td>\n    \t\t\t<td colspan=\"3\" >\n    \t\t\t\t    <div style=\"display: inline-block; background: url(https://www.mmmonvhf.de/es/es.png) left top no-repeat, url(https://www.mmmonvhf.de/ms/ms.png) left bottom no-repeat; width:121px; height:12px; padding: 15px;\"></div>\n    \t\t\t</td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t\t<td colspan=\"4\" class=\"cellUL\"></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t    <!-- payload.solardata.geomagfield[0] -->\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">Geomag Field</td>\n    \t\t\t<td colspan=\"3\" class=\"nFont\"><font class=\"{{msg.payload.solardata.geomagfield[0]}}\"><strong>{{msg.payload.solardata.geomagfield[0]}}</strong></font></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t    <!-- payload.solardata.signalnoise[0] -->\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">Sig Noise Lvl</td>\n    \t\t\t<td colspan=\"3\" class=\"nFont\"><font class=\"{{msg.payload.solardata.signalnoise[0]}}\"><strong>{{msg.payload.solardata.signalnoise[0]}}</strong></font></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t    <!-- payload.solardata.muf[0] -->\n    \t\t\t<td style=\"text-align: right\" class=\"nFont\">MUF US Boulder</td>\n    \t\t\t<td colspan=\"3\" class=\"nFont\"><font class=\"green\"><strong>{{msg.payload.solardata.muf[0]}}</strong></font></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t\t<td colspan=\"4\" class=\"cellUL\"></td>\n    \t\t</tr>\n    \t\t<tr>\n    \t\t\t<!-- {{msg.payload.solardata.source[0].$.url}} -->\n                <td colspan=\"4\" style=\"text-align: center\" class=\"lFont\"><a class=\"one\" href=\"{{msg.payload.solardata.source[0].$.url}}\" target=\"_blank\">{{msg.payload.solardata.source[0].$.url}}</a></td>\n            </tr>\n    \t\t<tr>\n                <td colspan=\"4\" style=\"text-align: center\" class=\"lFont\">© Copyright Paul L Herrman</td>\n            </tr>\n        </table>\n    </div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2150,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6ffebb50d8d236c3",
        "type": "html",
        "z": "db5600520bb7f279",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "solar",
        "ret": "html",
        "as": "multi",
        "x": 1670,
        "y": 640,
        "wires": [
            [
                "598e32ad1aec7e5c"
            ]
        ]
    },
    {
        "id": "598e32ad1aec7e5c",
        "type": "xml",
        "z": "db5600520bb7f279",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1790,
        "y": 640,
        "wires": [
            [
                "b374b0c064678ee0"
            ]
        ]
    },
    {
        "id": "fe98f6937c6ba1ba",
        "type": "debug",
        "z": "db5600520bb7f279",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 600,
        "wires": []
    },
    {
        "id": "b374b0c064678ee0",
        "type": "function",
        "z": "db5600520bb7f279",
        "name": "Insert element",
        "func": "// vhf aurora\n\nvar m_in0 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[0]._;\nvar m_out0 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[0].$;\n\nif (m_in0 == \"Band Closed\") {\n    m_out0 = m_out0[\"bandcond\"]=\"BandClosed\";\n} else if (m_in0 == \"High LAT AUR\" ) {\n    m_out0 = m_out0[\"bandcond\"]=\"HighLATAUR\";\n} else if (m_in0 == \"MID LAT AUR\" ) {\n    m_out0 = m_out0[\"bandcond\"]=\"MIDLATAUR\";    \n} else {\n    m_out0 = m_out0[\"bandcond\"]=\"NotSet\";\n}\n\n// 2m E-Skip EU\n\nvar m_in1 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[1]._;\nvar m_out1 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[1].$;\n\nif (m_in1 == \"Band Closed\") {\n    m_out1 = m_out1[\"bandcond\"]=\"BandClosed\";\n} else if (m_in1 == \"High MUF\") {\n    m_out1 = m_out1[\"bandcond\"]=\"HighMUF\";\n} else if (m_in1 == \"144MHz Es\") {\n    m_out1 = m_out1[\"bandcond\"]=\"144MHzEs\";    \n} else {\n    m_out1 = m_out1[\"bandcond\"]=\"NotSet\";\n}\n\n// 2m E-Skip NA\n\nvar m_in2 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[2]._;\nvar m_out2 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[2].$;\n\nif (m_in2 == \"Band Closed\") {\n    m_out2 = m_out2[\"bandcond\"]=\"BandClosed\";\n} else if (m_in2 == \"High MUF\") {\n    m_out1 = m_out2[\"bandcond\"]=\"HighMUF\";\n} else if (m_in2 == \"144MHz Es\") {\n    m_out1 = m_out2[\"bandcond\"]=\"at144MHzEs\"; \n} else {\n    m_out2 = m_out2[\"bandcond\"]=\"NotSet\";\n}\n\n// 6m band conditions\n\nvar m_in3 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[3]._;\nvar m_out3 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[3].$;\n\nif (m_in3 == \"Band Closed\") {\n    m_out3 = m_out3[\"bandcond\"]=\"BandClosed\";\n} else if (m_in3 == \"50MHz Es\") {\n    m_out3 = m_out3[\"bandcond\"]=\"at50MHzEs\";\n} else {\n    m_out3 = m_out3[\"bandcond\"]=\"NotSet\";\n}\n\n// 4m band conditions\n\nvar m_in4 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[4]._;\nvar m_out4 = msg.payload.solardata.calculatedvhfconditions[0].phenomenon[4].$;\n\nif (m_in4 == \"Band Closed\") {\n    m_out4 = m_out4[\"bandcond\"]=\"BandClosed\";\n} else if (m_in4 == \"70MHz Es\") {\n    m_out3 = m_out4[\"bandcond\"]=\"at70MHzEs\";\n} else {\n    m_out4 = m_out4[\"bandcond\"]=\"NotSet\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1940,
        "y": 640,
        "wires": [
            [
                "fe98f6937c6ba1ba",
                "390148b044f3e251"
            ]
        ]
    },
    {
        "id": "bd2e239ff1d02c56",
        "type": "comment",
        "z": "db5600520bb7f279",
        "name": "Solar Data",
        "info": "v. 0.1b\nThis reads xml data from N0NBH (and other sources) and formats it for use on the node red ui.\n\n# still to fix colours depending on VHF band conditions\n",
        "x": 1360,
        "y": 600,
        "wires": []
    },
    {
        "id": "c0fdf1e3b8f1fdec",
        "type": "ui_chart",
        "z": "db5600520bb7f279",
        "name": "google.com Chart",
        "group": "f19108a51ffcbc92",
        "order": 1,
        "width": 6,
        "height": 4,
        "label": "google.com host pings",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "8ebb0d8a1be64efd",
        "type": "ui_gauge",
        "z": "db5600520bb7f279",
        "name": "google.com gauge",
        "group": "f19108a51ffcbc92",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "google.com",
        "label": "ms",
        "format": "{{msg.payload}}",
        "min": 0,
        "max": "150",
        "colors": [
            "#36b300",
            "#e6e600",
            "#cb3a3a"
        ],
        "seg1": "40",
        "seg2": "75",
        "className": "",
        "x": 550,
        "y": 1140,
        "wires": []
    },
    {
        "id": "78339185fc12df93",
        "type": "ping",
        "z": "db5600520bb7f279",
        "mode": "timed",
        "name": "Internet",
        "host": "1.1.1.1",
        "timer": "20",
        "inputs": 0,
        "x": 230,
        "y": 1060,
        "wires": [
            [
                "8ebb0d8a1be64efd",
                "cc3bd762d8c3d90f",
                "a6c5286f9f4e522d"
            ]
        ]
    },
    {
        "id": "cc3bd762d8c3d90f",
        "type": "smooth",
        "z": "db5600520bb7f279",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "4",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 500,
        "y": 1080,
        "wires": [
            [
                "c0fdf1e3b8f1fdec"
            ]
        ]
    },
    {
        "id": "643ff825d341bf96",
        "type": "ui_led",
        "z": "db5600520bb7f279",
        "order": 4,
        "group": "f19108a51ffcbc92",
        "width": 3,
        "height": 1,
        "label": "Net",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Internet LED",
        "x": 930,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a6c5286f9f4e522d",
        "type": "switch",
        "z": "db5600520bb7f279",
        "name": "Is Payload False?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 1000,
        "wires": [
            [
                "7813be2465d48c71"
            ],
            [
                "ac3e4c548860da96"
            ]
        ]
    },
    {
        "id": "ac3e4c548860da96",
        "type": "change",
        "z": "db5600520bb7f279",
        "name": "Set Payload to True",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "internet",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1020,
        "wires": [
            [
                "643ff825d341bf96"
            ]
        ]
    },
    {
        "id": "7813be2465d48c71",
        "type": "change",
        "z": "db5600520bb7f279",
        "name": "Set Internet to False",
        "rules": [
            {
                "t": "set",
                "p": "internet",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 980,
        "wires": [
            [
                "643ff825d341bf96"
            ]
        ]
    },
    {
        "id": "1e5d975d4f33a469",
        "type": "udp in",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "iface": "",
        "port": "12061",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 220,
        "y": 360,
        "wires": [
            [
                "8d88aedc41864cf8"
            ]
        ]
    },
    {
        "id": "7d228ea50d42e333",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "QSO Data Raw",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 420,
        "wires": []
    },
    {
        "id": "95dee3dbb21d6492",
        "type": "comment",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "UDP XML Score Data",
        "info": "",
        "x": 280,
        "y": 320,
        "wires": []
    },
    {
        "id": "1af14f7f89b29f60",
        "type": "template",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "Insert info DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "insert into qsos (app, contestname, contestnr, timestamp, mycall, band, \nrxfreq, txfreq, operator, mode, call, countryprefix, wpxprefix, stationprefix,\ncontinent, snt, sntnr, rcv, rcvnr, gridsquare, exchange1, section, comment, qth, name, power, \nmisctext, zone, prec, ck, ismultiplier1, ismultiplier2, ismultiplier3,\npoints, radionr, run1run2, RoverLocation, RadioInterfaced, NetworkedCompNr, IsOriginal,\nNetBiosName, IsRunQSO, StationName, ID, IsClaimedQso) values \n('{{{payload.contactinfo.app}}}',\n'{{{payload.contactinfo.contestname}}}',\n'{{{payload.contactinfo.contestnr}}}',\n'{{{payload.contactinfo.timestamp}}}',\n'{{{payload.contactinfo.mycall}}}',\n'{{{payload.contactinfo.band}}}',\n'{{{payload.contactinfo.rxfreq}}}',\n'{{{payload.contactinfo.txfreq}}}',\n'{{{payload.contactinfo.operator}}}',\n'{{{payload.contactinfo.mode}}}',\n'{{{payload.contactinfo.call}}}',\n'{{{payload.contactinfo.countryprefix}}}',\n'{{{payload.contactinfo.wpxprefix}}}',\n'{{{payload.contactinfo.stationprefix}}}',\n'{{{payload.contactinfo.continent}}}',\n'{{{payload.contactinfo.snt}}}',\n'{{{payload.contactinfo.sntnr}}}',\n'{{{payload.contactinfo.rcv}}}',\n'{{{payload.contactinfo.rcvnr}}}',\n'{{{payload.contactinfo.gridsquare}}}',\n'{{{payload.contactinfo.exchange1}}}',\n'{{{payload.contactinfo.section}}}',\n'{{{payload.contactinfo.comment}}}',\n'{{{payload.contactinfo.qth}}}',\n'{{{payload.contactinfo.name}}}',\n'{{{payload.contactinfo.power}}}',\n'{{{payload.contactinfo.misctext}}}',\n'{{{payload.contactinfo.zone}}}',\n'{{{payload.contactinfo.prec}}}',\n'{{{payload.contactinfo.ck}}}',\n'{{{payload.contactinfo.ismultiplier1}}}',\n'{{{payload.contactinfo.ismultiplier2}}}',\n'{{{payload.contactinfo.ismultiplier3}}}',\n'{{{payload.contactinfo.points}}}',\n'{{{payload.contactinfo.radionr}}}',\n'{{{payload.contactinfo.run1run2}}}',\n'{{{payload.contactinfo.RoverLocation}}}',\n'{{{payload.contactinfo.RadioInterfaced}}}',\n'{{{payload.contactinfo.NetworkedCompNr}}}',\n'{{{payload.contactinfo.IsOriginal}}}',\n'{{{payload.contactinfo.NetBiosName}}}',\n'{{{payload.contactinfo.IsRunQSO}}}',\n'{{{payload.contactinfo.StationName}}}',\n'{{{payload.contactinfo.ID}}}',\n'{{{payload.contactinfo.IsClaimedQso}}}');\n\n",
        "output": "str",
        "x": 1200,
        "y": 320,
        "wires": [
            [
                "589f1d4180adfc19",
                "826117837339278a"
            ]
        ]
    },
    {
        "id": "589f1d4180adfc19",
        "type": "sqlite",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1600,
        "y": 400,
        "wires": [
            [
                "0cadcaf22f887a0e"
            ]
        ]
    },
    {
        "id": "63b9afc11deec0ca",
        "type": "switch",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "Add - Delete - Replace - Lookup",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "lookupinfo",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "contactinfo",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "contactdelete",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "contactreplace",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "547cf705c08f3fee"
            ],
            [
                "407e8deceb6ad9d3",
                "547cf705c08f3fee"
            ],
            [
                "71ba52668f48ab6c"
            ],
            [
                "740fa20ee427ed88"
            ]
        ]
    },
    {
        "id": "40f7b8d29f1a593a",
        "type": "template",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "Delete QSO",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from qsos where ID=('{{{payload.contactdelete.ID}}}');",
        "output": "str",
        "x": 1290,
        "y": 360,
        "wires": [
            [
                "589f1d4180adfc19",
                "812f9d1a536fe289"
            ]
        ]
    },
    {
        "id": "826117837339278a",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "DB Insert",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 320,
        "wires": []
    },
    {
        "id": "a8d691c04ea6cbf7",
        "type": "string",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "Replace - ",
        "methods": [
            {
                "name": "replaceAll",
                "params": [
                    {
                        "type": "str",
                        "value": "-"
                    },
                    {
                        "type": "str",
                        "value": ""
                    }
                ]
            }
        ],
        "prop": "payload.contactdelete.ID",
        "propout": "payload.contactdelete.ID",
        "object": "msg",
        "objectout": "msg",
        "x": 1120,
        "y": 360,
        "wires": [
            [
                "40f7b8d29f1a593a"
            ]
        ]
    },
    {
        "id": "4ae0a908ac9a4dce",
        "type": "delay",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1100,
        "y": 400,
        "wires": [
            [
                "aa50254808a938c8"
            ]
        ]
    },
    {
        "id": "ec8cad684cf4500a",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "DB Replace",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 440,
        "wires": []
    },
    {
        "id": "812f9d1a536fe289",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "DB Delete",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 360,
        "wires": []
    },
    {
        "id": "740fa20ee427ed88",
        "type": "xml",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 930,
        "y": 400,
        "wires": [
            [
                "4ae0a908ac9a4dce"
            ]
        ]
    },
    {
        "id": "71ba52668f48ab6c",
        "type": "xml",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 930,
        "y": 360,
        "wires": [
            [
                "a8d691c04ea6cbf7"
            ]
        ]
    },
    {
        "id": "407e8deceb6ad9d3",
        "type": "xml",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 930,
        "y": 320,
        "wires": [
            [
                "1af14f7f89b29f60",
                "91e3a9b7825238b6"
            ]
        ]
    },
    {
        "id": "91e3a9b7825238b6",
        "type": "function",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "If Mult Say Mult",
        "func": "let m1 = msg.payload.contactinfo.ismultiplier1[0];\nlet m2 = msg.payload.contactinfo.ismultiplier2[0];\nlet m3 = msg.payload.contactinfo.ismultiplier3[0];\nlet category = global.get('category');\n\nlet op = msg.payload.contactinfo.operator[0];\nlet band1 = msg.payload.contactinfo.band[0];\n\n\nif (m1 == \"1\" || m2 == '1' || m3 == '1')\n{\n    \n    if (category == 'multiop')\n    {\n    msg.payload = \"New Multiplyer from \" + op;\n    return msg;\n    }\n\n    if (category == 'so1v' || category == 'so2r')\n    {\n    msg.payload = \"New Multiplyer\"\n    return msg;\n    }\n    \n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "11439f8ac4e3b895"
            ]
        ]
    },
    {
        "id": "677d263669792c2d",
        "type": "link out",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "QSOs From N1MM OUT",
        "mode": "link",
        "links": [
            "e4e81a5987819415",
            "311b6207c07e5013"
        ],
        "x": 1595,
        "y": 100,
        "wires": []
    },
    {
        "id": "8d88aedc41864cf8",
        "type": "function",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "UTF8",
        "func": "msg.payload=msg.payload.toString('UTF8');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 360,
        "wires": [
            [
                "63b9afc11deec0ca",
                "7d228ea50d42e333"
            ]
        ]
    },
    {
        "id": "547cf705c08f3fee",
        "type": "switch",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "contact or lookup?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "contactinfo",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "lookupinfo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 100,
        "wires": [
            [
                "03b5ea45a14bec38"
            ],
            [
                "76624f15bec4c509"
            ]
        ]
    },
    {
        "id": "41f8c81cbde2390b",
        "type": "change",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "Set Type to QSO",
        "rules": [
            {
                "t": "set",
                "p": "qsotype",
                "pt": "msg",
                "to": "qso",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 80,
        "wires": [
            [
                "677d263669792c2d"
            ]
        ]
    },
    {
        "id": "90a21e8778a42633",
        "type": "change",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "Set Type to Lookup",
        "rules": [
            {
                "t": "set",
                "p": "qsotype",
                "pt": "msg",
                "to": "lookup",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 120,
        "wires": [
            [
                "677d263669792c2d",
                "9b5ffa967054d1a9"
            ]
        ]
    },
    {
        "id": "03b5ea45a14bec38",
        "type": "xml",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "41f8c81cbde2390b"
            ]
        ]
    },
    {
        "id": "76624f15bec4c509",
        "type": "xml",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1130,
        "y": 120,
        "wires": [
            [
                "90a21e8778a42633"
            ]
        ]
    },
    {
        "id": "11439f8ac4e3b895",
        "type": "switch",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "Say Multi",
        "property": "saymulti",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1320,
        "y": 240,
        "wires": [
            [
                "f4935efee5594591"
            ]
        ]
    },
    {
        "id": "93a6eb43a0cd1622",
        "type": "link in",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "Database Radio IN",
        "links": [
            "15fa6dac50ec3359",
            "3e86130caa4f1f80",
            "a96e781180e6e778",
            "94303f00b0074ac4"
        ],
        "x": 135,
        "y": 840,
        "wires": [
            [
                "fed8216c6cda245c"
            ]
        ]
    },
    {
        "id": "130b2eeddfbf75b0",
        "type": "template",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "Insert info DB",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "insert into radio (timestamp, app, StationName, RadioNr, Freq, TXFreq, Mode, OpCall, IsRunning, FocusEntry, EntryWindowHwnd,\nAntenna, Rotors, FocusRadioNr, IsStereo, IsSplit, ActiveRadioNr, IsTransmitting, FunctionKeyCaption, RadioName,\nAuxAntSelected, AuxAntSelectedName) values \n('{{{payload.timestamp}}}',\n'{{{payload.RadioInfo.app}}}',\n'{{{payload.RadioInfo.StationName}}}',\n'{{{payload.RadioInfo.RadioNr}}}',\n'{{{payload.RadioInfo.Freq}}}',\n'{{{payload.RadioInfo.TXFreq}}}',\n'{{{payload.RadioInfo.Mode}}}',\n'{{{payload.RadioInfo.OpCall}}}',\n'{{{payload.RadioInfo.IsRunning}}}',\n'{{{payload.RadioInfo.FocusEntry}}}',\n'{{{payload.RadioInfo.EntryWindowHwnd}}}',\n'{{{payload.RadioInfo.Antenna}}}',\n'{{{payload.RadioInfo.Rotors}}}',\n'{{{payload.RadioInfo.FocusRadioNr}}}',\n'{{{payload.RadioInfo.IsStereo}}}',\n'{{{payload.RadioInfo.IsSplit}}}',\n'{{{payload.RadioInfo.ActiveRadioNr}}}',\n'{{{payload.RadioInfo.IsTransmitting}}}',\n'{{{payload.RadioInfo.FunctionKeyCaption}}}',\n'{{{payload.RadioInfo.RadioName}}}',\n'{{{payload.RadioInfo.AuxAntSelected}}}',\n'{{{payload.RadioInfo.AuxAntSelectedName}}}'\n);\n\n",
        "output": "str",
        "x": 1380,
        "y": 820,
        "wires": [
            [
                "95f6f96670a6b08a",
                "93963dc560fcab1e"
            ]
        ]
    },
    {
        "id": "3b9f0341530d56a7",
        "type": "moment",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "topic": "",
        "input": "payload.timestamp",
        "inputType": "msg",
        "inTz": "America/Chicago",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-GB",
        "output": "payload.timestamp",
        "outputType": "msg",
        "outTz": "America/Chicago",
        "x": 1160,
        "y": 820,
        "wires": [
            [
                "130b2eeddfbf75b0"
            ]
        ]
    },
    {
        "id": "95f6f96670a6b08a",
        "type": "sqlite",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1580,
        "y": 820,
        "wires": [
            [
                "9cfd21c0bd51285b"
            ]
        ]
    },
    {
        "id": "9cfd21c0bd51285b",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 820,
        "wires": []
    },
    {
        "id": "fed8216c6cda245c",
        "type": "switch",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "Station Name",
        "property": "payload.RadioInfo.StationName[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PC1",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC2",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC3",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC4",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC5",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC6",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 330,
        "y": 840,
        "wires": [
            [
                "d5b128cfd798ac47"
            ],
            [
                "d1da622b197520ac"
            ],
            [
                "ded47173803bd33e"
            ],
            [
                "de40d8ac2d9026c8"
            ],
            [
                "ec4d056dcc3db216"
            ],
            [
                "96690058796bd634"
            ]
        ]
    },
    {
        "id": "91725949fc3edaf2",
        "type": "rbe",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "PC1 RBE",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.RadioInfo",
        "topi": "topic",
        "x": 800,
        "y": 740,
        "wires": [
            [
                "3b9f0341530d56a7",
                "5c60f3c47791458b"
            ]
        ]
    },
    {
        "id": "a819ca8d3f060472",
        "type": "rbe",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "PC2 RBE",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 800,
        "y": 780,
        "wires": [
            [
                "3b9f0341530d56a7"
            ]
        ]
    },
    {
        "id": "7f90d48a29cf7912",
        "type": "rbe",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "PC3 RBE",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 800,
        "y": 820,
        "wires": [
            [
                "3b9f0341530d56a7"
            ]
        ]
    },
    {
        "id": "4f839ad8b80a0658",
        "type": "rbe",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "PC4 RBE",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 800,
        "y": 860,
        "wires": [
            [
                "3b9f0341530d56a7"
            ]
        ]
    },
    {
        "id": "c61ab508b6b82808",
        "type": "rbe",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "PC5 RBE",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 800,
        "y": 900,
        "wires": [
            [
                "3b9f0341530d56a7"
            ]
        ]
    },
    {
        "id": "81242aec4c4bf65a",
        "type": "rbe",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "PC6 RBE",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 800,
        "y": 940,
        "wires": [
            [
                "3b9f0341530d56a7"
            ]
        ]
    },
    {
        "id": "d1da622b197520ac",
        "type": "change",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.RadioInfo.RadioNr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 780,
        "wires": [
            [
                "a819ca8d3f060472"
            ]
        ]
    },
    {
        "id": "d5b128cfd798ac47",
        "type": "change",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.RadioInfo.RadioNr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 740,
        "wires": [
            [
                "91725949fc3edaf2",
                "3e0f5f6001e77450"
            ]
        ]
    },
    {
        "id": "ded47173803bd33e",
        "type": "change",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.RadioInfo.RadioNr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 820,
        "wires": [
            [
                "7f90d48a29cf7912"
            ]
        ]
    },
    {
        "id": "de40d8ac2d9026c8",
        "type": "change",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.RadioInfo.RadioNr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 860,
        "wires": [
            [
                "4f839ad8b80a0658"
            ]
        ]
    },
    {
        "id": "ec4d056dcc3db216",
        "type": "change",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.RadioInfo.RadioNr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 900,
        "wires": [
            [
                "c61ab508b6b82808"
            ]
        ]
    },
    {
        "id": "96690058796bd634",
        "type": "change",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.RadioInfo.RadioNr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 940,
        "wires": [
            [
                "81242aec4c4bf65a"
            ]
        ]
    },
    {
        "id": "71ef26e8c3355bec",
        "type": "comment",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "UDP Radio Info",
        "info": "This flow inserts the radio data into the qsos database radio table.  Only if the data has changed will the flow log data into the database. \n\nThe filter node is used on each RadioNr to filter out S02R non-changed data.",
        "x": 320,
        "y": 700,
        "wires": []
    },
    {
        "id": "93963dc560fcab1e",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 780,
        "wires": []
    },
    {
        "id": "3e0f5f6001e77450",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 700,
        "wires": []
    },
    {
        "id": "5c60f3c47791458b",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "6c1673638929b26d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 720,
        "wires": []
    },
    {
        "id": "9b5ffa967054d1a9",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 160,
        "wires": []
    },
    {
        "id": "f4935efee5594591",
        "type": "play audio",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "voice": "0",
        "x": 1600,
        "y": 240,
        "wires": []
    },
    {
        "id": "aa50254808a938c8",
        "type": "template",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "Update Record Info SQL",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "update qsos set \n\napp = '{{{payload.contactreplace.app}}}',\ncontestname = '{{{payload.contactreplace.contestname}}}',\ncontestnr = '{{{payload.contactreplace.contestnr}}}',\ntimestamp = '{{{payload.contactreplace.timestamp}}}',\nmycall = '{{{payload.contactreplace.mycall}}}',\nband = '{{{payload.contactreplace.band}}}',\nrxfreq = '{{{payload.contactreplace.rxfreq}}}',\ntxfreq = '{{{payload.contactreplace.txfreq}}}',\noperator = '{{{payload.contactreplace.operator}}}',\nmode = '{{{payload.contactreplace.mode}}}',\ncall = '{{{payload.contactreplace.call}}}',\ncountryprefix = '{{{payload.contactreplace.countryprefix}}}',\nwpxprefix = '{{{payload.contactreplace.wpxprefix}}}',\nstationprefix = '{{{payload.contactreplace.stationprefix}}}',\ncontinent = '{{{payload.contactreplace.continent}}}',\nsnt = '{{{payload.contactreplace.snt}}}',\nsntnr = '{{{payload.contactreplace.sntnr}}}',\nrcv = '{{{payload.contactreplace.rcv}}}',\nrcvnr = '{{{payload.contactreplace.rcvnr}}}',\ngridsquare = '{{{payload.contactreplace.gridsquare}}}',\nexchange1 = '{{{payload.contactreplace.exchange1}}}',\nsection = '{{{payload.contactreplace.section}}}',\ncomment = '{{{payload.contactreplace.comment}}}',\nqth = '{{{payload.contactreplace.qth}}}',\nname = '{{{payload.contactreplace.name}}}',\npower = '{{{payload.contactreplace.power}}}',\nmisctext = '{{{payload.contactreplace.misctext}}}',\nzone = '{{{payload.contactreplace.zone}}}',\nprec = '{{{payload.contactreplace.prec}}}',\nck = '{{{payload.contactreplace.ck}}}',\nismultiplier1 = '{{{payload.contactreplace.ismultiplier1}}}',\nismultiplier2 = '{{{payload.contactreplace.ismultiplier2}}}',\nismultiplier3 = '{{{payload.contactreplace.ismultiplier3}}}',\npoints = '{{{payload.contactreplace.points}}}',\nradionr = '{{{payload.contactreplace.radionr}}}',\nrun1run2 = '{{{payload.contactreplace.run1run2}}}',\nRoverLocation = '{{{payload.contactreplace.RoverLocation}}}',\nRadioInterfaced = '{{{payload.contactreplace.RadioInterfaced}}}',\nNetworkedCompNr = '{{{payload.contactreplace.NetworkedCompNr}}}',\nIsOriginal = '{{{payload.contactreplace.IsOriginal}}}',\nNetBiosName = '{{{payload.contactreplace.NetBiosName}}}',\nIsRunQSO = '{{{payload.contactreplace.IsRunQSO}}}',\nStationName = '{{{payload.contactreplace.StationName}}}',\nIsClaimedQso = '{{{payload.contactreplace.IsClaimedQso}}}'\n\nwhere ID = '{{{payload.contactreplace.ID}}}';\n",
        "output": "str",
        "x": 1290,
        "y": 400,
        "wires": [
            [
                "589f1d4180adfc19",
                "ec8cad684cf4500a"
            ]
        ]
    },
    {
        "id": "1edd5af6eed6044f",
        "type": "comment",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "To do",
        "info": "Change flow for a QSO update/change based on new N1MM process. ",
        "x": 460,
        "y": 120,
        "wires": []
    },
    {
        "id": "0cadcaf22f887a0e",
        "type": "debug",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 380,
        "wires": []
    },
    {
        "id": "21fe16ca5cbfc06b",
        "type": "link in",
        "z": "1c66bd27e16a3fec",
        "g": "f01baabf4527b6e5",
        "name": "Score_N3FJP",
        "links": [
            "47245c8acbda8034"
        ],
        "x": 235,
        "y": 420,
        "wires": [
            [
                "8d88aedc41864cf8"
            ]
        ]
    },
    {
        "id": "185defa19c9fea72",
        "type": "template",
        "z": "204548a488401a1b",
        "name": "Delete from qsos",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from qsos;",
        "output": "str",
        "x": 1110,
        "y": 140,
        "wires": [
            [
                "b4520201b51afe74"
            ]
        ]
    },
    {
        "id": "b4520201b51afe74",
        "type": "sqlite",
        "z": "204548a488401a1b",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 1340,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "fcd262cd360f32ac",
        "type": "ui_button",
        "z": "204548a488401a1b",
        "name": "",
        "group": "c6e931ac92d6f697",
        "order": 1,
        "width": 6,
        "height": 2,
        "passthru": false,
        "label": "Delete All QSOs & Clear Stats?",
        "tooltip": "",
        "color": "#FFFFFF",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "",
        "payload": "Delete All QSO's From Database & Clear Stats?",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "0f92ae100f900342"
            ]
        ]
    },
    {
        "id": "0f92ae100f900342",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Show Delete All QSOs & Clear Stats",
        "x": 610,
        "y": 140,
        "wires": [
            [
                "82dc57f775f51977"
            ]
        ]
    },
    {
        "id": "82dc57f775f51977",
        "type": "switch",
        "z": "204548a488401a1b",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "185defa19c9fea72",
                "be733be1c4eca984",
                "42dd8e9dba4bcdf2",
                "45b435ab9c8504ec",
                "93aec0ede1f81f3a"
            ]
        ]
    },
    {
        "id": "9e3ed0af8dd3311e",
        "type": "template",
        "z": "204548a488401a1b",
        "name": "Select contest name",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select distinct(contestname) from qsos;",
        "output": "str",
        "x": 460,
        "y": 300,
        "wires": [
            [
                "087cd1b184d28e41"
            ]
        ]
    },
    {
        "id": "087cd1b184d28e41",
        "type": "sqlite",
        "z": "204548a488401a1b",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "QSO Database",
        "x": 660,
        "y": 300,
        "wires": [
            [
                "5e2dd2ec18c177fc"
            ]
        ]
    },
    {
        "id": "b638298b6d42ea25",
        "type": "ui_button",
        "z": "204548a488401a1b",
        "name": "Query All Contests and Radios in DB",
        "group": "c6e931ac92d6f697",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Query All Contests in DB",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "9e3ed0af8dd3311e",
                "996242b2a362222b",
                "926305a899f616de"
            ]
        ]
    },
    {
        "id": "b87bee72db7b8e5d",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Show Query All Contests in DB",
        "x": 1390,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5e2dd2ec18c177fc",
        "type": "split",
        "z": "204548a488401a1b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 300,
        "wires": [
            [
                "282e47e57bd2480e"
            ]
        ]
    },
    {
        "id": "282e47e57bd2480e",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.contestname",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "contest",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 300,
        "wires": [
            [
                "4c016a80971b5d70"
            ]
        ]
    },
    {
        "id": "4c016a80971b5d70",
        "type": "join",
        "z": "204548a488401a1b",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1170,
        "y": 300,
        "wires": [
            [
                "b87bee72db7b8e5d"
            ]
        ]
    },
    {
        "id": "5c4dd14a7c2c8a1e",
        "type": "ui_ui_control",
        "z": "204548a488401a1b",
        "name": "Get IU Control",
        "events": "all",
        "x": 880,
        "y": 1120,
        "wires": [
            [
                "3e32507cf496c14e",
                "bee1f8812d8d8760",
                "2743e8dfd93fb7c8"
            ]
        ]
    },
    {
        "id": "e21f3e0591833840",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Rotate tabs based on seconds",
        "func": "let currentTime = new Date();\nlet seconds = currentTime.getSeconds();\nlet socketid = global.get('socketid');\nlet socketip = global.get('socketip');\n\nif (seconds == 20)\n{\n    return {payload:\"change\",\"tab\":1, \"name\":\"Radio Info\", \"socketid\":socketid, \"socketip\":socketip, \"seconds\":seconds, \"params\":undefined};\n// return {payload: 'change', tab:1, socketid:socketid}\n    \n}\n\nif (seconds == 40)\n{\n    return {payload:\"change\", \"tab\":2, \"name\":\"OP Competition\", \"socketid\":socketid, \"socketip\":socketip, \"seconds\":seconds, \"params\":undefined};\n// return {payload: 'change', tab:1, socketid:socketid}\n    \n}\n\nif (seconds == 0)\n{\n    return {payload:\"change\", \"tab\":3, \"name\":\"Band Stats\", \"socketid\":socketid, \"socketip\":socketip, \"seconds\":seconds, \"params\":undefined};\n//return {payload: 'change', tab:1, socketid:socketid}\n    \n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1220,
        "wires": [
            [
                "57273c6d705dbfce",
                "aa4d1f3abac4a62f"
            ]
        ]
    },
    {
        "id": "5e1859619292b1b8",
        "type": "link out",
        "z": "204548a488401a1b",
        "name": "Clear All Stats OUT",
        "mode": "link",
        "links": [
            "12b4fddb68795a01",
            "2dbfd82fa9a1874b",
            "359cdb13c6617344",
            "3fc8a4c3201d42cc",
            "917c86c665fa20e2",
            "98f77ca383c99024"
        ],
        "x": 1315,
        "y": 80,
        "wires": []
    },
    {
        "id": "be733be1c4eca984",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "Set Payload to []",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 80,
        "wires": [
            [
                "5e1859619292b1b8"
            ]
        ]
    },
    {
        "id": "a0a4089bc4a50f31",
        "type": "ui_button",
        "z": "204548a488401a1b",
        "name": "",
        "group": "c6e931ac92d6f697",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Clear Stats Only?",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Clear Stats Only?",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "77f7f38954bcf107"
            ]
        ]
    },
    {
        "id": "77f7f38954bcf107",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Show Clear Stats Only",
        "x": 820,
        "y": 80,
        "wires": [
            [
                "7702780de2067c53"
            ]
        ]
    },
    {
        "id": "7702780de2067c53",
        "type": "switch",
        "z": "204548a488401a1b",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 80,
        "wires": [
            [
                "be733be1c4eca984",
                "93aec0ede1f81f3a"
            ]
        ]
    },
    {
        "id": "75548936064e3eff",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "2 Comptuer Name Input",
        "label": "",
        "group": "887ee2eadc46df9a",
        "order": 2,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Other Radio Computer Name",
                "value": "PC_name",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "PC_name": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 490,
        "y": 680,
        "wires": [
            [
                "1c46a9079b39b6af"
            ]
        ]
    },
    {
        "id": "1c46a9079b39b6af",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Global PC Names",
        "func": "if (msg.payload.PC_name != \"\")\n{\n    var PCs = global.get(\"PCs\");\n    if(PCs){\n        global.set(\"PCs\", PCs.push(msg.payload.PC_name));\n    }\n    else{\n        var PCsa=[msg.payload.PC_name];\n        global.set(\"PCs\",PCsa)\n\n    }\n}\n\nif (msg.payload.PC2 != \"\")\n{\n    let PC2 = msg.payload.PC2\n    global.set(\"PC2\",PC2)\n}\n\nif (msg.payload.PC3 != \"\")\n{\n    let PC3 = msg.payload.PC3\n    global.set(\"PC3\",PC3)\n}\n\nif (msg.payload.PC4 != \"\")\n{\n    let PC4 = msg.payload.PC4\n    global.set(\"PC4\",PC4)\n}\n\nif (msg.payload.PC5 != \"\")\n{\n    let PC5 = msg.payload.PC5\n    global.set(\"PC5\",PC5)\n}\n\nif (msg.payload.PC6 != \"\")\n{\n    let PC6 = msg.payload.PC6\n    global.set(\"PC6\",PC6)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "65d59c3b296ab636",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "887ee2eadc46df9a",
        "order": 1,
        "width": 6,
        "height": 2,
        "name": "1 First Two PC Names Will Appear on the N1MM Dashboard With the Map",
        "label": "The First Two PC Names Will Appear on the N1MM Dashboard With the Map",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 360,
        "y": 720,
        "wires": []
    },
    {
        "id": "848cb7d74a2a8ede",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Show Get Radio Computer Names",
        "x": 780,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "57273c6d705dbfce",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "After Function",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1180,
        "wires": []
    },
    {
        "id": "44ad2f416930e4e9",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Global Contest Callsign Used",
        "func": "let x = msg.payload.contestcallsign\n\nlet callsign = x.toUpperCase(x);\n\nglobal.set(\"contestcallsign\",callsign)\n\nmsg.payload = callsign;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 920,
        "wires": [
            [
                "289eb29cd66ebe0f"
            ]
        ]
    },
    {
        "id": "cb4f88b22ac357e7",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "4 Contest Callsign Entry",
        "label": "",
        "group": "475c1eff5d97ffe5",
        "order": 5,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Contest Callsign",
                "value": "contestcallsign",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "contestcallsign": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 570,
        "y": 920,
        "wires": [
            [
                "44ad2f416930e4e9"
            ]
        ]
    },
    {
        "id": "0979daa9c078c057",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "d": true,
        "name": "",
        "label": "Socket ID & IP",
        "group": "",
        "order": 1,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Socket ID",
                "value": "socketid",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Machine IP",
                "value": "socketip",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "socketid": "",
            "socketip": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 120,
        "y": 1100,
        "wires": [
            [
                "80b7b6186bcf121d",
                "e0137d1a709aca80"
            ]
        ]
    },
    {
        "id": "80b7b6186bcf121d",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Global Rotating Session ID",
        "func": "let socketip = msg.payload.socketip\nlet socketid = msg.payload.socketid\nglobal.set(\"socketid\",socketid)\nglobal.set(\"socketip\",socketip)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "87bbe35110f717a1",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "d": true,
        "position": "dialog",
        "displayTime": "",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Show Socket ID",
        "x": 580,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "e0137d1a709aca80",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set payload to printout",
        "func": "socketid = msg.payload.socketid\nsocketip = msg.payload.socketip\n\nmsg.payload = \"socketid=\" + socketid + \"  \" + \"IP=\" + socketip;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1140,
        "wires": [
            [
                "87bbe35110f717a1"
            ]
        ]
    },
    {
        "id": "bee1f8812d8d8760",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "d": true,
        "group": "",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "",
        "label": "This Socket ID: ",
        "format": "{{msg.socketid}}",
        "layout": "row-spread",
        "className": "",
        "x": 1100,
        "y": 1120,
        "wires": []
    },
    {
        "id": "3e32507cf496c14e",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "Get UI Control",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2743e8dfd93fb7c8",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "d": true,
        "group": "",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "This IP:",
        "format": "{{msg.socketip}}",
        "layout": "row-spread",
        "className": "",
        "x": 1080,
        "y": 1160,
        "wires": []
    },
    {
        "id": "aa4d1f3abac4a62f",
        "type": "ui_ui_control",
        "z": "204548a488401a1b",
        "name": "Rotate UI Control",
        "events": "change",
        "x": 630,
        "y": 1220,
        "wires": [
            [
                "c473245f3df6387a"
            ]
        ]
    },
    {
        "id": "c473245f3df6387a",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "After Rotate UI Control",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1220,
        "wires": []
    },
    {
        "id": "dcfce735dacf33ca",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "2 Cluster Login Form",
        "label": "",
        "group": "6e223ca6f2986fea",
        "order": 2,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Skimmer Callsign",
                "value": "skimmercall",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "skimmercall": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1520,
        "y": 540,
        "wires": [
            [
                "c7d7c4c8556569e3"
            ]
        ]
    },
    {
        "id": "c7d7c4c8556569e3",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Skimmer Login",
        "func": "let skimmercall = msg.payload.skimmercall\nglobal.set(\"skimmercall\",skimmercall);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 540,
        "wires": [
            [
                "1578c5bef7637e2c"
            ]
        ]
    },
    {
        "id": "48aadad3012ae037",
        "type": "http request",
        "z": "204548a488401a1b",
        "name": "Get QRZ XML Key",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://xmldata.qrz.com/xml/current/?username={{payload.qrzusername}};password={{payload.qrzpassword}};agent=q5.0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 570,
        "y": 1340,
        "wires": [
            [
                "510b5f81ee688927"
            ]
        ]
    },
    {
        "id": "510b5f81ee688927",
        "type": "xml",
        "z": "204548a488401a1b",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 730,
        "y": 1340,
        "wires": [
            [
                "299c138b42867c0f"
            ]
        ]
    },
    {
        "id": "299c138b42867c0f",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrzkey",
                "pt": "global",
                "to": "payload.QRZDatabase.Session[0].Key[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "qrzkeyexpire",
                "pt": "global",
                "to": "payload.QRZDatabase.Session[0].SubExp[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1340,
        "wires": [
            [
                "2474b2eb527716e4"
            ]
        ]
    },
    {
        "id": "c3c9d9c537baf50c",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Verify Valid Key Non-Expire",
        "func": "let currentdate = msg.payload;\n\nlet qrzdate = global.get('qrzkeyexpire');\n\nlet expiredate = Date.parse(qrzdate);\n\nif (currentdate > expiredate )\n{\n    msg.payload = \"QRZ XML Key Has Expired - Enter In Your QRZ Username & Password Again\"\n    return msg;\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1420,
        "wires": [
            [
                "8b73f980f505c909"
            ]
        ]
    },
    {
        "id": "a6a12ef5e9b4d877",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Expired QRZ XML Key",
        "x": 1520,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "55f9cdc81478be4b",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "3 QRZ Database Login Form",
        "label": "",
        "group": "8a65c232b2637c6a",
        "order": 3,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "QRZ Username",
                "value": "qrzusername",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "QRZ Password",
                "value": "qrzpassword",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "qrzusername": "",
            "qrzpassword": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 1340,
        "wires": [
            [
                "6dc67fc045c6beee"
            ]
        ]
    },
    {
        "id": "2fdc2f7dd58ef714",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Clear XML Login Data Notification",
        "x": 720,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "9ab53ebf4237bbb8",
        "type": "ui_button",
        "z": "204548a488401a1b",
        "name": "4 Clear QRZ XML Login Data",
        "group": "8a65c232b2637c6a",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Clear QRZ XML Login Data",
        "tooltip": "",
        "color": "#FFFFFF",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "6c9cc5a9f7948aca"
            ]
        ]
    },
    {
        "id": "6c9cc5a9f7948aca",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Clear Key & Expire Date",
        "func": "global.set('qrzkey', undefined);\nglobal.set('qrzkeyexpire', undefined);\nglobal.set('qrzusername', undefined);\nglobal.set('qrzpassword', undefined);\n\nmsg.payload = \"QRZ XML Login & Key Info Cleared\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1400,
        "wires": [
            [
                "2fdc2f7dd58ef714"
            ]
        ]
    },
    {
        "id": "2474b2eb527716e4",
        "type": "switch",
        "z": "204548a488401a1b",
        "name": "QRZ Key Null?",
        "property": "qrzkey",
        "propertyType": "global",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1080,
        "y": 1340,
        "wires": [
            [
                "5a6fdd06cfcc6c2e"
            ],
            [
                "933d25458044efbd"
            ]
        ]
    },
    {
        "id": "5a6fdd06cfcc6c2e",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "Password Incorrect",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please Check Your Username & Password",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 1320,
        "wires": [
            [
                "c435ac428aac9130"
            ]
        ]
    },
    {
        "id": "c435ac428aac9130",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Check QRZ Username & Password",
        "x": 1580,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "933d25458044efbd",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "Password Corrent",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Username & Password Accepted",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 1360,
        "wires": [
            [
                "afe7bcce2a351666"
            ]
        ]
    },
    {
        "id": "6dc67fc045c6beee",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Reset Keys",
        "func": "global.set('qrzkey', undefined);\nglobal.set('qrzpassword', undefined)\nglobal.set('qrzkeyexpire', undefined);\nglobal.set('qrzusername', undefined);\n\nglobal.set('qrzusername', msg.payload.qrzusername)\nglobal.set('qrzpassword', msg.payload.qrzpassword)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1340,
        "wires": [
            [
                "48aadad3012ae037"
            ]
        ]
    },
    {
        "id": "afe7bcce2a351666",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Correct QRZ Username & Password",
        "x": 1590,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "55b4fc3fa0c1f6b2",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Database Clear & Status Flows",
        "info": "Clear Stats Only Flow - This flow clears all the line graphs, bar graphs, etc on all the dashboard pages.\n\nDelete All QSOs and Clear Stats Flow - This flow clears all the QSO's in the database and clears all the line graphs, bar graphs, etc on all the dashboard pages.  This action is preformed right before the start of the contest.\n\nQuery All Contests in DB - This flow will show you the N1MM short name for all the contests contained in the database.  The database should only contain 1 contest, the current contest.  If a database clear is not performed before the start of a contest, the stats will be calculated for all QSOs in the database.",
        "x": 270,
        "y": 80,
        "wires": []
    },
    {
        "id": "af6732836eb6f6cc",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Computer Name Input",
        "info": "Computer Name Input - These are the computer names running N1MM for each radio.  Input the computer names EXACTLY how they defined on the computer name.  Be aware of upper and lower case names.  You can find the computer name by typing 'computername' in the search bar beside the start menu.  \n\nGet Radio Computer Names - This will dispaly the computer names in the database.  \n\nNote : the first two computer names entered into the input fields will be displayed on the N1MM Dashboard main screen (contest overview & map).\n\n",
        "x": 440,
        "y": 460,
        "wires": []
    },
    {
        "id": "caf32fb5589a2400",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Contest Call Sign",
        "info": "Contest Call Sign - This input will be used to show Reverse Beacon Spots (RBN) on the map on where that call sign is being spotted FROM.  Callsign can be entered in lower or upper case.  \n\nAs spots come in from the spotting network, it searches for the contesting callsign being used.  If it matches, it takes the DE callsign, looks that call up in a database of known RBN callsigns or looked up the DE callsign via QRZ or Hamdb.org based on your preference in which lookup database to use.",
        "x": 240,
        "y": 860,
        "wires": []
    },
    {
        "id": "e35dbee7a81b43bc",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "2 Database Engine Dropdown",
        "label": "Callsign Lookup Engine",
        "tooltip": "",
        "place": "Choose Selection",
        "group": "8a65c232b2637c6a",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Hamdb.org (free)",
                "value": "hamdb",
                "type": "str"
            },
            {
                "label": "QRZ.com",
                "value": "qrz",
                "type": "str"
            },
            {
                "label": "HamQTH",
                "value": "hamqth",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2000,
        "y": 1020,
        "wires": [
            [
                "086b1f9232b45a14"
            ]
        ]
    },
    {
        "id": "086b1f9232b45a14",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "Set DB",
        "rules": [
            {
                "t": "set",
                "p": "dblookup",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 1020,
        "wires": [
            [
                "b666af7686048a30"
            ]
        ]
    },
    {
        "id": "5ae4eb94028eb60d",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Rotate 2nd Tab/Window - NOT IN USE",
        "info": "",
        "x": 230,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d946e6a1fdbf2dfd",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Cluster Login",
        "info": "",
        "x": 1360,
        "y": 480,
        "wires": []
    },
    {
        "id": "9c4b2d89f062bd60",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "QRZ Database Lookup Credentials",
        "info": "",
        "x": 220,
        "y": 1260,
        "wires": []
    },
    {
        "id": "10116a9c3bb286c8",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Database Lookup Engine Select",
        "info": "",
        "x": 1530,
        "y": 960,
        "wires": []
    },
    {
        "id": "b666af7686048a30",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "8a65c232b2637c6a",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "1 Database Lookup Text",
        "label": "Current Database",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2440,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1578c5bef7637e2c",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "6e223ca6f2986fea",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "1 Current Skimmer Login Text",
        "label": "Current Login",
        "format": "{{msg.payload.skimmercall}}",
        "layout": "row-spread",
        "className": "",
        "x": 2030,
        "y": 540,
        "wires": []
    },
    {
        "id": "289eb29cd66ebe0f",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "475c1eff5d97ffe5",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "3 Current Contest Callsign Text",
        "label": "Current Contest Callsign",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1120,
        "y": 920,
        "wires": []
    },
    {
        "id": "59afcb532e72d16e",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ttl",
                "pt": "global",
                "to": "payload.ttl",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ttl",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2100,
        "wires": [
            [
                "b64befbfca8cd376"
            ]
        ]
    },
    {
        "id": "34a7871439e7394e",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get TTL",
        "func": "ttl = global.get('ttl')\n\nif (ttl == null)\n{\n    global.set('ttl',1200)\n    msg.payload = 1200\n}\n\nmsg.payload = ttl;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2160,
        "wires": [
            [
                "b64befbfca8cd376"
            ]
        ]
    },
    {
        "id": "553eaeb2e0afed49",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 2160,
        "wires": [
            [
                "34a7871439e7394e"
            ]
        ]
    },
    {
        "id": "b64befbfca8cd376",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "54b59a095746559b",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "3 Current TTL Icon Value",
        "label": "Current Value",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 2120,
        "wires": []
    },
    {
        "id": "d571e2d301ab771a",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "4 QSO Map Icon TTL Form",
        "label": "",
        "group": "54b59a095746559b",
        "order": 4,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Map Icon Time To Live (sec)",
                "value": "ttl",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ttl": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 2100,
        "wires": [
            [
                "59afcb532e72d16e",
                "4a1defbaca14c045"
            ]
        ]
    },
    {
        "id": "4a1defbaca14c045",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 2060,
        "wires": []
    },
    {
        "id": "7a4b515df88258ed",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "2 Lat & Lon Input",
        "label": "",
        "group": "54b59a095746559b",
        "order": 2,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Home Latitude",
                "value": "lat",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Home Longitude",
                "value": "lon",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "lat": "",
            "lon": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1100,
        "y": 2120,
        "wires": [
            [
                "f9dceb53cc0b5821",
                "dc6bf02cba92c9fc"
            ]
        ]
    },
    {
        "id": "f9dceb53cc0b5821",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 2160,
        "wires": []
    },
    {
        "id": "dc6bf02cba92c9fc",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "homelat",
                "pt": "global",
                "to": "payload.lat",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "homelon",
                "pt": "global",
                "to": "payload.lon",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 2120,
        "wires": [
            [
                "c77ffb1f28a8bc8e"
            ]
        ]
    },
    {
        "id": "fb6c340e0efe1add",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1810,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "c77ffb1f28a8bc8e",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set payload to printout",
        "func": "\nmsg.payload = \"Entered;   lat:   \" + msg.payload.lat + \"   lon:   \" + msg.payload.lon;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 2120,
        "wires": [
            [
                "fb6c340e0efe1add"
            ]
        ]
    },
    {
        "id": "3ae850cc68585fca",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "54b59a095746559b",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "1 Current Lat & Lon",
        "label": "Current Home Lat & Lon",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1770,
        "y": 2080,
        "wires": []
    },
    {
        "id": "6e48cbe3f5469ec6",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Lat & Lon",
        "func": "let homelat = global.get('homelat')\nlet homelon = global.get('homelon')\n\nif (homelat.toString() == '' || homelon.toString() == '')\n{\n    msg.payload = \"Home Lat & Lon Not Set\";\n    msg.testlat= homelat;\n    msg.testlon= homelon;\n}\nelse\n{\n    msg.payload = homelat + ',' + homelon\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 2080,
        "wires": [
            [
                "3ae850cc68585fca"
            ]
        ]
    },
    {
        "id": "3e99a62a3c74b32c",
        "type": "http request",
        "z": "204548a488401a1b",
        "name": "Get QRZ XML Key",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://xmldata.qrz.com/xml/current/?username={{payload.qrzusername}};password={{payload.qrzpassword}};agent=q5.0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1490,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "8b73f980f505c909",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.qrzusername",
                "pt": "msg",
                "to": "qrzusername",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.qrzpassword",
                "pt": "msg",
                "to": "qrzpassword",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1420,
        "wires": [
            [
                "3e99a62a3c74b32c"
            ]
        ]
    },
    {
        "id": "9d67b8af1ecfca92",
        "type": "ui_switch",
        "z": "204548a488401a1b",
        "name": "5 Map Labels On/Off",
        "label": "Map Labels On/Off",
        "tooltip": "",
        "group": "54b59a095746559b",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1950,
        "y": 700,
        "wires": [
            [
                "841135cf0ddd6d1c"
            ]
        ]
    },
    {
        "id": "841135cf0ddd6d1c",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Map Labels",
        "func": "x = msg.payload\nglobal.set('maplabels',x)\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "60570ca612603af9",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1350,
        "y": 700,
        "wires": [
            [
                "543c8ffcfaaf7701"
            ]
        ]
    },
    {
        "id": "ea75d34b9868a160",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Map Labels On/Off",
        "info": "This switch turns labels on or off on the main logged QSO map.\n\nAs QSO's are mapped, sometimes during heavy rates, the map can get cluttered with pins and the label (band and mode) takes up space.\n\nIn contests that only one mode is allowed, you might want to turn this off.\n\nThe legend will show the color of each band for the marked pins.",
        "x": 1370,
        "y": 640,
        "wires": []
    },
    {
        "id": "0e4e1f6d0b6f1a82",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Set TTL for Map Markers",
        "info": "This flow sets the ttl (time to live) for map icons to live on the map.  \n\n",
        "x": 170,
        "y": 2040,
        "wires": []
    },
    {
        "id": "a41b305808137c29",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1370,
        "y": 2080,
        "wires": [
            [
                "6e48cbe3f5469ec6"
            ]
        ]
    },
    {
        "id": "3b83c4e82671e53a",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Lat & Lon Input",
        "info": "This flow gets the lat and lon input and allows great circle lines to be drawn from the QTH to each pin in the map.\n\nIf no lat and lon are input, the greatcircle lines are not drawn.",
        "x": 1160,
        "y": 2040,
        "wires": []
    },
    {
        "id": "93edb440e7f6c467",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrzkey",
                "pt": "global",
                "to": "payload.QRZDatabase.Session[0].Key[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "qrzkeyexpire",
                "pt": "global",
                "to": "payload.QRZDatabase.Session[0].SubExp[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1480,
        "wires": [
            [
                "9a414e8fd552ee88"
            ]
        ]
    },
    {
        "id": "9a414e8fd552ee88",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Verify Valid Key Non-Expire",
        "func": "let currentdate = msg.payload;\n\nlet qrzdate = global.get('qrzkeyexpire');\n\nlet expiredate = Date.parse(qrzdate);\n\nif (currentdate > expiredate )\n{\n    msg.payload = \"QRZ XML Key Has Expired - Enter In Your QRZ Username & Password Again\"\n    return msg;\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1480,
        "wires": [
            [
                "a6a12ef5e9b4d877"
            ]
        ]
    },
    {
        "id": "d99f186baf3ac355",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "7 Map Label Type Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "54b59a095746559b",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Band Only",
                "value": "bandonly",
                "type": "str"
            },
            {
                "label": "Band + Mode",
                "value": "bandmode",
                "type": "str"
            },
            {
                "label": "Mode Only",
                "value": "modeonly",
                "type": "str"
            },
            {
                "label": "Call Only",
                "value": "callonly",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1880,
        "y": 760,
        "wires": [
            [
                "2dde15a004f80010"
            ]
        ]
    },
    {
        "id": "2dde15a004f80010",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Map Label Type",
        "func": "x = msg.payload\nglobal.set('maplabeltype',x)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2140,
        "y": 760,
        "wires": [
            [
                "b931a7b4465d0df8"
            ]
        ]
    },
    {
        "id": "4a7ab19bd2fdaf09",
        "type": "ui_switch",
        "z": "204548a488401a1b",
        "name": "",
        "label": "Say Multi On/Off",
        "tooltip": "",
        "group": "4ef10134c121cf09",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2540,
        "y": 1380,
        "wires": [
            [
                "851fa5920b751886"
            ]
        ]
    },
    {
        "id": "851fa5920b751886",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Say Multi",
        "func": "x = msg.payload\nglobal.set('saymulti',x)\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "5584fe10df006594",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2090,
        "y": 1380,
        "wires": [
            [
                "289a920a73d6b6e2"
            ]
        ]
    },
    {
        "id": "0623273bd2a73945",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "2 Contest Type Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select Exchange Received",
        "group": "475c1eff5d97ffe5",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "US State",
                "value": "stateonly",
                "type": "str"
            },
            {
                "label": "County + State",
                "value": "countystate",
                "type": "str"
            },
            {
                "label": "Name + State",
                "value": "namestate",
                "type": "str"
            },
            {
                "label": "ARRL/RAC Sections",
                "value": "sections",
                "type": "str"
            },
            {
                "label": "Class + Section",
                "value": "classsection",
                "type": "str"
            },
            {
                "label": "Grid",
                "value": "grids",
                "type": "str"
            },
            {
                "label": "Zone",
                "value": "zones",
                "type": "str"
            },
            {
                "label": "Serial",
                "value": "serial",
                "type": "str"
            },
            {
                "label": "Power",
                "value": "power",
                "type": "str"
            },
            {
                "label": "Do Not Show Exchange",
                "value": "blank",
                "type": "str"
            },
            {
                "label": "Full Exchange",
                "value": "all",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 350,
        "y": 2340,
        "wires": [
            [
                "c55a8f8a7bb2ce67"
            ]
        ]
    },
    {
        "id": "0e6e723e86267438",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Contest Type",
        "info": "",
        "x": 310,
        "y": 2280,
        "wires": []
    },
    {
        "id": "c55a8f8a7bb2ce67",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Contest Type",
        "func": "let x = msg.payload\nglobal.set('contesttype',x)\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "4bd54f4532cfb4e4",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "887ee2eadc46df9a",
        "order": 3,
        "width": 6,
        "height": 2,
        "name": "3 Current Radio Names Text Box",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 740,
        "y": 800,
        "wires": []
    },
    {
        "id": "f9aa65c20f157f8e",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set payload to printout",
        "func": "let P1 = global.get(\"PC1\");\nlet P2 = global.get(\"PC2\");\nlet P3 = global.get(\"PC3\");\nlet P4 = global.get(\"PC4\");\nlet P5 = global.get(\"PC5\");\nlet P6 = global.get(\"PC6\");\n\nif (P1 == null)\n{\n    P1 = \"\"\n}\nif (P2 == null)\n{\n    P2 = \"\"\n}\nif (P3 == null)\n{\n    P3 = \"\"\n}\nif (P4 == null)\n{\n    P4 = \"\"\n}\nif (P5 == null)\n{\n    P5 = \"\"\n}\nif (P6 == null)\n{\n    P6 = \"\"\n}\n\nmsg.payload = \"Current PCs : \" + P1 + \"\\r\\n \" + P2 + \"\\r\\n \" + P3 + \"\\r\\n \" + P4 + \"\\r\\n \" + P5 + \"\\r\\n \" + P6\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 800,
        "wires": [
            [
                "4bd54f4532cfb4e4"
            ]
        ]
    },
    {
        "id": "b8502660ecb5eb37",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 800,
        "wires": [
            [
                "f9aa65c20f157f8e"
            ]
        ]
    },
    {
        "id": "57e3618bf14fa9ab",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Erase Current PC Names",
        "func": "global.set(\"PC1\",null);\nglobal.set(\"PC2\",null);\nglobal.set(\"PC3\",null);\nglobal.set(\"PC4\",null);\nglobal.set(\"PC5\",null);\nglobal.set(\"PC6\",null);\n\n\n\nmsg.payload = \"PC Names Have Been Reset\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 760,
        "wires": [
            [
                "848cb7d74a2a8ede"
            ]
        ]
    },
    {
        "id": "eeb023c41384541c",
        "type": "ui_button",
        "z": "204548a488401a1b",
        "name": "4 Clear All Computer Names",
        "group": "887ee2eadc46df9a",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Clear All Computer Names",
        "tooltip": "",
        "color": "#FFFFFF",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 760,
        "wires": [
            [
                "57e3618bf14fa9ab"
            ]
        ]
    },
    {
        "id": "52e8cb69fe249ce2",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "Contest Type Dropdown",
        "label": "",
        "tooltip": "",
        "place": "Select OP Sort Type",
        "group": "52728e3a5743376c",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "By Mults",
                "value": "mults",
                "type": "str"
            },
            {
                "label": "By QSOs",
                "value": "qsos",
                "type": "str"
            },
            {
                "label": "By Score",
                "value": "score",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1210,
        "y": 2340,
        "wires": [
            [
                "5540ea5a6de97dc7"
            ]
        ]
    },
    {
        "id": "6bc62a899e0c2a87",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "OP Competition Sort Type",
        "info": "",
        "x": 1210,
        "y": 2280,
        "wires": []
    },
    {
        "id": "5540ea5a6de97dc7",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Contest Type",
        "func": "x = msg.payload\nglobal.set('opsorttype',x)\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "d04c84d753d7918e",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 2380,
        "wires": [
            [
                "678916562d7de9f5"
            ]
        ]
    },
    {
        "id": "678916562d7de9f5",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Contest Type",
        "func": "let contesttype = global.get('contesttype')\n\nif (contesttype == null)\n{\n    global.set('contesttype','stateonly')\n    msg.payload = \"statesonly\"\n}\n\nmsg.payload = contesttype;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2380,
        "wires": [
            [
                "ccc80b81dfc99354"
            ]
        ]
    },
    {
        "id": "ccc80b81dfc99354",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "475c1eff5d97ffe5",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "1 Contest Type Textbox",
        "label": "Contest Type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 2380,
        "wires": []
    },
    {
        "id": "0960a2775584fa85",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1190,
        "y": 2380,
        "wires": [
            [
                "55b371fcdda16d59"
            ]
        ]
    },
    {
        "id": "55b371fcdda16d59",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get OP Comp Sort Type",
        "func": "opsorttype = global.get('opsorttype')\n\nif (opsorttype == null)\n{\n    global.set('opsorttype','qsos')\n    msg.payload = \"qsos\"\n}\n\nmsg.payload = opsorttype;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 2380,
        "wires": [
            [
                "2607254e9c8640f7"
            ]
        ]
    },
    {
        "id": "2607254e9c8640f7",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "52728e3a5743376c",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "OP Comp Sort Type Textbox",
        "label": "OP Comp Sort Type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1680,
        "y": 2380,
        "wires": []
    },
    {
        "id": "37883f2151c6aeb8",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1310,
        "y": 760,
        "wires": [
            [
                "1dfb81dda6b742b3"
            ]
        ]
    },
    {
        "id": "9677ae9555f53b24",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "3 1Q Per Hour Color Form",
        "label": "Q's Per 1 Hour Rates",
        "group": "c89d2b489a7ea747",
        "order": 6,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Low Rate (Red)",
                "value": "Q1hrlow",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "High Rate (Green)",
                "value": "Q1hrhigh",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "Q1hrlow": "",
            "Q1hrhigh": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1880,
        "y": 140,
        "wires": [
            [
                "b0d26d23f65e2f84"
            ]
        ]
    },
    {
        "id": "073dbb68c96aeacf",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "6 2Q Per Hour Color Form",
        "label": "Q's Per 2 Hour Rates",
        "group": "c89d2b489a7ea747",
        "order": 5,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Low Rate (Red)",
                "value": "Q2hrlow",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "High Rate (Green)",
                "value": "Q2hrhigh",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "Q2hrlow": "",
            "Q2hrhigh": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1880,
        "y": 340,
        "wires": [
            [
                "f2bbdfe4d64051e4"
            ]
        ]
    },
    {
        "id": "b0d26d23f65e2f84",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Global Q's Per Hour",
        "func": "let Q1hrlow = msg.payload.Q1hrlow;\nlet Q1hrhigh = msg.payload.Q1hrhigh;\n\nlet Q1hrmedlow = Q1hrlow + 1;\nlet Q1hrmedhigh = Q1hrhigh - 1;\n\nglobal.set('Q1hrlow',Q1hrlow);\nglobal.set('Q1hrmedlow',Q1hrmedlow);\nglobal.set('Q1hrmedhigh',Q1hrmedhigh);\nglobal.set('Q1hrhigh',Q1hrhigh);\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "aa49a893ac564a62",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Default Q's Per Hour If Not Set",
        "func": "let Q1hrlow = global.get('Q1hrlow');\nlet Q1hrmedlow = global.get('Q1hrmedlow');\nlet Q1hrmedhigh = global.get('Q1hrmedhigh');\nlet Q1hrhigh = global.get('Q1hrhigh');\nlet Q2hrlow = global.get('Q2hrlow');\nlet Q2hrmedlow = global.get('Q2hrmedlow');\nlet Q2hrmedhigh = global.get('Q2hrmedhigh');\nlet Q2hrhigh = global.get('Q2hrhigh');\n\nif (Q1hrlow == null || undefined || Q1hrhigh == null || undefined)\n{\n    Q1hrlow = 30;\n    Q1hrmedlow = 31;\n    Q1hrmedhigh = 119;\n    Q1hrhigh = 120;\n}\n\nif (Q2hrlow == null || undefined || Q2hrhigh == null || undefined)\n{\n    Q2hrlow = 60;\n    Q2hrmedlow = 61;\n    Q2hrmedhigh = 239;\n    Q2hrhigh = 240;\n}\n\n\n\nglobal.set('Q1hrlow',Q1hrlow);\nglobal.set('Q1hrmedlow',Q1hrmedlow);\nglobal.set('Q1hrmedhigh',Q1hrmedhigh);\nglobal.set('Q1hrhigh',Q1hrhigh);\n\nglobal.set('Q2hrlow',Q2hrlow);\nglobal.set('Q2hrmedlow',Q2hrmedlow);\nglobal.set('Q2hrmedhigh',Q2hrmedhigh);\nglobal.set('Q2hrhigh',Q2hrhigh);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "1958e488cd45fa7f",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1850,
        "y": 420,
        "wires": [
            [
                "aa49a893ac564a62"
            ]
        ]
    },
    {
        "id": "382b413af7329de3",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Set Q Hourly Rate for Green/Yellow/Red Stat Color",
        "info": "",
        "x": 1970,
        "y": 80,
        "wires": []
    },
    {
        "id": "f2bbdfe4d64051e4",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Global Q's Per Hour",
        "func": "let Q2hrlow = msg.payload.Q2hrlow;\nlet Q2hrhigh = msg.payload.Q2hrhigh;\n\nlet Q2hrmedlow = Q2hrlow + 1;\nlet Q2hrmedhigh = Q2hrhigh - 1;\n\nglobal.set('Q2hrlow',Q2hrlow);\nglobal.set('Q2hrmedlow',Q2hrmedlow);\nglobal.set('Q2hrmedhigh',Q2hrmedhigh);\nglobal.set('Q2hrhigh',Q2hrhigh);\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2190,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a44147bde4d3c26b",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "c89d2b489a7ea747",
        "order": 1,
        "width": 3,
        "height": 1,
        "name": "1 Q Low 1 Hour Text",
        "label": "1Hr Low Rate",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2320,
        "y": 180,
        "wires": []
    },
    {
        "id": "234f58c7059453d9",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1850,
        "y": 240,
        "wires": [
            [
                "5b28c89ebe3d5de5",
                "dc3f4a8f18178bfd",
                "a9728ea9c9567093",
                "43fc4c68ef5bf07a"
            ]
        ]
    },
    {
        "id": "6ebe16a171254a3b",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "c89d2b489a7ea747",
        "order": 2,
        "width": 3,
        "height": 1,
        "name": "2 Q High 1 Hour Text",
        "label": "1Hr High Rate",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2320,
        "y": 220,
        "wires": []
    },
    {
        "id": "5b28c89ebe3d5de5",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get 1Hr Low Rate",
        "func": "msg.payload = global.get('Q1hrlow')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 180,
        "wires": [
            [
                "a44147bde4d3c26b"
            ]
        ]
    },
    {
        "id": "dc3f4a8f18178bfd",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get 1Hr High Rate",
        "func": "msg.payload = global.get('Q1hrhigh')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 220,
        "wires": [
            [
                "6ebe16a171254a3b"
            ]
        ]
    },
    {
        "id": "a9728ea9c9567093",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get 2Hr Low Rate",
        "func": "msg.payload = global.get('Q2hrlow')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 260,
        "wires": [
            [
                "0c490a55cd9feb52"
            ]
        ]
    },
    {
        "id": "43fc4c68ef5bf07a",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get 2Hr High Rate",
        "func": "msg.payload = global.get('Q2hrhigh')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 300,
        "wires": [
            [
                "0a9cfccc31ee7434"
            ]
        ]
    },
    {
        "id": "0c490a55cd9feb52",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "c89d2b489a7ea747",
        "order": 3,
        "width": 3,
        "height": 1,
        "name": "4 Q Low 2 Hour Text",
        "label": "2Hr Low Rate",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2320,
        "y": 260,
        "wires": []
    },
    {
        "id": "0a9cfccc31ee7434",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "c89d2b489a7ea747",
        "order": 4,
        "width": 3,
        "height": 1,
        "name": "5 Q High 2 Hour Text",
        "label": "2Hr High Rate",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2320,
        "y": 300,
        "wires": []
    },
    {
        "id": "09b7c5267865b449",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Speak Multiplier On/Off",
        "info": "",
        "x": 2240,
        "y": 1320,
        "wires": []
    },
    {
        "id": "6a1c6be873105349",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "1 Online Scoreboard Form Input",
        "label": "",
        "group": "5e3039a0172f86b1",
        "order": 8,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Contest Name",
                "value": "contestname",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Chase Call 1",
                "value": "chasecall1",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Chase Call 2",
                "value": "chasecall2",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Chase Call 3",
                "value": "chasecall3",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Chase Call 4",
                "value": "chasecall4",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "contestname": "",
            "chasecall1": "",
            "chasecall2": "",
            "chasecall3": "",
            "chasecall4": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 2230,
        "y": 1660,
        "wires": [
            [
                "6c25416ba946de30"
            ]
        ]
    },
    {
        "id": "53b8d128ed86c659",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "contestname",
                "pt": "global",
                "to": "payload.contestname",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chasecall1",
                "pt": "global",
                "to": "payload.chasecall1",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chasecall2",
                "pt": "global",
                "to": "payload.chasecall2",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chasecall3",
                "pt": "global",
                "to": "payload.chasecall3",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chasecall4",
                "pt": "global",
                "to": "payload.chasecall4",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "chasecall5",
                "pt": "global",
                "to": "payload.chasecall5",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "f35662f39444454c",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Online Scoreboard Call Entry",
        "info": "",
        "x": 2220,
        "y": 1560,
        "wires": []
    },
    {
        "id": "42dd8e9dba4bcdf2",
        "type": "template",
        "z": "204548a488401a1b",
        "name": "Delete from radio",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from radio;",
        "output": "str",
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "b4520201b51afe74"
            ]
        ]
    },
    {
        "id": "45b435ab9c8504ec",
        "type": "template",
        "z": "204548a488401a1b",
        "name": "Delete from spots",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "delete from spots;",
        "output": "str",
        "x": 1110,
        "y": 220,
        "wires": [
            [
                "b4520201b51afe74"
            ]
        ]
    },
    {
        "id": "d73ffa2e2c4de937",
        "type": "inject",
        "z": "204548a488401a1b",
        "d": true,
        "name": "Every 15 Sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2680,
        "wires": [
            [
                "43cafa96373f7a37"
            ]
        ]
    },
    {
        "id": "43cafa96373f7a37",
        "type": "template",
        "z": "204548a488401a1b",
        "name": "SQL select points, multis & score",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "select total(points) as points, \ntotal(ismultiplier1+ismultiplier2+ismultiplier3) as multiplier, \ncount(distinct call) as totalqsos, \nCASE WHEN total(ismultiplier1+ismultiplier2+ismultiplier3) == 0\nTHEN total(points) \nELSE total(ismultiplier1+ismultiplier2+ismultiplier3) * total(points)\nEND as score\nfrom qsos;",
        "output": "str",
        "x": 540,
        "y": 2680,
        "wires": [
            [
                "78dee2cf25373ea4"
            ]
        ]
    },
    {
        "id": "78dee2cf25373ea4",
        "type": "sqlite",
        "z": "204548a488401a1b",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "N1MM QSOs",
        "x": 790,
        "y": 2680,
        "wires": [
            [
                "19d2bb692b64b3b8"
            ]
        ]
    },
    {
        "id": "2eb45f3457d57e54",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 2640,
        "wires": []
    },
    {
        "id": "19d2bb692b64b3b8",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "",
        "func": "let p = msg.payload[0].points\nlet m = msg.payload[0].multiplier;\nlet t = msg.payload[0].totalqsos;\nlet s = msg.payload[0].score;\n\nlet totalqsos = t.toString();\nlet multiplier = m.toString();\nlet points = p.toString();\nlet score = s.toString();\n\n\nmsg.payload = {\n    \"dynamicresults\":\n    {\n        \"contest\":\"QSOPARTY\",\n        \n        \"breakdown\":\n        [{\n             \"qso\":\n             [{\n                 \"_\":totalqsos,\n                 \"$\":\n                    {\n                        \"band\":\"total\",\n                        \"mode\":\"ALL\"\n                    }\n             }],\n             \"mult\":\n             [{\n                \"_\":multiplier,\n                \"$\":\n                    {\n                        \"band\":\"total\",\n                        \"mode\":\"ALL\"\n                    }\n             }],\n             \"point\":\n             [{\n                \"_\":points,\n                \"$\":\n                    {\n                        \"band\":\"total\",\n                        \"mode\":\"ALL\"\n                    }\n             }]\n        }],\n        \"score\":[score],\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 2680,
        "wires": [
            [
                "013e96aa75609da7",
                "65952b3351e52bca"
            ]
        ]
    },
    {
        "id": "013e96aa75609da7",
        "type": "xml",
        "z": "204548a488401a1b",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1110,
        "y": 2680,
        "wires": [
            [
                "2eb45f3457d57e54",
                "a31113a42bcb3b22"
            ]
        ]
    },
    {
        "id": "a31113a42bcb3b22",
        "type": "udp out",
        "z": "204548a488401a1b",
        "name": "Score XML Port 12062",
        "addr": "192.168.1.30",
        "iface": "",
        "port": "12062",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1320,
        "y": 2680,
        "wires": []
    },
    {
        "id": "18a1cdf97768c72a",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "QSO Entry Test Data Format",
        "info": "\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<note>\n\t<to>Nick</to>\n\t<from>Dave</from>\n\t<heading>Reminder</heading>\n\t<body>Update the website</body>\n</note>\n\n{\"note\":{\"$\":{},\"to\":[\"Nick\"],\"from\":[\"Dave\"],\"heading\":[\"Reminder\"],\"body\":[\"Update the website\"]}}\n\n\n{\"contactinfo\":{\"$\":{},\"app\":[app],\"contestname\":[contestname],\"heading\":[\"Reminder\"],\"body\":[\"Update the website\"]}}\n\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<contactinfo>\n    <app>N1MM</app>\n    <contestname>CWOPS</contestname>\n    <contestnr>73</contestnr>\n    <timestamp>2020-01-17 16 :43:38</timestamp>\n    <mycall>W2XYZ</mycall>\n    <band>3.5</band>\n    <rxfreq>352519</rxfreq>\n    <txfreq>352519</txfreq>\n    <operator></operator>\n    <mode>CW</mode>\n    <call>WlAW</call>\n    <countryprefix>K</countryprefix>\n    <wpxprefix>Wl</wpxprefix>\n    <stationprefix>W2XYZ</stationprefix>\n    <continent>NA</continent>\n    <snt>599</snt>\n    <sntnr>5</sntnr>\n    <rcv>599</rcv>\n    <rcvnr>0</rcvnr>\n    <gridsquare></gridsquare>\n    <exchangel></exchangel>\n    <section></section>\n    <comment></comment>\n    <qth></qth>\n    <name></name>\n    <power></power>\n    <misctext></misctext>\n    <zone>0</zone>\n    <prec></prec>\n    <ck>0</ck>\n    <ismultiplierl>l</ismultiplierl>\n    <ismultiplier2>0</ismultiplier2>\n    <ismultiplier3>0</ismultiplier3>\n    <points>l</points>\n    <radionr>l</radionr>\n    <run1run2>1<run1run2>\n    <RoverLocation></RoverLocation>\n    <RadioInterfaced>l</RadioInterfaced>\n    <NetworkedCompNr>0</NetworkedCompNr>\n    <IsOriginal>False</IsOriginal>\n    <NetBiosName></NetBiosName>\n    <IsRunQSO>0</IsRunQSO>\n    <StationName>CONTEST-PC</StationName>\n    <ID>a1b2c3d4e5f6g7h</ID>\n    <IsClaimedQso>True</IsClaimedQso>\n</contactinfo>",
        "x": 260,
        "y": 2640,
        "wires": []
    },
    {
        "id": "65952b3351e52bca",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 2600,
        "wires": []
    },
    {
        "id": "6c25416ba946de30",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Assign Global Vars",
        "func": "if (msg.payload.contestname == \"\")\n{\n    msg.payload.contestname = null\n}\nif (msg.payload.chasecall1 == \"\")\n{\n    msg.payload.chasecall1 = null\n}\nif (msg.payload.chasecall2 == \"\")\n{\n    msg.payload.chasecall2 = null\n}\nif (msg.payload.chasecall3 == \"\")\n{\n    msg.payload.chasecall3 = null\n}\nif (msg.payload.chasecall4 == \"\")\n{\n    msg.payload.chasecall4 = null\n}\nif (msg.payload.chasecall5 == \"\")\n{\n    msg.payload.chasecall5 = null\n}\n\nlet existingcontestname = global.get('contestname')\nlet existingchasecall1 = global.get('chasecall1')\nlet existingchasecall2 = global.get('chasecall2')\nlet existingchasecall3 = global.get('chasecall3')\nlet existingchasecall4 = global.get('chasecall4')\nlet existingchasecall5 = global.get('chasecall5')\n\n//nothing is entered but if existing is undefined result == null\nif (msg.payload.contestname == null && existingcontestname == undefined)\n{\n    msg.payload.contestname = null\n}\n//nothing is entered but if callsign exists then result = the existing callsign \nif (msg.payload.contestname == null && (existingcontestname != null || existingcontestname == null))\n{\n    msg.payload.contestname = existingcontestname\n}\n\n//nothing is entered but if existing is undefined result == null\nif (msg.payload.chasecall1 == null && existingchasecall1 == undefined)\n{\n    msg.payload.chasecall1 = null\n}\n//nothing is entered but if callsign exists then result = the existing callsign \nif (msg.payload.chasecall1 == null && (existingchasecall1 != null || existingchasecall1 == null))\n{\n    msg.payload.chasecall1 = existingchasecall1\n}\n\n//nothing is entered but if existing is undefined result == null\nif (msg.payload.chasecall2 == null && existingchasecall2 == undefined)\n{\n    msg.payload.chasecall2 = null\n}\n//nothing is entered but if callsign exists then result = the existing callsign \nif (msg.payload.chasecall2 == null && (existingchasecall2 != null || existingchasecall2 == null))\n{\n    msg.payload.chasecall2 = existingchasecall2\n}\n\n//nothing is entered but if existing is undefined result == null\nif (msg.payload.chasecall3 == null && existingchasecall3 == undefined)\n{\n    msg.payload.chasecall3 = null\n}\n//nothing is entered but if callsign exists then result = the existing callsign \nif (msg.payload.chasecall3 == null && (existingchasecall3 != null || existingchasecall3 == null))\n{\n    msg.payload.chasecall3 = existingchasecall3\n}\n\n//nothing is entered but if existing is undefined result == null\nif (msg.payload.chasecall4 == null && existingchasecall4 == undefined)\n{\n    msg.payload.chasecall4 = null\n}\n//nothing is entered but if callsign exists then result = the existing callsign \nif (msg.payload.chasecall4 == null && (existingchasecall4 != null || existingchasecall4 == null))\n{\n    msg.payload.chasecall4 = existingchasecall4\n}\n\n//nothing is entered but if existing is undefined result == null\nif (msg.payload.chasecall5 == null && existingchasecall5 == undefined)\n{\n    msg.payload.chasecall5 = null\n}\n//nothing is entered but if callsign exists then result = the existing callsign \nif (msg.payload.chasecall5 == null && (existingchasecall5 != null || existingchasecall5 == null))\n{\n    msg.payload.chasecall5 = existingchasecall5\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 1660,
        "wires": [
            [
                "0d5f928a68a24cca"
            ]
        ]
    },
    {
        "id": "959eb4e87a809c8d",
        "type": "ui_button",
        "z": "204548a488401a1b",
        "name": "7 Online Scoreboard Reset",
        "group": "5e3039a0172f86b1",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Reset All Fields",
        "tooltip": "",
        "color": "#FFFFFF",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 2280,
        "y": 1620,
        "wires": [
            [
                "f77b512adee68822"
            ]
        ]
    },
    {
        "id": "f77b512adee68822",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Reset to Undefined",
        "func": "global.set('contestname',null);\nglobal.set('chasecall1',null);\nglobal.set('chasecall2',null);\nglobal.set('chasecall3',null);\nglobal.set('chasecall4',null);\nglobal.set('chasecall5',null);\n\nmsg.payload.contestcall = \"\";\nmsg.payload.score_total = \"\";\nmsg.payload.qso_total = \"\";\nmsg.payload.mult_total = \"\";\nmsg.payload.qso_160 = \"\";\nmsg.payload.mult_160 = \"\";\nmsg.payload.qso_80 = \"\";\nmsg.payload.mult_80 = \"\";\nmsg.payload.qso_40 = \"\";\nmsg.payload.mult_40 = \"\";\nmsg.payload.qso_20 = \"\";\nmsg.payload.mult_20 = \"\";\nmsg.payload.qso_15 = \"\";\nmsg.payload.mult_15 = \"\";\nmsg.payload.qso_10 = \"\";\nmsg.payload.mult_10 = \"\";\nmsg.payload.last = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 1620,
        "wires": [
            [
                "2af9add8843cb280"
            ]
        ]
    },
    {
        "id": "f9e7825f50baf241",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "contestname",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 1800,
        "wires": [
            [
                "ed725a6ab2d77106",
                "b1897541b4842264"
            ]
        ]
    },
    {
        "id": "9cbd4e1f6df0b530",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "chasecall1",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 1840,
        "wires": [
            [
                "01abe21d44dec1e8"
            ]
        ]
    },
    {
        "id": "b952ed436e7ed3e1",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "chasecall2",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 1880,
        "wires": [
            [
                "04a1723a5fc42cca"
            ]
        ]
    },
    {
        "id": "ae17a37fe30e49e6",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "chasecall3",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 1920,
        "wires": [
            [
                "05353219a2a8076e"
            ]
        ]
    },
    {
        "id": "887559e33323fe73",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "chasecall4",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 1960,
        "wires": [
            [
                "f738a03c7e4b7641"
            ]
        ]
    },
    {
        "id": "f11dd8d593ab536f",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "chasecall5",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "e5841728e52de8cd",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1990,
        "y": 1900,
        "wires": [
            [
                "f9e7825f50baf241",
                "9cbd4e1f6df0b530",
                "b952ed436e7ed3e1",
                "ae17a37fe30e49e6",
                "887559e33323fe73",
                "f11dd8d593ab536f"
            ]
        ]
    },
    {
        "id": "ed725a6ab2d77106",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "5e3039a0172f86b1",
        "order": 1,
        "width": 2,
        "height": 1,
        "name": "2 Contestname Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2470,
        "y": 1800,
        "wires": []
    },
    {
        "id": "01abe21d44dec1e8",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "5e3039a0172f86b1",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "3 Chase Call1 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2470,
        "y": 1840,
        "wires": []
    },
    {
        "id": "04a1723a5fc42cca",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "5e3039a0172f86b1",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "4 Chase Call2 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2470,
        "y": 1880,
        "wires": []
    },
    {
        "id": "05353219a2a8076e",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "5e3039a0172f86b1",
        "order": 6,
        "width": 2,
        "height": 1,
        "name": "5 Chase Call3 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2470,
        "y": 1920,
        "wires": []
    },
    {
        "id": "f738a03c7e4b7641",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "5e3039a0172f86b1",
        "order": 3,
        "width": 2,
        "height": 1,
        "name": "6 Chase Call4 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2470,
        "y": 1960,
        "wires": []
    },
    {
        "id": "0d5f928a68a24cca",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "To Upper Case",
        "func": "if (msg.payload.contestname != null)\n{\n    msg.payload.contestname = msg.payload.contestname.toUpperCase();\n}\n\nif (msg.payload.chasecall1 != null)\n{\n    msg.payload.chasecall1 = msg.payload.chasecall1.toUpperCase();\n}\n\nif (msg.payload.chasecall2 != null)\n{\n    msg.payload.chasecall2 = msg.payload.chasecall2.toUpperCase();\n}\n\nif (msg.payload.chasecall3 != null)\n{\n    msg.payload.chasecall3 = msg.payload.chasecall3.toUpperCase();\n}\n\nif (msg.payload.chasecall4 != null)\n{\n    msg.payload.chasecall4 = msg.payload.chasecall4.toUpperCase();\n}\n\nif (msg.payload.chasecall5 != null)\n{\n    msg.payload.chasecall5 = msg.payload.chasecall5.toUpperCase();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2740,
        "y": 1660,
        "wires": [
            [
                "53b8d128ed86c659"
            ]
        ]
    },
    {
        "id": "2af9add8843cb280",
        "type": "link out",
        "z": "204548a488401a1b",
        "name": "Clear Online Scoreboard OUT",
        "mode": "link",
        "links": [
            "113bf358539c5697"
        ],
        "x": 2715,
        "y": 1620,
        "wires": []
    },
    {
        "id": "34d0d7fb15af09f5",
        "type": "ui_template",
        "z": "204548a488401a1b",
        "d": true,
        "group": "8fb11826e4a47fc9",
        "name": "Clock Toolbar",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toUTCString());\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n}\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1280,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "607a4a01765dac2a",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Clock Toolbar",
        "info": "",
        "x": 1270,
        "y": 360,
        "wires": []
    },
    {
        "id": "6b75028c49d07165",
        "type": "http request",
        "z": "204548a488401a1b",
        "name": "Get HamQTH XML Key",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.hamqth.com/xml.php?u={{payload.hamqthusername}}&p={{payload.hamqthpassword}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 610,
        "y": 1660,
        "wires": [
            [
                "7c6f7da8b7d97b61",
                "3f45a7c6ec16a996"
            ]
        ]
    },
    {
        "id": "7c6f7da8b7d97b61",
        "type": "xml",
        "z": "204548a488401a1b",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 810,
        "y": 1660,
        "wires": [
            [
                "3823be0dbdf63121"
            ]
        ]
    },
    {
        "id": "3823be0dbdf63121",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "Set Key",
        "rules": [
            {
                "t": "set",
                "p": "hamqthkey",
                "pt": "global",
                "to": "payload.HamQTH.session[0].session_id[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 1660,
        "wires": [
            [
                "0d40c71ac4ff5366",
                "555c125f3b6c175a"
            ]
        ]
    },
    {
        "id": "0dd24c827d1b816a",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Verify Valid Key Non-Expire",
        "func": "let currentdate = msg.payload;\n\nlet qrzdate = global.get('qrzkeyexpire');\n\nlet expiredate = Date.parse(qrzdate);\n\nif (currentdate > expiredate )\n{\n    msg.payload = \"QRZ XML Key Has Expired - Enter In Your QRZ Username & Password Again\"\n    return msg;\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1740,
        "wires": [
            [
                "b06a6e5ae771029b"
            ]
        ]
    },
    {
        "id": "58b7ad2c2227c8da",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Expired QRZ XML Key",
        "x": 1520,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "7aebf3871853a00b",
        "type": "ui_form",
        "z": "204548a488401a1b",
        "name": "5 HamQTH Database Login Form",
        "label": "",
        "group": "8a65c232b2637c6a",
        "order": 5,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "HamQTH Username",
                "value": "hamqthusername",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "HamQTH Password",
                "value": "hamqthpassword",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "hamqthusername": "",
            "hamqthpassword": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 1660,
        "wires": [
            [
                "7733a785981cccaf"
            ]
        ]
    },
    {
        "id": "28dc4ff641f22765",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Clear XML Login Data Notification",
        "x": 720,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "0938506f45932c09",
        "type": "ui_button",
        "z": "204548a488401a1b",
        "name": "6 Clear HamQTH XML Login Data",
        "group": "8a65c232b2637c6a",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Clear HamQTH XML Login Data",
        "tooltip": "",
        "color": "#FFFFFF",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 1720,
        "wires": [
            [
                "25a37e83faf39a30"
            ]
        ]
    },
    {
        "id": "25a37e83faf39a30",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Clear Key & Expire Date",
        "func": "global.set('hamqthkey', undefined);\nglobal.set('hamqthkeyexpire', undefined);\nglobal.set('hamqthusername', undefined);\nglobal.set('hamqthpassword', undefined);\n\nmsg.payload = \"HamQTH XML Login & Key Info Cleared\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1720,
        "wires": [
            [
                "28dc4ff641f22765"
            ]
        ]
    },
    {
        "id": "0d40c71ac4ff5366",
        "type": "switch",
        "z": "204548a488401a1b",
        "name": "HamQTH Key Null?",
        "property": "hamqthkey",
        "propertyType": "global",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 1660,
        "wires": [
            [
                "d6231223f2764362",
                "d4646ba2ec152a07"
            ],
            [
                "915e670e9b5acb07",
                "d4646ba2ec152a07"
            ]
        ]
    },
    {
        "id": "d6231223f2764362",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "Password Incorrect",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please Check Your Username & Password",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 1640,
        "wires": [
            [
                "f1129769746f1646"
            ]
        ]
    },
    {
        "id": "f1129769746f1646",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Check HamQTH Username & Password",
        "x": 1660,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "915e670e9b5acb07",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "Password Corrent",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Username & Password Accepted",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 1680,
        "wires": [
            [
                "39a307557da7d899"
            ]
        ]
    },
    {
        "id": "7733a785981cccaf",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Reset Keys",
        "func": "global.set('hamqthkey', undefined);\nglobal.set('hamqthword', undefined)\nglobal.set('hamqthkeyexpire', undefined);\nglobal.set('hamqthusername', undefined);\n\nglobal.set('hamqthusername', msg.payload.hamqthusername)\nglobal.set('hamqthpassword', msg.payload.hamqthpassword)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1660,
        "wires": [
            [
                "6b75028c49d07165",
                "e9e09dae49d0a60b"
            ]
        ]
    },
    {
        "id": "39a307557da7d899",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Correct HamQTH Username & Password",
        "x": 1640,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "9544490fd792f414",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "HamQTH Database Lookup Credentials",
        "info": "",
        "x": 230,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a2f3c88b6c8b39cf",
        "type": "http request",
        "z": "204548a488401a1b",
        "name": "Get QRZ XML Key",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://xmldata.qrz.com/xml/current/?username={{payload.qrzusername}};password={{payload.qrzpassword}};agent=q5.0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1490,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "b06a6e5ae771029b",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.qrzusername",
                "pt": "msg",
                "to": "qrzusername",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.qrzpassword",
                "pt": "msg",
                "to": "qrzpassword",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1740,
        "wires": [
            [
                "a2f3c88b6c8b39cf"
            ]
        ]
    },
    {
        "id": "a4d61c62f3d6aba4",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qrzkey",
                "pt": "global",
                "to": "payload.QRZDatabase.Session[0].Key[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "qrzkeyexpire",
                "pt": "global",
                "to": "payload.QRZDatabase.Session[0].SubExp[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1800,
        "wires": [
            [
                "aa278c160ce1ee9c"
            ]
        ]
    },
    {
        "id": "aa278c160ce1ee9c",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Verify Valid Key Non-Expire",
        "func": "let currentdate = msg.payload;\n\nlet qrzdate = global.get('qrzkeyexpire');\n\nlet expiredate = Date.parse(qrzdate);\n\nif (currentdate > expiredate )\n{\n    msg.payload = \"QRZ XML Key Has Expired - Enter In Your QRZ Username & Password Again\"\n    return msg;\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1800,
        "wires": [
            [
                "58b7ad2c2227c8da"
            ]
        ]
    },
    {
        "id": "e9e09dae49d0a60b",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3f45a7c6ec16a996",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1580,
        "wires": []
    },
    {
        "id": "555c125f3b6c175a",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 1580,
        "wires": []
    },
    {
        "id": "d4646ba2ec152a07",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1560,
        "wires": []
    },
    {
        "id": "48f5678a75ee7dd8",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "Distance Measurement",
        "label": "Distance Measurement",
        "tooltip": "",
        "place": "Select option",
        "group": "00919f6d1599ed5f",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Miles",
                "value": "miles",
                "type": "str"
            },
            {
                "label": "Kilometers",
                "value": "km",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1850,
        "y": 860,
        "wires": [
            [
                "3db58167aa103bc3"
            ]
        ]
    },
    {
        "id": "3db58167aa103bc3",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Distance Measurement",
        "func": "x = msg.payload\nglobal.set('distance_measurement',x)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 860,
        "wires": [
            [
                "70f9e6be765b3c55"
            ]
        ]
    },
    {
        "id": "1e90fa2382c0983d",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1370,
        "y": 860,
        "wires": [
            [
                "5eb3915f925752d7"
            ]
        ]
    },
    {
        "id": "8c3b78c9df29aa78",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Distance Measurement",
        "info": "",
        "x": 1340,
        "y": 820,
        "wires": []
    },
    {
        "id": "5eb3915f925752d7",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Distance Measurement",
        "func": "msg.payload = global.get('distance_measurement')\n\nif (msg.payload == undefined)\n{\n    msg.payload = \"miles\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 860,
        "wires": [
            [
                "48f5678a75ee7dd8"
            ]
        ]
    },
    {
        "id": "1dfb81dda6b742b3",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Map Label Type",
        "func": "msg.payload = global.get('maplabeltype')\n\nif (msg.payload == undefined)\n{\n    msg.payload = \"bandonly\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 760,
        "wires": [
            [
                "d99f186baf3ac355"
            ]
        ]
    },
    {
        "id": "b931a7b4465d0df8",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "54b59a095746559b",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "6 Map Label Type Text",
        "label": "Map Label Type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2420,
        "y": 760,
        "wires": []
    },
    {
        "id": "ad4c547076b09ade",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Skimmer Call",
        "func": "msg.payload = global.get('skimmercall')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 540,
        "wires": [
            [
                "dcfce735dacf33ca"
            ]
        ]
    },
    {
        "id": "2d7108e39910ef83",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1090,
        "y": 540,
        "wires": [
            [
                "ad4c547076b09ade"
            ]
        ]
    },
    {
        "id": "5bf605cc1f16fc83",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "a54ca6e34027cc56"
            ]
        ]
    },
    {
        "id": "a54ca6e34027cc56",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Contest Callsign",
        "func": "msg.payload = global.get('contestcallsign')\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 920,
        "wires": [
            [
                "cb4f88b22ac357e7"
            ]
        ]
    },
    {
        "id": "b6c621827fb49298",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Lookup Service",
        "func": "msg.payload = global.get('dblookup')\n\nif (msg.payload == undefined)\n{\n    msg.payload = \"hamdb\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 1020,
        "wires": [
            [
                "e35dbee7a81b43bc"
            ]
        ]
    },
    {
        "id": "91517249510af11d",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1450,
        "y": 1020,
        "wires": [
            [
                "b6c621827fb49298"
            ]
        ]
    },
    {
        "id": "70f9e6be765b3c55",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "00919f6d1599ed5f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Distance Measurement Type",
        "label": "Measurement",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2440,
        "y": 860,
        "wires": []
    },
    {
        "id": "276ebc80307eb098",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Multi OP or S02R Operation",
        "info": "",
        "x": 1460,
        "y": 1120,
        "wires": []
    },
    {
        "id": "cefa3aeae0e6035c",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1430,
        "y": 1180,
        "wires": [
            [
                "e0849adea5ad6c37"
            ]
        ]
    },
    {
        "id": "e0849adea5ad6c37",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Mult-OP or SO2R",
        "func": "msg.payload = global.get('category')\n\nif (msg.payload == undefined)\n{\n    msg.payload = \"multiop\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 1180,
        "wires": [
            [
                "63f29cb1261063bf"
            ]
        ]
    },
    {
        "id": "63f29cb1261063bf",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "6 Contest Category Dropdown",
        "label": "Contest Category",
        "tooltip": "",
        "place": "Choose Selection",
        "group": "475c1eff5d97ffe5",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Multi-OP",
                "value": "multiop",
                "type": "str"
            },
            {
                "label": "SO2R",
                "value": "so2r",
                "type": "str"
            },
            {
                "label": "SO1V",
                "value": "so1v",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1920,
        "y": 1180,
        "wires": [
            [
                "7d0c7ffca7a6660e"
            ]
        ]
    },
    {
        "id": "7d0c7ffca7a6660e",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "Set Category",
        "rules": [
            {
                "t": "set",
                "p": "category",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2170,
        "y": 1180,
        "wires": [
            [
                "69ad2b88f2e9296e"
            ]
        ]
    },
    {
        "id": "69ad2b88f2e9296e",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "475c1eff5d97ffe5",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "5 Contest Category Lookup Text",
        "label": "Contest Category",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2410,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b1897541b4842264",
        "type": "link out",
        "z": "204548a488401a1b",
        "name": "Contest Name OUT",
        "mode": "link",
        "links": [
            "469d9b45aa858755"
        ],
        "x": 2385,
        "y": 1720,
        "wires": []
    },
    {
        "id": "543c8ffcfaaf7701",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Map Label Status",
        "func": "msg.payload = global.get('maplabels')\n\nif (msg.payload == undefined)\n{\n    msg.payload = \"true\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 700,
        "wires": [
            [
                "9d67b8af1ecfca92"
            ]
        ]
    },
    {
        "id": "289a920a73d6b6e2",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Say Multi",
        "func": "msg.payload = global.get('saymulti')\n\nif (msg.payload == undefined)\n{\n    msg.payload = \"true\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2260,
        "y": 1380,
        "wires": [
            [
                "4a7ab19bd2fdaf09"
            ]
        ]
    },
    {
        "id": "8f4d88abb858be08",
        "type": "link out",
        "z": "204548a488401a1b",
        "name": "Clear Map OUT",
        "mode": "link",
        "links": [
            "f2b91a5dc28385a9"
        ],
        "x": 1635,
        "y": 80,
        "wires": []
    },
    {
        "id": "93aec0ede1f81f3a",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Clear Map",
        "func": "msg1 = {\"command\":{\"clear\":\"160M\"}};\nmsg2 = {\"command\":{\"clear\":\"80M\"}};\nmsg3 = {\"command\":{\"clear\":\"40M\"}};\nmsg4 = {\"command\":{\"clear\":\"20M\"}};\nmsg5 = {\"command\":{\"clear\":\"15M\"}};\nmsg6 = {\"command\":{\"clear\":\"10M\"}};\nmsg7 = {\"command\":{\"clear\":\"6M\"}};\nmsg8 = {\"command\":{\"clear\":\"2M\"}};\nmsg9 = {\"command\":{\"clear\":\"Other\"}}\n\nreturn msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9;\n\n",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 80,
        "wires": [
            [
                "8f4d88abb858be08"
            ],
            [
                "8f4d88abb858be08"
            ],
            [
                "8f4d88abb858be08"
            ],
            [
                "8f4d88abb858be08"
            ],
            [
                "8f4d88abb858be08"
            ],
            [
                "8f4d88abb858be08"
            ],
            [
                "8f4d88abb858be08"
            ],
            [
                "8f4d88abb858be08"
            ],
            [
                "8f4d88abb858be08"
            ]
        ]
    },
    {
        "id": "3347013ea6fb5df5",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "radiosport.live flow",
        "info": "",
        "x": 370,
        "y": 2820,
        "wires": []
    },
    {
        "id": "1d2e0efe1531b4eb",
        "type": "ui_switch",
        "z": "204548a488401a1b",
        "name": "1 Send Data",
        "label": "Send Data ",
        "tooltip": "",
        "group": "8e8e61b9e41627e8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 2880,
        "wires": [
            [
                "ddaf9e252db55cd5",
                "9704203146ffc3de"
            ]
        ]
    },
    {
        "id": "9704203146ffc3de",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Store Live Data",
        "func": "livedata = msg.payload;\n\nglobal.set('livedata',livedata);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 2880,
        "wires": [
            []
        ]
    },
    {
        "id": "ddaf9e252db55cd5",
        "type": "debug",
        "z": "204548a488401a1b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 2840,
        "wires": []
    },
    {
        "id": "fcf9a277e446974e",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "3 Power Drop Down",
        "label": "Power",
        "tooltip": "Select Your Power",
        "place": "Select Power",
        "group": "8e8e61b9e41627e8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "QRP",
                "value": "qrp",
                "type": "str"
            },
            {
                "label": "LP",
                "value": "lp",
                "type": "str"
            },
            {
                "label": "HP",
                "value": "hp",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 540,
        "y": 2940,
        "wires": [
            [
                "f8a20f731520adc2"
            ]
        ]
    },
    {
        "id": "fde6b716b846a1b9",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "5 Class Drop Down",
        "label": "Class",
        "tooltip": "",
        "place": "Select Class",
        "group": "8e8e61b9e41627e8",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "SOSB",
                "value": "sosb",
                "type": "str"
            },
            {
                "label": "SOAB",
                "value": "soab",
                "type": "str"
            },
            {
                "label": "SOUAB",
                "value": "souab",
                "type": "str"
            },
            {
                "label": "M/S",
                "value": "ms",
                "type": "str"
            },
            {
                "label": "M/2",
                "value": "m2",
                "type": "str"
            },
            {
                "label": "M/M",
                "value": "mm",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 470,
        "y": 2980,
        "wires": [
            [
                "a73ec5e28a6628d4"
            ]
        ]
    },
    {
        "id": "f8a20f731520adc2",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Store Power",
        "func": "power = msg.payload;\n\nglobal.set('power',power);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2940,
        "wires": [
            [
                "4f77896f8379011c"
            ]
        ]
    },
    {
        "id": "a73ec5e28a6628d4",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Store Class",
        "func": "opclass = msg.payload;\n\nglobal.set('class',opclass);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2980,
        "wires": [
            [
                "6d31d7c582997a74"
            ]
        ]
    },
    {
        "id": "a72c526751b53a5f",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Power",
        "func": "msg.payload = global.get('power');\n\nif (msg.payload == undefined);\n{\n    msg.payload = undefined\n    return msg;\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 2940,
        "wires": [
            [
                "fcf9a277e446974e"
            ]
        ]
    },
    {
        "id": "4f77896f8379011c",
        "type": "change",
        "z": "204548a488401a1b",
        "name": "Set Power",
        "rules": [
            {
                "t": "set",
                "p": "power",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 2940,
        "wires": [
            [
                "41a9dc57deb3d22d"
            ]
        ]
    },
    {
        "id": "41a9dc57deb3d22d",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "8e8e61b9e41627e8",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "2 Power Lookup Text",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1160,
        "y": 2940,
        "wires": []
    },
    {
        "id": "6d31d7c582997a74",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "8e8e61b9e41627e8",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "4 Class Lookup Text",
        "label": "Class",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 920,
        "y": 2980,
        "wires": []
    },
    {
        "id": "536753de214930c5",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Class",
        "func": "msg.payload = global.get('class');\n\nif (msg.payload == undefined);\n{\n    msg.payload = undefined\n    return msg;\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 2980,
        "wires": [
            [
                "fde6b716b846a1b9"
            ]
        ]
    },
    {
        "id": "301aa47149e30630",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 2940,
        "wires": [
            [
                "a72c526751b53a5f"
            ]
        ]
    },
    {
        "id": "1809c2b3d5f2e56c",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 2980,
        "wires": [
            [
                "536753de214930c5"
            ]
        ]
    },
    {
        "id": "ae73011dbaa0f1ee",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 2880,
        "wires": [
            [
                "dc4625ed1bfbf5df"
            ]
        ]
    },
    {
        "id": "dc4625ed1bfbf5df",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Status",
        "func": "msg.payload = global.get('livedata')\n\nif (msg.payload == undefined)\n{\n    msg.payload = \"true\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2880,
        "wires": [
            [
                "1d2e0efe1531b4eb"
            ]
        ]
    },
    {
        "id": "926305a899f616de",
        "type": "sqlite",
        "z": "204548a488401a1b",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "fixed",
        "sql": "SELECT DISTINCT mycall from qsos ORDER BY `timestamp`;",
        "name": "Choose latest Contest Callsign from DB",
        "x": 280,
        "y": 980,
        "wires": [
            [
                "88aac0d0567f84d0"
            ]
        ]
    },
    {
        "id": "4f3549d3d03b998b",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "Contest Callsign Dropdown",
        "label": "Contest Callsign",
        "tooltip": "",
        "place": "Select option",
        "group": "475c1eff5d97ffe5",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 780,
        "y": 980,
        "wires": [
            [
                "44ad2f416930e4e9"
            ]
        ]
    },
    {
        "id": "996242b2a362222b",
        "type": "sqlite",
        "z": "204548a488401a1b",
        "mydb": "54f43a06.56d7b4",
        "sqlquery": "fixed",
        "sql": "SELECT DISTINCT StationName from radio ORDER BY `timestamp`;",
        "name": "Choose PCs from DB",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "8f87ecfb66cec63d"
            ]
        ]
    },
    {
        "id": "3160a3cf965792b6",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "Radio3",
        "label": "Radio3",
        "tooltip": "",
        "place": "",
        "group": "887ee2eadc46df9a",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "radio3",
        "topicType": "str",
        "className": "",
        "x": 660,
        "y": 440,
        "wires": [
            [
                "92906228f23e7753"
            ]
        ]
    },
    {
        "id": "88aac0d0567f84d0",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "change to options",
        "func": "msg.options=\"\";\nmsg.options = msg.payload[0][\"mycall\"];\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 980,
        "wires": [
            [
                "4f3549d3d03b998b"
            ]
        ]
    },
    {
        "id": "52b9731345e98156",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "Radio2",
        "label": "Radio2",
        "tooltip": "",
        "place": "",
        "group": "887ee2eadc46df9a",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "radio2",
        "topicType": "str",
        "className": "",
        "x": 660,
        "y": 400,
        "wires": [
            [
                "92906228f23e7753"
            ]
        ]
    },
    {
        "id": "45487adfd2506609",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "Radio1",
        "label": "Radio1",
        "tooltip": "",
        "place": "",
        "group": "887ee2eadc46df9a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "radio1",
        "topicType": "str",
        "className": "",
        "x": 660,
        "y": 360,
        "wires": [
            [
                "92906228f23e7753"
            ]
        ]
    },
    {
        "id": "0310b67c0342c959",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "Radio4",
        "label": "Radio4",
        "tooltip": "",
        "place": "",
        "group": "887ee2eadc46df9a",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "radio4",
        "topicType": "str",
        "className": "",
        "x": 660,
        "y": 480,
        "wires": [
            [
                "92906228f23e7753"
            ]
        ]
    },
    {
        "id": "131a5c94a9d2d0e6",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "Radio5",
        "label": "Radio5",
        "tooltip": "",
        "place": "",
        "group": "887ee2eadc46df9a",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "radio5",
        "topicType": "str",
        "className": "",
        "x": 660,
        "y": 520,
        "wires": [
            [
                "92906228f23e7753"
            ]
        ]
    },
    {
        "id": "8f87ecfb66cec63d",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "change to options",
        "func": "let length=msg.payload.length;\nmsg.options =[];\nfor (let i=0;i=length-1;i++){\n    msg.options.push(msg.payload[i].StationName)\n}\nmsg.payload={};\nlet P1 = global.get(\"PC1\");\nlet P2 = global.get(\"PC2\");\nlet P3 = global.get(\"PC3\");\nlet P4 = global.get(\"PC4\");\nlet P5 = global.get(\"PC5\");\nlet P6 = global.get(\"PC6\");\nlet PCs = global.get(\"PCs\");\nif (P1 == null) {\n    P1 = \"\"\n}\nif (P2 == null) {\n    P2 = \"\"\n}\nif (P3 == null) {\n    P3 = \"\"\n}\nif (P4 == null) {\n    P4 = \"\"\n}\nif (P5 == null) {\n    P5 = \"\"\n}\nif (P6 == null) {\n    P6 = \"\"\n}\n\nmsg.radios = {\"radio1\":P1,\"radio2\":P2,\"radio3\":P3,\"radio4\":P4,\"radio5\":P5,\"radio6\":P6};\nmsg.options.push(P1,P2,P3,P4,P5,P6,PCs)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 360,
        "wires": [
            [
                "45487adfd2506609",
                "52b9731345e98156",
                "3160a3cf965792b6",
                "0310b67c0342c959",
                "131a5c94a9d2d0e6",
                "e16bc4a1666da6df"
            ]
        ]
    },
    {
        "id": "e16bc4a1666da6df",
        "type": "ui_dropdown",
        "z": "204548a488401a1b",
        "name": "Radio6",
        "label": "Radio6",
        "tooltip": "",
        "place": "",
        "group": "887ee2eadc46df9a",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "radio6",
        "topicType": "str",
        "className": "",
        "x": 660,
        "y": 560,
        "wires": [
            [
                "92906228f23e7753"
            ]
        ]
    },
    {
        "id": "92906228f23e7753",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Set Global PC Names",
        "func": "\nif (msg.payload != \"\"){\n    if (msg.topic==\"radio1\"){\n        let PC1 = msg.payload\n        global.set(\"PC1\",PC1)\n    }\n    if (msg.topic == \"radio2\")\n    {\n        let PC2 = msg.payload\n        global.set(\"PC2\",PC2)\n    }\n\n    if (msg.topic != \"radio3\")\n    {\n        let PC3 = msg.payload\n        global.set(\"PC3\",PC3)\n    }\n\n    if (msg.topic == \"radio4\")\n    {\n        let PC4 = msg.payload\n        global.set(\"PC4\",PC4)\n    }\n\n    if (msg.topic == \"radio5\")\n    {\n        let PC5 = msg.payload\n        global.set(\"PC5\",PC5)\n    }\n\n    if (msg.topic== \"radio6\")\n    {\n        let PC6 = msg.payload\n        global.set(\"PC6\",PC6)\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "6e559dd79c64492f",
        "type": "ui_switch",
        "z": "204548a488401a1b",
        "name": "",
        "label": "Great Circle Lines On/Off",
        "tooltip": "",
        "group": "4ef10134c121cf09",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2310,
        "y": 1500,
        "wires": [
            [
                "ace109ff1f054325"
            ]
        ]
    },
    {
        "id": "ace109ff1f054325",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Great Circle Lines On/Off",
        "func": "x = msg.payload\nglobal.set('greatcirclelines',x)\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2590,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "63171c22105ccdfd",
        "type": "inject",
        "z": "204548a488401a1b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1810,
        "y": 1500,
        "wires": [
            [
                "d424d57bdf57571e"
            ]
        ]
    },
    {
        "id": "3e1254ec4b44dfdb",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Turn Great Circle Lines On/Off",
        "info": "",
        "x": 1980,
        "y": 1440,
        "wires": []
    },
    {
        "id": "d424d57bdf57571e",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "Get Great Circle Lines",
        "func": "msg.payload = global.get('greatcirclelines')\n\nif (msg.payload == undefined)\n{\n    msg.payload = \"true\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 1500,
        "wires": [
            [
                "6e559dd79c64492f"
            ]
        ]
    },
    {
        "id": "959afb92ae4627a2",
        "type": "comment",
        "z": "204548a488401a1b",
        "name": "Display Version",
        "info": "",
        "x": 240,
        "y": 3060,
        "wires": []
    },
    {
        "id": "53cb4e25bcce6124",
        "type": "exec",
        "z": "204548a488401a1b",
        "command": "grep -oP 'version\\\"\\: \\K.*' .node-red/projects/Node-Red-Contesting-Dashboard/package.json ",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Local Verison",
        "x": 300,
        "y": 3140,
        "wires": [
            [
                "57be1bc1ba6c2bd1"
            ],
            [],
            []
        ]
    },
    {
        "id": "57be1bc1ba6c2bd1",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "71cb3368617e6c9e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current Version",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1000,
        "y": 3120,
        "wires": []
    },
    {
        "id": "579f0e6d14d806e4",
        "type": "exec",
        "z": "204548a488401a1b",
        "command": "",
        "addpay": "command",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Mater Version",
        "x": 1020,
        "y": 3180,
        "wires": [
            [
                "e4ae56a0458ac958"
            ],
            [],
            []
        ]
    },
    {
        "id": "e4ae56a0458ac958",
        "type": "ui_text",
        "z": "204548a488401a1b",
        "group": "71cb3368617e6c9e",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Latest Version",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1200,
        "y": 3160,
        "wires": []
    },
    {
        "id": "7d59e4c6ce32fae2",
        "type": "ui_switch",
        "z": "204548a488401a1b",
        "name": "Rolling Release",
        "label": "Rolling Release,",
        "tooltip": "If this is on, you will receive updates on a rolling release schedule. Note if you would like stability, plesae do not turn this on.",
        "group": "71cb3368617e6c9e",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "dev",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "master",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 260,
        "y": 3280,
        "wires": [
            [
                "24d322e1499e8cc4"
            ]
        ]
    },
    {
        "id": "3fa13575026e339c",
        "type": "exec",
        "z": "204548a488401a1b",
        "command": "",
        "addpay": "command",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Switch to Rolling Release",
        "x": 550,
        "y": 3340,
        "wires": [
            [],
            [
                "5ad7d8c2de3f86c7"
            ],
            []
        ]
    },
    {
        "id": "26b11bc96d8e246d",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "dialog",
        "displayTime": "15",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Please confirm that you would like to change versions of the node-red dashboard. Note this will restart node-red.",
        "name": "",
        "x": 610,
        "y": 3280,
        "wires": [
            [
                "857ecd69d5b73204"
            ]
        ]
    },
    {
        "id": "1ac8dad20963d18a",
        "type": "template",
        "z": "204548a488401a1b",
        "name": "Checkout Command",
        "field": "command",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "cd .node-red/projects/Node-Red-Contesting-Dashboard && git checkout {{{global.branch}}}",
        "output": "str",
        "x": 320,
        "y": 3340,
        "wires": [
            [
                "3fa13575026e339c"
            ]
        ]
    },
    {
        "id": "2df2850aa9ef955a",
        "type": "template",
        "z": "204548a488401a1b",
        "name": "Find Version Command",
        "field": "command",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "curl -sL https://raw.githubusercontent.com/kylekrieg/Node-Red-Contesting-Dashboard/{{{payload}}}/package.json | grep -oP \"\\\"version\\\"\\: \\K.*\"",
        "output": "str",
        "x": 810,
        "y": 3180,
        "wires": [
            [
                "579f0e6d14d806e4"
            ]
        ]
    },
    {
        "id": "857ecd69d5b73204",
        "type": "switch",
        "z": "204548a488401a1b",
        "name": "OK?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 3280,
        "wires": [
            [
                "1ac8dad20963d18a"
            ],
            [
                "5f7e1de47f37afaf"
            ]
        ]
    },
    {
        "id": "5ad7d8c2de3f86c7",
        "type": "ui_toast",
        "z": "204548a488401a1b",
        "position": "bottom right",
        "displayTime": "15",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Error with Switch Please restart node-red manually",
        "name": "",
        "x": 780,
        "y": 3340,
        "wires": []
    },
    {
        "id": "484e6b528545ba05",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "string formatting",
        "func": "msg.payload=msg.payload.trim();\nmsg.break=\"Break\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 3200,
        "wires": [
            [
                "2df2850aa9ef955a",
                "7d59e4c6ce32fae2"
            ]
        ]
    },
    {
        "id": "5f7e1de47f37afaf",
        "type": "exec",
        "z": "204548a488401a1b",
        "command": "cd $HOME/.node-red/projects/Node-Red-Contesting-Dashboard && git branch --show-current || awk $1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Find Current Branch Name",
        "x": 340,
        "y": 3200,
        "wires": [
            [
                "484e6b528545ba05"
            ],
            [],
            []
        ]
    },
    {
        "id": "24d322e1499e8cc4",
        "type": "function",
        "z": "204548a488401a1b",
        "name": "brnach choice",
        "func": "\nglobal.set(\"branch\", msg.payload);\nif (msg.break==\"Break\"){\n    return;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 3280,
        "wires": [
            [
                "26b11bc96d8e246d"
            ]
        ]
    },
    {
        "id": "a6c13f77b15cc2d8",
        "type": "link in",
        "z": "204548a488401a1b",
        "name": "UI_Refresh",
        "links": [
            "3047a9ba16e10212"
        ],
        "x": 115,
        "y": 3140,
        "wires": [
            [
                "53cb4e25bcce6124",
                "5f7e1de47f37afaf"
            ]
        ]
    },
    {
        "id": "1f45eb9a.6f2614",
        "type": "tcp request",
        "z": "bd8a446b999750f9",
        "name": "NO DUPS VE7CC",
        "server": "dxc.ve7cc.net",
        "port": "23",
        "out": "sit",
        "ret": "buffer",
        "splitc": " ",
        "x": 850,
        "y": 320,
        "wires": [
            [
                "92740895.fefa38"
            ]
        ]
    },
    {
        "id": "c33632d.535ced",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Send Call",
        "func": "let call = global.get('skimmercall')\nmsg.payload = call+'\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "1f45eb9a.6f2614"
            ]
        ]
    },
    {
        "id": "92740895.fefa38",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "UTF8",
        "func": "msg.payload=msg.payload.toString('UTF8');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "dca4380d.f27d08",
                "faa25645f7481b44"
            ]
        ]
    },
    {
        "id": "bdd14b96.c32268",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Disconnect",
        "func": "msg.payload = 'bye\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 280,
        "wires": [
            [
                "1f45eb9a.6f2614"
            ]
        ]
    },
    {
        "id": "dca4380d.f27d08",
        "type": "switch",
        "z": "bd8a446b999750f9",
        "name": "DX de",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "BEACON",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "NCDXF",
                "vt": "str"
            },
            {
                "t": "regex",
                "v": "DX de",
                "vt": "str",
                "case": false
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 1170,
        "y": 320,
        "wires": [
            [
                "3bbc288a.102268"
            ],
            [
                "3bbc288a.102268"
            ],
            [
                "007dc6753e62a4e5"
            ],
            [
                "c7e59d9b.a362d"
            ]
        ]
    },
    {
        "id": "a7b1f6ab.793a98",
        "type": "comment",
        "z": "bd8a446b999750f9",
        "name": "CW Skim Raw Out",
        "info": "",
        "x": 1690,
        "y": 40,
        "wires": []
    },
    {
        "id": "153c9aaf.be2785",
        "type": "comment",
        "z": "bd8a446b999750f9",
        "name": "w3lpl.net:7373 - With Dups",
        "info": "",
        "x": 870,
        "y": 220,
        "wires": []
    },
    {
        "id": "d6c40087.76579",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Send Call",
        "func": "let call = global.get('skimmercall')\nmsg.payload = call+'\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 320,
        "wires": [
            [
                "dc943c3e.fcfb7"
            ]
        ]
    },
    {
        "id": "dc943c3e.fcfb7",
        "type": "delay",
        "z": "bd8a446b999750f9",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 620,
        "y": 320,
        "wires": [
            [
                "1f45eb9a.6f2614"
            ]
        ]
    },
    {
        "id": "b699b75c.199d28",
        "type": "comment",
        "z": "bd8a446b999750f9",
        "name": "dxc.nc7j.com:23 - Skimmer Only",
        "info": "",
        "x": 890,
        "y": 180,
        "wires": []
    },
    {
        "id": "ea898f38.00b13",
        "type": "comment",
        "z": "bd8a446b999750f9",
        "name": "dxc.ve7cc.net:23 - Skimmer no Dups",
        "info": "",
        "x": 900,
        "y": 260,
        "wires": []
    },
    {
        "id": "a8c5ae34.4c595",
        "type": "inject",
        "z": "bd8a446b999750f9",
        "name": "KA Every 5 Mins",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 240,
        "wires": [
            [
                "cd14107d.014f9"
            ]
        ]
    },
    {
        "id": "cd14107d.014f9",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "'\\r\\n' Inject",
        "func": "msg.payload = '\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 240,
        "wires": [
            [
                "1f45eb9a.6f2614"
            ]
        ]
    },
    {
        "id": "64a3cfee.f2795",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "No Dups Connect RBN",
        "group": "089f422fb01043ec",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Connect Skimmer NO Dupes",
        "tooltip": "Connect to Cluster",
        "color": "",
        "bgcolor": "Green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 320,
        "wires": [
            [
                "c33632d.535ced",
                "d6c40087.76579"
            ]
        ]
    },
    {
        "id": "c7e59d9b.a362d",
        "type": "ui_text",
        "z": "bd8a446b999750f9",
        "group": "089f422fb01043ec",
        "order": 4,
        "width": 12,
        "height": 3,
        "name": "Skimmer Cluster No Dupe Output",
        "label": "No Dups Output",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1480,
        "y": 360,
        "wires": []
    },
    {
        "id": "4e828cc3.012de4",
        "type": "ui_table",
        "z": "bd8a446b999750f9",
        "group": "089f422fb01043ec",
        "name": "CW Skimmer Spots with No Dupes",
        "order": 1,
        "width": 12,
        "height": 6,
        "columns": [
            {
                "field": "freq",
                "title": "Freq",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "call",
                "title": "Call",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "comment",
                "title": "Comment",
                "width": "175",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1900,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3bbc288a.102268",
        "type": "debug",
        "z": "bd8a446b999750f9",
        "name": "Contains BEACON",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 260,
        "wires": []
    },
    {
        "id": "2ecf905e890b9caf",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Table Format",
        "func": "let spot = msg.payload\n\nlet freq = spot.freq;\nlet call = spot.call;\nlet comment = spot.comment;\nlet time = spot.time;\n\n\nreturn {payload:{\n    command:\"addData\",\n    arguments:[\n        {\n            freq:freq,call:call,comment:comment,time:time\n        },\n        true\n    ],\n    returnPromise:true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 300,
        "wires": [
            [
                "4e828cc3.012de4"
            ]
        ]
    },
    {
        "id": "007dc6753e62a4e5",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Format Spot",
        "func": "let spot = msg.payload\nlet regex1 = /:/gm;\nlet regex2 = /\\-.*$/gm;\nlet regex3 = /\\/.*$/gm;\n\nlet de1 = spot.toString().substr(6,10);\nlet de2 = de1.trimRight();\nlet de3 = de2.replace(regex2,'');\nlet de4 = de3.replace(regex1,'');\nlet de = de4.replace(regex3,'');\nlet freq = spot.toString().substr(17,9).trimRight();\n//let freq = freqx.trimRight();\nlet call = spot.toString().substr(26,8).trimRight();\n//let call = callx.trimRight();\nlet comment = spot.toString().substr(39,25);\nlet time = spot.toString().substr(70,5);\nlet calllength = call.length;\nlet type = \"spot\";\n\nreturn {payload : {de:de,type:type,freq:freq,call:call,comment:comment,time:time,calllength:calllength}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 300,
        "wires": [
            [
                "2ecf905e890b9caf",
                "768dc6ddbf584637",
                "8b67a949f2e70ade"
            ]
        ]
    },
    {
        "id": "faa25645f7481b44",
        "type": "debug",
        "z": "bd8a446b999750f9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 220,
        "wires": []
    },
    {
        "id": "768dc6ddbf584637",
        "type": "debug",
        "z": "bd8a446b999750f9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 160,
        "wires": []
    },
    {
        "id": "828d6cbb9bd8790b",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "Disconnect RBN",
        "group": "089f422fb01043ec",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Disconnect Skimmer",
        "tooltip": "Connect to Cluster",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 280,
        "wires": [
            [
                "bdd14b96.c32268"
            ]
        ]
    },
    {
        "id": "7c9fbe89fc227b77",
        "type": "comment",
        "z": "bd8a446b999750f9",
        "name": "Process Flow",
        "info": "Spot comes into the flow via telnet\n\nSpot is broken out via properties\n - DE station\n - Spot station\n - Freq\n - Comment\n - Time\n\nIf spot = contest callsign\n - Send DE station through XML to get lat & lon\n - Map DE station on map with color\n\nSpot is run through XML to get lat and lon\n\nIf spot staton is withing Geofence\n - Send DE station through XML to get lat and lon\n - Map DE station on map with color\n\n \n",
        "x": 250,
        "y": 20,
        "wires": []
    },
    {
        "id": "d5736e14014e7e71",
        "type": "tcp request",
        "z": "bd8a446b999750f9",
        "name": "Wtih DUPS W3LPL",
        "server": "w3lpl.net",
        "port": "7373",
        "out": "sit",
        "ret": "buffer",
        "splitc": " ",
        "x": 810,
        "y": 620,
        "wires": [
            [
                "fa3c6d75a781222e"
            ]
        ]
    },
    {
        "id": "dc4467b4a3e34448",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Send Call",
        "func": "let call = global.get('skimmercall')\nmsg.payload = call+'\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 660,
        "wires": [
            [
                "d5736e14014e7e71"
            ]
        ]
    },
    {
        "id": "fa3c6d75a781222e",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "UTF8",
        "func": "msg.payload=msg.payload.toString('UTF8');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "a94f1c72a896ec4f",
                "02ff1171cdb9bf81"
            ]
        ]
    },
    {
        "id": "44f33dc5166cd510",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Disconnect",
        "func": "msg.payload = 'bye\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 580,
        "wires": [
            [
                "d5736e14014e7e71"
            ]
        ]
    },
    {
        "id": "a94f1c72a896ec4f",
        "type": "switch",
        "z": "bd8a446b999750f9",
        "name": "DX de",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "BEACON",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "NCDXF",
                "vt": "str"
            },
            {
                "t": "regex",
                "v": "DX de",
                "vt": "str",
                "case": false
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 1170,
        "y": 620,
        "wires": [
            [
                "42ebd981310e69f8"
            ],
            [
                "42ebd981310e69f8"
            ],
            [
                "2c10ebb5203d3319"
            ],
            [
                "4b7a2c2227febc65"
            ]
        ]
    },
    {
        "id": "b053a17c956fab5f",
        "type": "comment",
        "z": "bd8a446b999750f9",
        "name": "w3lpl.net:7373 - With Dups",
        "info": "",
        "x": 870,
        "y": 520,
        "wires": []
    },
    {
        "id": "916b557836ad4d49",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Send Call",
        "func": "let call = global.get('skimmercall')\nmsg.payload = call+'\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 620,
        "wires": [
            [
                "dfd1245aaeb60337"
            ]
        ]
    },
    {
        "id": "dfd1245aaeb60337",
        "type": "delay",
        "z": "bd8a446b999750f9",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 620,
        "y": 620,
        "wires": [
            [
                "d5736e14014e7e71"
            ]
        ]
    },
    {
        "id": "c99fde1fde164b97",
        "type": "comment",
        "z": "bd8a446b999750f9",
        "name": "dxc.nc7j.com:23 - Skimmer Only",
        "info": "",
        "x": 890,
        "y": 480,
        "wires": []
    },
    {
        "id": "47bda6f7f914d0ac",
        "type": "comment",
        "z": "bd8a446b999750f9",
        "name": "dxc.ve7cc.net:23 - Skimmer no Dups",
        "info": "",
        "x": 900,
        "y": 560,
        "wires": []
    },
    {
        "id": "2515cd17bea570a0",
        "type": "inject",
        "z": "bd8a446b999750f9",
        "name": "KA Every 5 Mins",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 540,
        "wires": [
            [
                "a60d412613a646a7"
            ]
        ]
    },
    {
        "id": "a60d412613a646a7",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "'\\r\\n' Inject",
        "func": "msg.payload = '\\r\\n'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 540,
        "wires": [
            [
                "d5736e14014e7e71"
            ]
        ]
    },
    {
        "id": "47388dcfb09b5146",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "With Dups Connect RBN",
        "group": "b5c190b1c6ec4907",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Connect Skimmer With Dupes",
        "tooltip": "Connect to Cluster",
        "color": "",
        "bgcolor": "Green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "dc4467b4a3e34448",
                "916b557836ad4d49"
            ]
        ]
    },
    {
        "id": "4b7a2c2227febc65",
        "type": "ui_text",
        "z": "bd8a446b999750f9",
        "group": "b5c190b1c6ec4907",
        "order": 4,
        "width": 12,
        "height": 3,
        "name": "Skimmer Cluster Dupe Output",
        "label": "Dups Output",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1490,
        "y": 860,
        "wires": []
    },
    {
        "id": "c3bc961d0c04b8a5",
        "type": "ui_table",
        "z": "bd8a446b999750f9",
        "group": "b5c190b1c6ec4907",
        "name": "CW Skimmer Spots with Dupes",
        "order": 1,
        "width": 12,
        "height": 6,
        "columns": [
            {
                "field": "freq",
                "title": "Freq",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "call",
                "title": "Call",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "comment",
                "title": "Comment",
                "width": "175",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 2010,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "42ebd981310e69f8",
        "type": "debug",
        "z": "bd8a446b999750f9",
        "name": "Contains BEACON",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 560,
        "wires": []
    },
    {
        "id": "370c72e23c2e0186",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Table Format",
        "func": "let freq = msg.payload.freq;\nlet call = msg.payload.call;\nlet comment = msg.payload.comment;\nlet time = msg.payload.time;\n\n\nreturn {payload:{\n    command:\"addData\",\n    arguments:[\n        {\n            freq:freq,call:call,comment:comment,time:time\n        },\n        true\n    ],\n    returnPromise:true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 600,
        "wires": [
            [
                "c3bc961d0c04b8a5",
                "3c9f5ebc0b376e95"
            ]
        ]
    },
    {
        "id": "2c10ebb5203d3319",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Format Spot",
        "func": "let spot = msg.payload\nlet regex1 = /:/gm;\nlet regex2 = /\\-.*$/gm;\nlet regex3 = /\\/.*$/gm;\n\nlet de1 = spot.toString().substr(6,10);\nlet de2 = de1.trimRight();\nlet de3 = de2.replace(regex2,'');\nlet de4 = de3.replace(regex1,'');\nlet de = de4.replace(regex3,'');\nlet freq = spot.toString().substr(17,9).trimRight();\n//let freq = freqx.trimRight();\nlet call = spot.toString().substr(26,8).trimRight();\n//let call = callx.trimRight();\nlet comment = spot.toString().substr(39,25);\nlet time = spot.toString().substr(70,5);\nlet calllength = call.length;\nlet type = \"spot\";\n\nreturn {payload : {de:de,type:type,freq:freq,call:call,comment:comment,time:time,calllength:calllength}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 600,
        "wires": [
            [
                "370c72e23c2e0186",
                "d9d2281122964125",
                "de8b711aa20ad228"
            ]
        ]
    },
    {
        "id": "02ff1171cdb9bf81",
        "type": "debug",
        "z": "bd8a446b999750f9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 560,
        "wires": []
    },
    {
        "id": "d9d2281122964125",
        "type": "debug",
        "z": "bd8a446b999750f9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 520,
        "wires": []
    },
    {
        "id": "e16dd817858e8974",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "Disconnect RBN",
        "group": "b5c190b1c6ec4907",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Disconnect Skimmer",
        "tooltip": "Connect to Cluster",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 580,
        "wires": [
            [
                "44f33dc5166cd510"
            ]
        ]
    },
    {
        "id": "8b67a949f2e70ade",
        "type": "link out",
        "z": "bd8a446b999750f9",
        "name": "RBN Spots OUT",
        "mode": "link",
        "links": [
            "62e83a7590098e1b"
        ],
        "x": 1555,
        "y": 120,
        "wires": []
    },
    {
        "id": "e95c6faa.ab2e1",
        "type": "http request",
        "z": "bd8a446b999750f9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "https://query.yahooapis.com/v1/public/yql?q={{{query}}}&format=json",
        "tls": "",
        "x": 570,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "637d3c55.eb3084",
        "type": "inject",
        "z": "bd8a446b999750f9",
        "name": "query parameter",
        "props": [
            {
                "p": "payload",
                "v": "select astronomy.sunset from weather.forecast where woeid in (select woeid from geo.places(1) where text=\"maui, hi\")",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "select astronomy.sunset from weather.forecast where woeid in (select woeid from geo.places(1) where text=\"maui, hi\")",
        "payloadType": "str",
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "b001d489.d8f818"
            ]
        ]
    },
    {
        "id": "b001d489.d8f818",
        "type": "change",
        "z": "bd8a446b999750f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "query",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1280,
        "wires": [
            [
                "e95c6faa.ab2e1"
            ]
        ]
    },
    {
        "id": "868dd09f205ab8ef",
        "type": "subflow:bedd4acdc0e27dab",
        "z": "bd8a446b999750f9",
        "name": "",
        "x": 2120,
        "y": 760,
        "wires": [
            [],
            [
                "067c389c641a7d44",
                "1397296e012cd980"
            ]
        ]
    },
    {
        "id": "a74f6cb9b8629f3e",
        "type": "http request",
        "z": "bd8a446b999750f9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://retrieve.pskreporter.info/query?senderCallsign={{payload.contestcallsign}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 370,
        "y": 1220,
        "wires": [
            [
                "929f5044bccb8df7"
            ]
        ]
    },
    {
        "id": "a5070f7cb70d485a",
        "type": "inject",
        "z": "bd8a446b999750f9",
        "name": "",
        "props": [
            {
                "p": "payload.contestcallsign",
                "v": "W2ZMZ",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 1220,
        "wires": [
            [
                "a74f6cb9b8629f3e"
            ]
        ]
    },
    {
        "id": "9fc29b1d7f8667e6",
        "type": "debug",
        "z": "bd8a446b999750f9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1220,
        "wires": []
    },
    {
        "id": "929f5044bccb8df7",
        "type": "xml",
        "z": "bd8a446b999750f9",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 530,
        "y": 1220,
        "wires": [
            [
                "9fc29b1d7f8667e6"
            ]
        ]
    },
    {
        "id": "de8b711aa20ad228",
        "type": "switch",
        "z": "bd8a446b999750f9",
        "name": "Contest Callsign Check",
        "property": "payload.call",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "contestcallsign",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 760,
        "wires": [
            [
                "e4d94c370273fe6e",
                "64b178d24983c797"
            ]
        ]
    },
    {
        "id": "067c389c641a7d44",
        "type": "ui_worldmap",
        "z": "bd8a446b999750f9",
        "group": "a55f6d343a61c86b",
        "order": 1,
        "width": 24,
        "height": 13,
        "name": "Contest Call RBN Spots Map",
        "lat": "",
        "lon": "",
        "zoom": "",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "gth",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/rbnspots",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 2420,
        "y": 760,
        "wires": []
    },
    {
        "id": "3c9f5ebc0b376e95",
        "type": "ui_table",
        "z": "bd8a446b999750f9",
        "group": "ebbb538ba5d86639",
        "name": "Skimmer Spots with Dupes RBN Dashboard",
        "order": 1,
        "width": 10,
        "height": 13,
        "columns": [
            {
                "field": "freq",
                "title": "Freq",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "call",
                "title": "Call",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "comment",
                "title": "Comment",
                "width": "175",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 2050,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "e4d94c370273fe6e",
        "type": "function",
        "z": "bd8a446b999750f9",
        "name": "Table Format",
        "func": "\nlet freq = msg.payload.freq;\nlet call = msg.payload.call;\nlet comment = msg.payload.comment;\nlet time = msg.payload.time;\nlet de = msg.payload.de;\n\n\nreturn {payload:{\n    command:\"addData\",\n    arguments:[\n        {\n            de:de,freq:freq,call:call,comment:comment,time:time\n        },\n        true\n    ],\n    returnPromise:true\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 700,
        "wires": [
            [
                "0ac54405c9b0dc1d"
            ]
        ]
    },
    {
        "id": "0ac54405c9b0dc1d",
        "type": "ui_table",
        "z": "bd8a446b999750f9",
        "group": "4f4191b752633a96",
        "name": "Skimmer Spots with Contest Call",
        "order": 1,
        "width": 10,
        "height": 13,
        "columns": [
            {
                "field": "de",
                "title": "DE",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "freq",
                "title": "Freq",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "call",
                "title": "Call",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "comment",
                "title": "Comment",
                "width": "175",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 2240,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "f177b983ed87b46b",
        "type": "inject",
        "z": "bd8a446b999750f9",
        "name": "Inject Legend",
        "props": [
            {
                "p": "payload.command",
                "v": "{ \"legend\": \"<b>Band Pin Color</b></br> <i style=\\\"background: #00FF00\\\"></i> 2M<br> <i style=\\\"background: #FFFFFF\\\"></i> 6M<br> <i style=\\\"background: #FF8C00\\\"></i> 10M<br> <i style=\\\"background: #FFFF00\\\"></i> 15M<br> <i style=\\\"background: #FF0000\\\"></i> 20M<br> <i style=\\\"background: #0000FF\\\"></i> 40M<br> <i style=\\\"background: #008000\\\"></i> 80M<br> <i style=\\\"background: #800080\\\"></i> 160M<br> <i style=\\\"background: #000000\\\"></i> Else<br> \" }",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 2140,
        "y": 820,
        "wires": [
            [
                "067c389c641a7d44"
            ]
        ]
    },
    {
        "id": "bc3287083b12a7ca",
        "type": "comment",
        "z": "bd8a446b999750f9",
        "name": "Future PSK Reporter and Geofencing ",
        "info": "",
        "x": 270,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ed01ad0d611af2e8",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "",
        "group": "a55f6d343a61c86b",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear 160M",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\": {\"clear\":\"160M\"}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2150,
        "y": 860,
        "wires": [
            [
                "067c389c641a7d44"
            ]
        ]
    },
    {
        "id": "21b2378ddb32e8d0",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "",
        "group": "a55f6d343a61c86b",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear 80M",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\": {\"clear\":\"80M\"}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2150,
        "y": 900,
        "wires": [
            [
                "067c389c641a7d44"
            ]
        ]
    },
    {
        "id": "4d31d4a9c53afe4f",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "",
        "group": "a55f6d343a61c86b",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear 40M",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\": {\"clear\":\"40M\"}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2150,
        "y": 940,
        "wires": [
            [
                "067c389c641a7d44"
            ]
        ]
    },
    {
        "id": "a6b5ad646d7025a4",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "",
        "group": "a55f6d343a61c86b",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear 20M",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\": {\"clear\":\"20M\"}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2150,
        "y": 980,
        "wires": [
            [
                "067c389c641a7d44"
            ]
        ]
    },
    {
        "id": "5e6d60773e75cb3c",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "",
        "group": "a55f6d343a61c86b",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear 15M",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\": {\"clear\":\"15M\"}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2150,
        "y": 1020,
        "wires": [
            [
                "067c389c641a7d44"
            ]
        ]
    },
    {
        "id": "ca4c1b984c05e419",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "",
        "group": "a55f6d343a61c86b",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear 10M",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"command\": {\"clear\":\"10M\"}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 2150,
        "y": 1060,
        "wires": [
            [
                "067c389c641a7d44"
            ]
        ]
    },
    {
        "id": "1397296e012cd980",
        "type": "debug",
        "z": "bd8a446b999750f9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 720,
        "wires": []
    },
    {
        "id": "ccd8d5999e7fc33e",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "With Dups Connect RBN",
        "group": "ebbb538ba5d86639",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Connect Skimmer Dupes",
        "tooltip": "Connect to Cluster",
        "color": "",
        "bgcolor": "Green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 700,
        "wires": [
            [
                "916b557836ad4d49",
                "dc4467b4a3e34448"
            ]
        ]
    },
    {
        "id": "a8f3929e04ebdd16",
        "type": "ui_button",
        "z": "bd8a446b999750f9",
        "name": "Disconnect RBN",
        "group": "ebbb538ba5d86639",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Disconnect Skimmer",
        "tooltip": "Connect to Cluster",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 620,
        "wires": [
            [
                "44f33dc5166cd510"
            ]
        ]
    },
    {
        "id": "64b178d24983c797",
        "type": "change",
        "z": "bd8a446b999750f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "qsotype",
                "pt": "msg",
                "to": "spot",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 760,
        "wires": [
            [
                "868dd09f205ab8ef"
            ]
        ]
    },
    {
        "id": "4643b86af448174a",
        "type": "inject",
        "z": "2eedd966294071cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "dd3d5c16f312c621"
            ]
        ]
    },
    {
        "id": "dd3d5c16f312c621",
        "type": "http request",
        "z": "2eedd966294071cc",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://contestonlinescore.com/tools/api/?key=3450792384502938475&contest=CQ-M&call=VE2FK,AB3B,AI6O",
        "tls": "465f5622aae04ed5",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 390,
        "y": 100,
        "wires": [
            [
                "9cf0a4108c9933dd",
                "acfeee3b87307fc0",
                "fbfcea8b946db837"
            ]
        ]
    },
    {
        "id": "9cf0a4108c9933dd",
        "type": "html",
        "z": "2eedd966294071cc",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "tr",
        "ret": "attr",
        "as": "single",
        "x": 930,
        "y": 100,
        "wires": [
            [
                "49adcdb136be0f7d"
            ]
        ]
    },
    {
        "id": "49adcdb136be0f7d",
        "type": "string",
        "z": "2eedd966294071cc",
        "name": "",
        "methods": [
            {
                "name": "collapseWhitespace",
                "params": []
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 1090,
        "y": 100,
        "wires": [
            [
                "f14eb5e297ac3a2b"
            ]
        ]
    },
    {
        "id": "acfeee3b87307fc0",
        "type": "html",
        "z": "2eedd966294071cc",
        "name": "",
        "property": "payload",
        "outproperty": "payload",
        "tag": "td",
        "ret": "html",
        "as": "single",
        "x": 930,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f14eb5e297ac3a2b",
        "type": "debug",
        "z": "2eedd966294071cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 100,
        "wires": []
    },
    {
        "id": "9935c92ef01143cc",
        "type": "comment",
        "z": "2eedd966294071cc",
        "name": "Future Online Scoreboard Integration",
        "info": "",
        "x": 300,
        "y": 40,
        "wires": []
    },
    {
        "id": "24a259a2ccec0aa3",
        "type": "http request",
        "z": "2eedd966294071cc",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "body",
        "url": "https://contestonlinescore.com/tools/api/?key=3450792384502938475&contest={{topic}}&call={{payload}}",
        "tls": "465f5622aae04ed5",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 400,
        "wires": [
            [
                "53e82084023a5b13",
                "3d1d79ab408d89ba"
            ]
        ]
    },
    {
        "id": "3237f80fe3881e2f",
        "type": "inject",
        "z": "2eedd966294071cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "fd0abe18c04d6459"
            ]
        ]
    },
    {
        "id": "a17d9f2beaa961f4",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 2,
        "width": 9,
        "height": 2,
        "name": "Contest Call Total Score",
        "label": "<font color=#FFFF00>Total Score",
        "format": "{{payload.score_total}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 140,
        "wires": []
    },
    {
        "id": "a99b6a76ea0f0d6f",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 4,
        "width": 9,
        "height": 2,
        "name": "Contest Call Total Mults",
        "label": "<font color=#FFFF00>Total Mults",
        "format": "{{payload.mult_total}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 220,
        "wires": []
    },
    {
        "id": "2647325738a059d4",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 3,
        "width": 9,
        "height": 2,
        "name": "Contest Call Total QSO's",
        "label": "<font color=#FFFF00>Total Qs",
        "format": "{{payload.qso_total}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 180,
        "wires": []
    },
    {
        "id": "2021dcc0d17213a1",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 6,
        "width": 9,
        "height": 2,
        "name": "Contest Call 80",
        "label": "<font color=#FFFF00>80M Qs/Mults",
        "format": "{{payload.qso_80}} / {{payload.mult_80}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1700,
        "y": 300,
        "wires": []
    },
    {
        "id": "b21d2d0a99e94c0b",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 7,
        "width": 9,
        "height": 2,
        "name": "Contest Call 40",
        "label": "<font color=#FFFF00>40M Qs/Mults",
        "format": "{{payload.qso_40}} / {{payload.mult_40}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1700,
        "y": 340,
        "wires": []
    },
    {
        "id": "52a52669869d2ea1",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 9,
        "width": 9,
        "height": 2,
        "name": "Contest Call 20",
        "label": "<font color=#FFFF00>20M Qs/Mults",
        "format": "{{payload.qso_20}} / {{payload.mult_20}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1700,
        "y": 380,
        "wires": []
    },
    {
        "id": "8feb0f8314d93d97",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 10,
        "width": 9,
        "height": 2,
        "name": "Contest Call 15",
        "label": "<font color=#FFFF00>15M Qs/Mults",
        "format": "{{payload.qso_15}} / {{payload.mult_15}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1700,
        "y": 420,
        "wires": []
    },
    {
        "id": "436836cb2e6cc8c5",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 11,
        "width": 9,
        "height": 2,
        "name": "Contest Call 10",
        "label": "<font color=#FFFF00>10M Qs/Mults",
        "format": "{{payload.qso_10}} / {{payload.mult_10}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1700,
        "y": 460,
        "wires": []
    },
    {
        "id": "86b9f34f855395ec",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 12,
        "width": 9,
        "height": 2,
        "name": "Contest Call Last Update",
        "label": "<font color=#FFFF00>Last Update",
        "format": "{{payload.last}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 500,
        "wires": []
    },
    {
        "id": "0d911e7b67da5a5d",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 5,
        "width": 9,
        "height": 2,
        "name": "Contest Call 160",
        "label": "<font color=#FFFF00>160M Qs/Mults",
        "format": "{{payload.qso_160}}/{{payload.mult_160}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 260,
        "wires": []
    },
    {
        "id": "fd0abe18c04d6459",
        "type": "function",
        "z": "2eedd966294071cc",
        "name": "Prep HTTP GET",
        "func": "let contestname = global.get('contestname');\nlet contestcall = global.get('contestcallsign');\nlet chasecall1 = global.get('chasecall1');\nlet chasecall2 = global.get('chasecall2');\nlet chasecall3 = global.get('chasecall3');\nlet chasecall4 = global.get('chasecall4');\nlet chasecall5 = global.get('chasecall5');\n\nif (contestname == null)\n{\n    return;\n}\n\nif (contestcall == null)\n{\n    return;\n}\n\nif (chasecall1 == null)\n{\n    msg.payload = contestcall\n    msg.topic = contestname;\n    return msg;\n}\n\nif (chasecall2 == null)\n{\n    msg.payload = contestcall+\",\"+chasecall1\n    msg.topic = contestname;\n    return msg;\n}\n\nif (chasecall3 == null)\n{\n    msg.payload = contestcall+\",\"+chasecall1+\",\"+chasecall2\n    msg.topic = contestname;\n    return msg;\n}\n\nif (chasecall4 == null)\n{\n    msg.payload = contestcall+\",\"+chasecall1+\",\"+chasecall2+\",\"+chasecall3\n    msg.topic = contestname;\n    return msg;\n}\n\nif (chasecall5 == null)\n{\n    msg.payload = contestcall+\",\"+chasecall1+\",\"+chasecall2+\",\"+chasecall3+\",\"+chasecall4\n    msg.topic = contestname;\n    return msg;\n}\nelse {\n    \n    msg.payload = contestcall+\",\"+chasecall1+\",\"+chasecall2+\",\"+chasecall3+\",\"+chasecall4+\",\"+chasecall5\n    msg.topic = contestname;\n    return msg;\n}\n\n//msg.payload = contestcall+\",\"+chasecall1+\",\"+chasecall2+\",\"+chasecall3+\",\"+chasecall4+\",\"+chasecall5\n\n//let dummyString=\"890909.00\"\n//msg.payload = msg.payload.replace(/(,+$)/, '')\n//console.log(dummyString)\n\n//msg.topic = contestname;\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "99c82b5fb751c6ed"
            ]
        ]
    },
    {
        "id": "1d6262c33a537bdc",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "9a1dd65e19bf97cb",
        "order": 1,
        "width": 9,
        "height": 2,
        "name": "Contest Call",
        "label": "<font color=#FFFF00>Call",
        "format": "{{payload.contestcall}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1690,
        "y": 100,
        "wires": []
    },
    {
        "id": "8f683ff5386e05aa",
        "type": "function",
        "z": "2eedd966294071cc",
        "name": "Breakout Scores Contest Call",
        "func": "let contestcall = global.get('contestcallsign');\n\nif (contestcall == null)\n{\n    return;\n}\n\nlet score_total = msg.payload[contestcall].data.score_total;\nlet qso_total = msg.payload[contestcall].data.qso_total;\nlet mult_total = msg.payload[contestcall].data.mult_total;\nlet qso_160 = msg.payload[contestcall].data.qso_160;\nlet mult_160 = msg.payload[contestcall].data.mult_160;\nlet qso_80 = msg.payload[contestcall].data.qso_80;\nlet mult_80 = msg.payload[contestcall].data.mult_80;\nlet qso_40 = msg.payload[contestcall].data.qso_40;\nlet mult_40 = msg.payload[contestcall].data.mult_40;\nlet qso_20 = msg.payload[contestcall].data.qso_20;\nlet mult_20 = msg.payload[contestcall].data.mult_20;\nlet qso_15 = msg.payload[contestcall].data.qso_15;\nlet mult_15 = msg.payload[contestcall].data.mult_15;\nlet qso_10 = msg.payload[contestcall].data.qso_10;\nlet mult_10 = msg.payload[contestcall].data.mult_10;\nlet qso_6 = msg.payload[contestcall].data.qso_6;\nlet mult_6 = msg.payload[contestcall].data.mult_6;\nlet last = msg.payload[contestcall].data.last;\n\nflow.set('score_total',score_total);\nflow.set('qso_total',qso_total);\nflow.set('mult_total',mult_total);\n\nscore_total = Number(score_total).toLocaleString('US');\nqso_total = Number(qso_total).toLocaleString('US');\nmult_total = Number(mult_total).toLocaleString('US');\n\n\nmsg.payload = {\n    contestcall:contestcall,\n    score_total:score_total,\n    qso_total:qso_total,\n    mult_total:mult_total,\n    qso_160:qso_160,\n    mult_160:mult_160,\n    qso_80:qso_80,\n    mult_80:mult_80,\n    qso_40:qso_40,\n    mult_40:mult_40,\n    qso_20:qso_20,\n    mult_20:mult_20,\n    qso_15:qso_15,\n    mult_15:mult_15,\n    qso_10:qso_10,\n    mult_10:mult_10,\n    qso_6:qso_6,\n    mult_6:mult_6,\n    last:last\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 280,
        "wires": [
            [
                "1d6262c33a537bdc",
                "a17d9f2beaa961f4",
                "2647325738a059d4",
                "a99b6a76ea0f0d6f",
                "0d911e7b67da5a5d",
                "2021dcc0d17213a1",
                "b21d2d0a99e94c0b",
                "52a52669869d2ea1",
                "8feb0f8314d93d97",
                "436836cb2e6cc8c5",
                "86b9f34f855395ec",
                "66cc75cee374cd17",
                "8ea1df71d732a139"
            ]
        ]
    },
    {
        "id": "8aefb11753b2796c",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 2,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 Total Score",
        "label": "<font color=#FFFF00>Total Score",
        "format": "{{payload.score_total}}</font> <font color={{msg.score_diff_color}}>({{payload.score_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 400,
        "wires": []
    },
    {
        "id": "0e31a52b6b89872f",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 4,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 Total Mults",
        "label": "<font color=#FFFF00>Total Mults",
        "format": "{{payload.mult_total}}</font><font color={{msg.mult_diff_color}}>({{payload.mult_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 480,
        "wires": []
    },
    {
        "id": "70e64b9bd15e013c",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 3,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 Total QSO's",
        "label": "<font color=#FFFF00>Total Qs",
        "format": "{{payload.qso_total}}</font><font color={{msg.qso_diff_color}}>({{payload.qso_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 440,
        "wires": []
    },
    {
        "id": "b15ec6c3dfdd07d3",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 6,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 80",
        "label": "<font color=#FFFF00>80M Qs/Mults",
        "format": "{{payload.qso_80}} / {{payload.mult_80}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 560,
        "wires": []
    },
    {
        "id": "572ac78c5ccff55a",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 7,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 40",
        "label": "<font color=#FFFF00>40M Qs/Mults",
        "format": "{{payload.qso_40}} / {{payload.mult_40}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 600,
        "wires": []
    },
    {
        "id": "918a9d1fd39ca92e",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 8,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 20",
        "label": "<font color=#FFFF00>20M Qs/Mults",
        "format": "{{payload.qso_20}} / {{payload.mult_20}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 640,
        "wires": []
    },
    {
        "id": "2c3bff2c367c9aec",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 9,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 15",
        "label": "<font color=#FFFF00>15M Qs/Mults",
        "format": "{{payload.qso_15}} / {{payload.mult_15}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 680,
        "wires": []
    },
    {
        "id": "2f735fa6a5229447",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 10,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 10",
        "label": "<font color=#FFFF00>10M Qs/Mults",
        "format": "{{payload.qso_10}} / {{payload.mult_10}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 720,
        "wires": []
    },
    {
        "id": "b214cb6ec396e43d",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 11,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 Last Update",
        "label": "<font color=#FFFF00>Last Update",
        "format": "{{payload.last}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 760,
        "wires": []
    },
    {
        "id": "6737741cf9f9b1be",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 5,
        "width": 9,
        "height": 2,
        "name": "Contest Call1 160",
        "label": "<font color=#FFFF00>160M Qs/Mults",
        "format": "{{payload.qso_160}}/{{payload.mult_160}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 520,
        "wires": []
    },
    {
        "id": "37e4b21b4e33e0c3",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "02cd9912aaf9c5c2",
        "order": 1,
        "width": 9,
        "height": 2,
        "name": "Contest Call1",
        "label": "<font color=#FFFF00>Call",
        "format": "{{payload.contestcall}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2060,
        "y": 360,
        "wires": []
    },
    {
        "id": "72725fb68585e15d",
        "type": "function",
        "z": "2eedd966294071cc",
        "name": "Breakout Scores Chase Call 1",
        "func": "let contestcall = global.get('chasecall1');\n\nif (contestcall == null)\n{\n    return;\n}\n\nlet score_total = msg.payload[contestcall].data.score_total;\nlet qso_total = msg.payload[contestcall].data.qso_total;\nlet mult_total = msg.payload[contestcall].data.mult_total;\nlet qso_160 = msg.payload[contestcall].data.qso_160;\nlet mult_160 = msg.payload[contestcall].data.mult_160;\nlet qso_80 = msg.payload[contestcall].data.qso_80;\nlet mult_80 = msg.payload[contestcall].data.mult_80;\nlet qso_40 = msg.payload[contestcall].data.qso_40;\nlet mult_40 = msg.payload[contestcall].data.mult_40;\nlet qso_20 = msg.payload[contestcall].data.qso_20;\nlet mult_20 = msg.payload[contestcall].data.mult_20;\nlet qso_15 = msg.payload[contestcall].data.qso_15;\nlet mult_15 = msg.payload[contestcall].data.mult_15;\nlet qso_10 = msg.payload[contestcall].data.qso_10;\nlet mult_10 = msg.payload[contestcall].data.mult_10;\nlet qso_6 = msg.payload[contestcall].data.qso_6;\nlet mult_6 = msg.payload[contestcall].data.mult_6;\nlet last = msg.payload[contestcall].data.last;\n\nlet contestcall_score_total = flow.get('score_total')\nlet score_diff = score_total - contestcall_score_total;\n\nif (score_diff > 0)\n{\n    msg.score_diff_color = \"#00800\"\n}\nif (score_diff < 0)\n{\n    msg.score_diff_color = \"#FF0000\"\n}\n\nlet contestcall_qso_total = flow.get('qso_total');\nlet qso_diff = qso_total - contestcall_qso_total;\n\nif (qso_diff > 0)\n{\n    msg.qso_diff_color = \"#00800\"\n}\nif (qso_diff < 0)\n{\n    msg.qso_diff_color = \"#FF0000\"\n}\n\nlet contestcall_mult_total = flow.get('mult_total');\nlet mult_diff = mult_total - contestcall_mult_total;\n\nif (mult_diff > 0)\n{\n    msg.mult_diff_color = \"#00800\"\n}\nif (mult_diff < 0)\n{\n    msg.mult_diff_color = \"#FF0000\"\n}\n\nscore_total = Number(score_total).toLocaleString('US');\nqso_total = Number(qso_total).toLocaleString('US');\nmult_total = Number(mult_total).toLocaleString('US');\nscore_diff = Number(score_diff).toLocaleString('US');\nqso_diff = Number(qso_diff).toLocaleString('US');\nmult_diff = Number(mult_diff).toLocaleString('US');\n\n\nmsg.payload = {\n    contestcall:contestcall,\n    score_total:score_total,\n    qso_total:qso_total,\n    mult_total:mult_total,\n    qso_160:qso_160,\n    mult_160:mult_160,\n    qso_80:qso_80,\n    mult_80:mult_80,\n    qso_40:qso_40,\n    mult_40:mult_40,\n    qso_20:qso_20,\n    mult_20:mult_20,\n    qso_15:qso_15,\n    mult_15:mult_15,\n    qso_10:qso_10,\n    mult_10:mult_10,\n    qso_6:qso_6,\n    mult_6:mult_6,\n    last:last,\n    score_diff:score_diff,\n    qso_diff:qso_diff,\n    mult_diff:mult_diff\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 560,
        "wires": [
            [
                "37e4b21b4e33e0c3",
                "8aefb11753b2796c",
                "70e64b9bd15e013c",
                "0e31a52b6b89872f",
                "6737741cf9f9b1be",
                "b15ec6c3dfdd07d3",
                "572ac78c5ccff55a",
                "918a9d1fd39ca92e",
                "2c3bff2c367c9aec",
                "2f735fa6a5229447",
                "b214cb6ec396e43d",
                "68a0110ca1c8ef48",
                "6ccb7eca978143c2"
            ]
        ]
    },
    {
        "id": "8c98e4e56fb94301",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 2,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 Total Score",
        "label": "<font color=#FFFF00>Total Score",
        "format": "{{payload.score_total}}</font> <font color={{msg.score_diff_color}}>({{payload.score_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 660,
        "wires": []
    },
    {
        "id": "a4b19e2057f48fb2",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 4,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 Total Mults",
        "label": "<font color=#FFFF00>Total Mults",
        "format": "{{payload.mult_total}}</font><font color={{msg.mult_diff_color}}>({{payload.mult_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 740,
        "wires": []
    },
    {
        "id": "c67b8ec777994e30",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 3,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 Total QSO's",
        "label": "<font color=#FFFF00>Total Qs",
        "format": "{{payload.qso_total}}</font><font color={{msg.qso_diff_color}}>({{payload.qso_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 700,
        "wires": []
    },
    {
        "id": "735de06323bc64bf",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 6,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 80",
        "label": "<font color=#FFFF00>80M Qs/Mults",
        "format": "{{payload.qso_80}} / {{payload.mult_80}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 820,
        "wires": []
    },
    {
        "id": "68ef53277b0a4e6c",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 7,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 40",
        "label": "<font color=#FFFF00>40M Qs/Mults",
        "format": "{{payload.qso_40}} / {{payload.mult_40}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 860,
        "wires": []
    },
    {
        "id": "794d164c816e257f",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 8,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 20",
        "label": "<font color=#FFFF00>20M Qs/Mults",
        "format": "{{payload.qso_20}} / {{payload.mult_20}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 900,
        "wires": []
    },
    {
        "id": "af33a3fdcc4879cd",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 9,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 15",
        "label": "<font color=#FFFF00>15M Qs/Mults",
        "format": "{{payload.qso_15}} / {{payload.mult_15}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 940,
        "wires": []
    },
    {
        "id": "92aed6e70d6e12c7",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 10,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 10",
        "label": "<font color=#FFFF00>10M Qs/Mults",
        "format": "{{payload.qso_10}} / {{payload.mult_10}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 980,
        "wires": []
    },
    {
        "id": "cfac8b3bf0f80aa9",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 11,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 Last Update",
        "label": "<font color=#FFFF00>Last Update",
        "format": "{{payload.last}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2acd926df2a9f72c",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 5,
        "width": 9,
        "height": 2,
        "name": "Contest Call2 160",
        "label": "<font color=#FFFF00>160M Qs/Mults",
        "format": "{{payload.qso_160}}/{{payload.mult_160}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 780,
        "wires": []
    },
    {
        "id": "e61e30248d8cd054",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "cc8d9c65bb6053c8",
        "order": 1,
        "width": 9,
        "height": 2,
        "name": "Contest Call2",
        "label": "<font color=#FFFF00>Call",
        "format": "{{payload.contestcall}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1700,
        "y": 620,
        "wires": []
    },
    {
        "id": "c89d9e7c5c6dbd01",
        "type": "function",
        "z": "2eedd966294071cc",
        "name": "Breakout Scores Chase Call 2",
        "func": "let contestcall = global.get('chasecall2');\n\nif (contestcall == null)\n{\n    return;\n}\n\nlet score_total = msg.payload[contestcall].data.score_total;\nlet qso_total = msg.payload[contestcall].data.qso_total;\nlet mult_total = msg.payload[contestcall].data.mult_total;\nlet qso_160 = msg.payload[contestcall].data.qso_160;\nlet mult_160 = msg.payload[contestcall].data.mult_160;\nlet qso_80 = msg.payload[contestcall].data.qso_80;\nlet mult_80 = msg.payload[contestcall].data.mult_80;\nlet qso_40 = msg.payload[contestcall].data.qso_40;\nlet mult_40 = msg.payload[contestcall].data.mult_40;\nlet qso_20 = msg.payload[contestcall].data.qso_20;\nlet mult_20 = msg.payload[contestcall].data.mult_20;\nlet qso_15 = msg.payload[contestcall].data.qso_15;\nlet mult_15 = msg.payload[contestcall].data.mult_15;\nlet qso_10 = msg.payload[contestcall].data.qso_10;\nlet mult_10 = msg.payload[contestcall].data.mult_10;\nlet qso_6 = msg.payload[contestcall].data.qso_6;\nlet mult_6 = msg.payload[contestcall].data.mult_6;\nlet last = msg.payload[contestcall].data.last;\n\nlet contestcall_score_total = flow.get('score_total');\nlet score_diff = score_total - contestcall_score_total;\n\nif (score_diff > 0)\n{\n    msg.score_diff_color = \"#00800\"\n}\nif (score_diff < 0)\n{\n    msg.score_diff_color = \"#FF0000\"\n}\n\nlet contestcall_qso_total = flow.get('qso_total');\nlet qso_diff = qso_total - contestcall_qso_total;\n\nif (qso_diff > 0)\n{\n    msg.qso_diff_color = \"#00800\"\n}\nif (qso_diff < 0)\n{\n    msg.qso_diff_color = \"#FF0000\"\n}\n\nlet contestcall_mult_total = flow.get('mult_total');\nlet mult_diff = mult_total - contestcall_mult_total;\n\nif (mult_diff > 0)\n{\n    msg.mult_diff_color = \"#00800\"\n}\nif (mult_diff < 0)\n{\n    msg.mult_diff_color = \"#FF0000\"\n}\n\nscore_total = Number(score_total).toLocaleString('US');\nqso_total = Number(qso_total).toLocaleString('US');\nmult_total = Number(mult_total).toLocaleString('US');\nscore_diff = Number(score_diff).toLocaleString('US');\nqso_diff = Number(qso_diff).toLocaleString('US');\nmult_diff = Number(mult_diff).toLocaleString('US');\n\nmsg.payload = {\n    contestcall:contestcall,\n    score_total:score_total,\n    qso_total:qso_total,\n    mult_total:mult_total,\n    qso_160:qso_160,\n    mult_160:mult_160,\n    qso_80:qso_80,\n    mult_80:mult_80,\n    qso_40:qso_40,\n    mult_40:mult_40,\n    qso_20:qso_20,\n    mult_20:mult_20,\n    qso_15:qso_15,\n    mult_15:mult_15,\n    qso_10:qso_10,\n    mult_10:mult_10,\n    qso_6:qso_6,\n    mult_6:mult_6,\n    last:last,\n    score_diff:score_diff,\n    qso_diff:qso_diff,\n    mult_diff:mult_diff\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 820,
        "wires": [
            [
                "e61e30248d8cd054",
                "8c98e4e56fb94301",
                "c67b8ec777994e30",
                "a4b19e2057f48fb2",
                "2acd926df2a9f72c",
                "735de06323bc64bf",
                "68ef53277b0a4e6c",
                "794d164c816e257f",
                "af33a3fdcc4879cd",
                "92aed6e70d6e12c7",
                "cfac8b3bf0f80aa9",
                "12fea413fec156be"
            ]
        ]
    },
    {
        "id": "2d8923ad8f605cc6",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 2,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 Total Score",
        "label": "<font color=#FFFF00>Total Score",
        "format": "{{payload.score_total}}</font> <font color={{msg.score_diff_color}}>({{payload.score_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 920,
        "wires": []
    },
    {
        "id": "2c0774791fbd12b2",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 4,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 Total Mults",
        "label": "<font color=#FFFF00>Total Mults",
        "format": "{{payload.mult_total}}</font><font color={{msg.mult_diff_color}}>({{payload.mult_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1000,
        "wires": []
    },
    {
        "id": "92ac0425e5ecd7d2",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 3,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 Total QSO's",
        "label": "<font color=#FFFF00>Total Qs",
        "format": "{{payload.qso_total}}</font><font color={{msg.qso_diff_color}}>({{payload.qso_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 960,
        "wires": []
    },
    {
        "id": "b8ed0adf9c4d6765",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 6,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 80",
        "label": "<font color=#FFFF00>80M Qs/Mults",
        "format": "{{payload.qso_80}} / {{payload.mult_80}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 1080,
        "wires": []
    },
    {
        "id": "47a9dfec8f5a7b83",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 7,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 40",
        "label": "<font color=#FFFF00>40M Qs/Mults",
        "format": "{{payload.qso_40}} / {{payload.mult_40}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 1120,
        "wires": []
    },
    {
        "id": "34a1255633719e44",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 8,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 20",
        "label": "<font color=#FFFF00>20M Qs/Mults",
        "format": "{{payload.qso_20}} / {{payload.mult_20}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e2878814996a0c88",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 9,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 15",
        "label": "<font color=#FFFF00>15M Qs/Mults",
        "format": "{{payload.qso_15}} / {{payload.mult_15}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 1200,
        "wires": []
    },
    {
        "id": "97cf056ef6c6af52",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 10,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 10",
        "label": "<font color=#FFFF00>10M Qs/Mults",
        "format": "{{payload.qso_10}} / {{payload.mult_10}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 1240,
        "wires": []
    },
    {
        "id": "0ca805fad7686e8b",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 11,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 Last Update",
        "label": "<font color=#FFFF00>Last Update",
        "format": "{{payload.last}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2090,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b12d11eee38de884",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 5,
        "width": 9,
        "height": 2,
        "name": "Contest Call3 160",
        "label": "<font color=#FFFF00>160M Qs/Mults",
        "format": "{{payload.qso_160}}/{{payload.mult_160}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2070,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0fd8a6e0208f9927",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "eff3603f5f8c17cf",
        "order": 1,
        "width": 9,
        "height": 2,
        "name": "Contest Call3",
        "label": "<font color=#FFFF00>Call",
        "format": "{{payload.contestcall}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 2060,
        "y": 880,
        "wires": []
    },
    {
        "id": "b7652b3acedb4176",
        "type": "function",
        "z": "2eedd966294071cc",
        "name": "Breakout Scores Chase Call 3",
        "func": "let contestcall = global.get('chasecall3');\n\nif (contestcall == null)\n{\n    return;\n}\n\nlet score_total = msg.payload[contestcall].data.score_total;\nlet qso_total = msg.payload[contestcall].data.qso_total;\nlet mult_total = msg.payload[contestcall].data.mult_total;\nlet qso_160 = msg.payload[contestcall].data.qso_160;\nlet mult_160 = msg.payload[contestcall].data.mult_160;\nlet qso_80 = msg.payload[contestcall].data.qso_80;\nlet mult_80 = msg.payload[contestcall].data.mult_80;\nlet qso_40 = msg.payload[contestcall].data.qso_40;\nlet mult_40 = msg.payload[contestcall].data.mult_40;\nlet qso_20 = msg.payload[contestcall].data.qso_20;\nlet mult_20 = msg.payload[contestcall].data.mult_20;\nlet qso_15 = msg.payload[contestcall].data.qso_15;\nlet mult_15 = msg.payload[contestcall].data.mult_15;\nlet qso_10 = msg.payload[contestcall].data.qso_10;\nlet mult_10 = msg.payload[contestcall].data.mult_10;\nlet qso_6 = msg.payload[contestcall].data.qso_6;\nlet mult_6 = msg.payload[contestcall].data.mult_6;\nlet last = msg.payload[contestcall].data.last;\n\nlet contestcall_score_total = flow.get('score_total');\nlet score_diff = score_total - contestcall_score_total;\n\nif (score_diff > 0)\n{\n    msg.score_diff_color = \"#00800\"\n}\nif (score_diff < 0)\n{\n    msg.score_diff_color = \"#FF0000\"\n}\n\nlet contestcall_qso_total = flow.get('qso_total');\nlet qso_diff = qso_total - contestcall_qso_total;\n\nif (qso_diff > 0)\n{\n    msg.qso_diff_color = \"#00800\"\n}\nif (qso_diff < 0)\n{\n    msg.qso_diff_color = \"#FF0000\"\n}\n\nlet contestcall_mult_total = flow.get('mult_total');\nlet mult_diff = mult_total - contestcall_mult_total;\n\nif (mult_diff > 0)\n{\n    msg.mult_diff_color = \"#00800\"\n}\nif (mult_diff < 0)\n{\n    msg.mult_diff_color = \"#FF0000\"\n}\n\nscore_total = Number(score_total).toLocaleString('US');\nqso_total = Number(qso_total).toLocaleString('US');\nmult_total = Number(mult_total).toLocaleString('US');\nscore_diff = Number(score_diff).toLocaleString('US');\nqso_diff = Number(qso_diff).toLocaleString('US');\nmult_diff = Number(mult_diff).toLocaleString('US');\n\nmsg.payload = {\n    contestcall:contestcall,\n    score_total:score_total,\n    qso_total:qso_total,\n    mult_total:mult_total,\n    qso_160:qso_160,\n    mult_160:mult_160,\n    qso_80:qso_80,\n    mult_80:mult_80,\n    qso_40:qso_40,\n    mult_40:mult_40,\n    qso_20:qso_20,\n    mult_20:mult_20,\n    qso_15:qso_15,\n    mult_15:mult_15,\n    qso_10:qso_10,\n    mult_10:mult_10,\n    qso_6:qso_6,\n    mult_6:mult_6,\n    last:last,\n    score_diff:score_diff,\n    qso_diff:qso_diff,\n    mult_diff:mult_diff\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 1080,
        "wires": [
            [
                "0fd8a6e0208f9927",
                "2d8923ad8f605cc6",
                "92ac0425e5ecd7d2",
                "2c0774791fbd12b2",
                "b12d11eee38de884",
                "b8ed0adf9c4d6765",
                "47a9dfec8f5a7b83",
                "34a1255633719e44",
                "e2878814996a0c88",
                "97cf056ef6c6af52",
                "0ca805fad7686e8b",
                "f36954fb7c5c492d"
            ]
        ]
    },
    {
        "id": "ad5968515f6b63cb",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 2,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 Total Score",
        "label": "<font color=#FFFF00>Total Score",
        "format": "{{payload.score_total}}</font> <font color={{msg.score_diff_color}}>({{payload.score_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 1180,
        "wires": []
    },
    {
        "id": "67910a9971f0bdb8",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 4,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 Total Mults",
        "label": "<font color=#FFFF00>Total Mults",
        "format": "{{payload.mult_total}}</font><font color={{msg.mult_diff_color}}>({{payload.mult_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 1260,
        "wires": []
    },
    {
        "id": "b6622194ef7fb89f",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 3,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 Total QSO's",
        "label": "<font color=#FFFF00>Total Qs",
        "format": "{{payload.qso_total}}</font><font color={{msg.qso_diff_color}}>({{payload.qso_diff}})</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 1220,
        "wires": []
    },
    {
        "id": "66f58f5d89ca6531",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 6,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 80",
        "label": "<font color=#FFFF00>80M Qs/Mults",
        "format": "{{payload.qso_80}} / {{payload.mult_80}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 1340,
        "wires": []
    },
    {
        "id": "e3e7883e4a48b4be",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 7,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 40",
        "label": "<font color=#FFFF00>40M Qs/Mults",
        "format": "{{payload.qso_40}} / {{payload.mult_40}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 1380,
        "wires": []
    },
    {
        "id": "de56b0511fa4c50f",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 8,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 20",
        "label": "<font color=#FFFF00>20M Qs/Mults",
        "format": "{{payload.qso_20}} / {{payload.mult_20}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 1420,
        "wires": []
    },
    {
        "id": "6434b303e7a6aee4",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 9,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 15",
        "label": "<font color=#FFFF00>15M Qs/Mults",
        "format": "{{payload.qso_15}} / {{payload.mult_15}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 1460,
        "wires": []
    },
    {
        "id": "08557f43923d8b8e",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 10,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 10",
        "label": "<font color=#FFFF00>10M Qs/Mults",
        "format": "{{payload.qso_10}} / {{payload.mult_10}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 1500,
        "wires": []
    },
    {
        "id": "cdf7fc8e28223fa8",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 11,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 Last Update",
        "label": "<font color=#FFFF00>Last Update",
        "format": "{{payload.last}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1730,
        "y": 1540,
        "wires": []
    },
    {
        "id": "c793f9e35b0c0f42",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 5,
        "width": 9,
        "height": 2,
        "name": "Contest Call4 160",
        "label": "<font color=#FFFF00>160M Qs/Mults",
        "format": "{{payload.qso_160}}/{{payload.mult_160}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1710,
        "y": 1300,
        "wires": []
    },
    {
        "id": "5d539a2da4325684",
        "type": "ui_text",
        "z": "2eedd966294071cc",
        "group": "089bc41bee57baf2",
        "order": 1,
        "width": 9,
        "height": 2,
        "name": "Contest Call4",
        "label": "<font color=#FFFF00>Call",
        "format": "{{payload.contestcall}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1700,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9c40fc709b74e053",
        "type": "function",
        "z": "2eedd966294071cc",
        "name": "Breakout Scores Chase Call 4",
        "func": "let contestcall = global.get('chasecall4');\n\nif (contestcall == null)\n{\n    return;\n}\n\nlet score_total = msg.payload[contestcall].data.score_total;\nlet qso_total = msg.payload[contestcall].data.qso_total;\nlet mult_total = msg.payload[contestcall].data.mult_total;\nlet qso_160 = msg.payload[contestcall].data.qso_160;\nlet mult_160 = msg.payload[contestcall].data.mult_160;\nlet qso_80 = msg.payload[contestcall].data.qso_80;\nlet mult_80 = msg.payload[contestcall].data.mult_80;\nlet qso_40 = msg.payload[contestcall].data.qso_40;\nlet mult_40 = msg.payload[contestcall].data.mult_40;\nlet qso_20 = msg.payload[contestcall].data.qso_20;\nlet mult_20 = msg.payload[contestcall].data.mult_20;\nlet qso_15 = msg.payload[contestcall].data.qso_15;\nlet mult_15 = msg.payload[contestcall].data.mult_15;\nlet qso_10 = msg.payload[contestcall].data.qso_10;\nlet mult_10 = msg.payload[contestcall].data.mult_10;\nlet qso_6 = msg.payload[contestcall].data.qso_6;\nlet mult_6 = msg.payload[contestcall].data.mult_6;\nlet last = msg.payload[contestcall].data.last;\n\nlet contestcall_score_total = flow.get('score_total');\nlet score_diff = score_total - contestcall_score_total;\n\nif (score_diff > 0)\n{\n    msg.score_diff_color = \"#00800\"\n}\nif (score_diff < 0)\n{\n    msg.score_diff_color = \"#FF0000\"\n}\n\nlet contestcall_qso_total = flow.get('qso_total');\nlet qso_diff = qso_total - contestcall_qso_total;\n\nif (qso_diff > 0)\n{\n    msg.qso_diff_color = \"#00800\"\n}\nif (qso_diff < 0)\n{\n    msg.qso_diff_color = \"#FF0000\"\n}\n\nlet contestcall_mult_total = flow.get('mult_total');\nlet mult_diff = mult_total - contestcall_mult_total;\n\nif (mult_diff > 0)\n{\n    msg.mult_diff_color = \"#00800\"\n}\nif (mult_diff < 0)\n{\n    msg.mult_diff_color = \"#FF0000\"\n}\n\nscore_total = Number(score_total).toLocaleString('US');\nqso_total = Number(qso_total).toLocaleString('US');\nmult_total = Number(mult_total).toLocaleString('US');\nscore_diff = Number(score_diff).toLocaleString('US');\nqso_diff = Number(qso_diff).toLocaleString('US');\nmult_diff = Number(mult_diff).toLocaleString('US');\n\nmsg.payload = {\n    contestcall:contestcall,\n    score_total:score_total,\n    qso_total:qso_total,\n    mult_total:mult_total,\n    qso_160:qso_160,\n    mult_160:mult_160,\n    qso_80:qso_80,\n    mult_80:mult_80,\n    qso_40:qso_40,\n    mult_40:mult_40,\n    qso_20:qso_20,\n    mult_20:mult_20,\n    qso_15:qso_15,\n    mult_15:mult_15,\n    qso_10:qso_10,\n    mult_10:mult_10,\n    qso_6:qso_6,\n    mult_6:mult_6,\n    last:last,\n    score_diff:score_diff,\n    qso_diff:qso_diff,\n    mult_diff:mult_diff\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1360,
        "wires": [
            [
                "5d539a2da4325684",
                "ad5968515f6b63cb",
                "b6622194ef7fb89f",
                "67910a9971f0bdb8",
                "c793f9e35b0c0f42",
                "66f58f5d89ca6531",
                "e3e7883e4a48b4be",
                "de56b0511fa4c50f",
                "6434b303e7a6aee4",
                "08557f43923d8b8e",
                "cdf7fc8e28223fa8",
                "7b71578337dbbc61"
            ]
        ]
    },
    {
        "id": "95abe88dd284810d",
        "type": "function",
        "z": "2eedd966294071cc",
        "name": "Breakout Scores Chase Call 5",
        "func": "let contestcall = global.get('chasecall5');\n\nif (contestcall == null)\n{\n    return;\n}\n\n\nlet score_total = msg.payload[contestcall].data.score_total;\nlet qso_total = msg.payload[contestcall].data.qso_total;\nlet mult_total = msg.payload[contestcall].data.mult_total;\nlet qso_160 = msg.payload[contestcall].data.qso_160;\nlet mult_160 = msg.payload[contestcall].data.mult_160;\nlet qso_80 = msg.payload[contestcall].data.qso_80;\nlet mult_80 = msg.payload[contestcall].data.mult_80;\nlet qso_40 = msg.payload[contestcall].data.qso_40;\nlet mult_40 = msg.payload[contestcall].data.mult_40;\nlet qso_20 = msg.payload[contestcall].data.qso_20;\nlet mult_20 = msg.payload[contestcall].data.mult_20;\nlet qso_15 = msg.payload[contestcall].data.qso_15;\nlet mult_15 = msg.payload[contestcall].data.mult_15;\nlet qso_10 = msg.payload[contestcall].data.qso_10;\nlet mult_10 = msg.payload[contestcall].data.mult_10;\nlet qso_6 = msg.payload[contestcall].data.qso_6;\nlet mult_6 = msg.payload[contestcall].data.mult_6;\nlet last = msg.payload[contestcall].data.last;\n\nlet contestcall_score_total = flow.get('score_total');\nlet score_diff = score_total - contestcall_score_total;\n\nif (score_diff > 0)\n{\n    msg.score_diff_color = \"#00800\"\n}\nif (score_diff < 0)\n{\n    msg.score_diff_color = \"#FF0000\"\n}\n\nlet contestcall_qso_total = flow.get('qso_total');\nlet qso_diff = qso_total - contestcall_qso_total;\n\nif (qso_diff > 0)\n{\n    msg.qso_diff_color = \"#00800\"\n}\nif (qso_diff < 0)\n{\n    msg.qso_diff_color = \"#FF0000\"\n}\n\nlet contestcall_mult_total = flow.get('mult_total');\nlet mult_diff = mult_total - contestcall_mult_total;\n\nif (mult_diff > 0)\n{\n    msg.mult_diff_color = \"#00800\"\n}\nif (mult_diff < 0)\n{\n    msg.mult_diff_color = \"#FF0000\"\n}\n\nscore_total = Number(score_total).toLocaleString('US');\nqso_total = Number(qso_total).toLocaleString('US');\nmult_total = Number(mult_total).toLocaleString('US');\nscore_diff = Number(score_diff).toLocaleString('US');\nqso_diff = Number(qso_diff).toLocaleString('US');\nmult_diff = Number(mult_diff).toLocaleString('US');\n\nmsg.payload = {\n    contestcall:contestcall,\n    score_total:score_total,\n    qso_total:qso_total,\n    mult_total:mult_total,\n    qso_160:qso_160,\n    mult_160:mult_160,\n    qso_80:qso_80,\n    mult_80:mult_80,\n    qso_40:qso_40,\n    mult_40:mult_40,\n    qso_20:qso_20,\n    mult_20:mult_20,\n    qso_15:qso_15,\n    mult_15:mult_15,\n    qso_10:qso_10,\n    mult_10:qso_10,\n    qso_6:qso_6,\n    mult_6:qso_6,\n    last:last,\n    score_diff:score_diff,\n    qso_diff:qso_diff,\n    mult_diff:mult_diff\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "99c82b5fb751c6ed",
        "type": "switch",
        "z": "2eedd966294071cc",
        "name": "Contest Defined?",
        "property": "contestname",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 400,
        "wires": [
            [
                "24a259a2ccec0aa3",
                "bcbcd07949f8db3c"
            ]
        ]
    },
    {
        "id": "bcbcd07949f8db3c",
        "type": "debug",
        "z": "2eedd966294071cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 360,
        "wires": []
    },
    {
        "id": "53e82084023a5b13",
        "type": "debug",
        "z": "2eedd966294071cc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 360,
        "wires": []
    },
    {
        "id": "71401f7d4f43a121",
        "type": "debug",
        "z": "2eedd966294071cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 360,
        "wires": []
    },
    {
        "id": "3d1d79ab408d89ba",
        "type": "function",
        "z": "2eedd966294071cc",
        "name": "Is Error?",
        "func": "if (msg.payload.error == undefined)\n{\n    return msg\n}\nif (msg.payload.error != undefined)\n{\n    msg.payload = \"Contest not supported\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 400,
        "wires": [
            [
                "71401f7d4f43a121",
                "47c19763c58cc298"
            ]
        ]
    },
    {
        "id": "47c19763c58cc298",
        "type": "switch",
        "z": "2eedd966294071cc",
        "name": "Error?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Contest not supported",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Contest not supported",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "is not active",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1050,
        "y": 420,
        "wires": [
            [
                "8f683ff5386e05aa",
                "d04f1ae2a71ae89d",
                "94781e2098769144"
            ],
            [
                "a473a361ea0204a9",
                "de2f8c99e2657a88"
            ],
            [
                "a473a361ea0204a9"
            ]
        ]
    },
    {
        "id": "d04f1ae2a71ae89d",
        "type": "debug",
        "z": "2eedd966294071cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 240,
        "wires": []
    },
    {
        "id": "94781e2098769144",
        "type": "delay",
        "z": "2eedd966294071cc",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 820,
        "wires": [
            [
                "72725fb68585e15d",
                "c89d9e7c5c6dbd01",
                "b7652b3acedb4176",
                "9c40fc709b74e053"
            ]
        ]
    },
    {
        "id": "9ffae1d4a3d00d98",
        "type": "ui_toast",
        "z": "2eedd966294071cc",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Online Scoreboard Error",
        "x": 1430,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "68a0110ca1c8ef48",
        "type": "debug",
        "z": "2eedd966294071cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 560,
        "wires": []
    },
    {
        "id": "de2f8c99e2657a88",
        "type": "debug",
        "z": "2eedd966294071cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 460,
        "wires": []
    },
    {
        "id": "a473a361ea0204a9",
        "type": "rbe",
        "z": "2eedd966294071cc",
        "name": "RBE",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1230,
        "y": 420,
        "wires": [
            [
                "9ffae1d4a3d00d98"
            ]
        ]
    },
    {
        "id": "113bf358539c5697",
        "type": "link in",
        "z": "2eedd966294071cc",
        "name": "Online Scoreboard Clear Values IN",
        "links": [
            "2af9add8843cb280"
        ],
        "x": 2015,
        "y": 60,
        "wires": [
            [
                "37e4b21b4e33e0c3",
                "8aefb11753b2796c",
                "70e64b9bd15e013c",
                "0e31a52b6b89872f",
                "6737741cf9f9b1be",
                "b15ec6c3dfdd07d3",
                "572ac78c5ccff55a",
                "918a9d1fd39ca92e",
                "2c3bff2c367c9aec",
                "2f735fa6a5229447",
                "b214cb6ec396e43d",
                "e61e30248d8cd054",
                "8c98e4e56fb94301",
                "c67b8ec777994e30",
                "a4b19e2057f48fb2",
                "2acd926df2a9f72c",
                "735de06323bc64bf",
                "68ef53277b0a4e6c",
                "794d164c816e257f",
                "af33a3fdcc4879cd",
                "92aed6e70d6e12c7",
                "cfac8b3bf0f80aa9",
                "0fd8a6e0208f9927",
                "2d8923ad8f605cc6",
                "92ac0425e5ecd7d2",
                "2c0774791fbd12b2",
                "b12d11eee38de884",
                "b8ed0adf9c4d6765",
                "47a9dfec8f5a7b83",
                "34a1255633719e44",
                "e2878814996a0c88",
                "97cf056ef6c6af52",
                "0ca805fad7686e8b",
                "5d539a2da4325684",
                "ad5968515f6b63cb",
                "b6622194ef7fb89f",
                "67910a9971f0bdb8",
                "c793f9e35b0c0f42",
                "66f58f5d89ca6531",
                "e3e7883e4a48b4be",
                "de56b0511fa4c50f",
                "6434b303e7a6aee4",
                "08557f43923d8b8e",
                "cdf7fc8e28223fa8"
            ]
        ]
    },
    {
        "id": "66cc75cee374cd17",
        "type": "debug",
        "z": "2eedd966294071cc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1690,
        "y": 60,
        "wires": []
    },
    {
        "id": "8ea1df71d732a139",
        "type": "link out",
        "z": "2eedd966294071cc",
        "name": "Contest Call OUT",
        "mode": "link",
        "links": [
            "b96af53874b6fb61"
        ],
        "x": 495,
        "y": 580,
        "wires": []
    },
    {
        "id": "6ccb7eca978143c2",
        "type": "link out",
        "z": "2eedd966294071cc",
        "name": "Chase Call 1 OUT",
        "mode": "link",
        "links": [
            "da1243301037944c"
        ],
        "x": 495,
        "y": 640,
        "wires": []
    },
    {
        "id": "12fea413fec156be",
        "type": "link out",
        "z": "2eedd966294071cc",
        "name": "Chase Call 2 OUT",
        "mode": "link",
        "links": [
            "6f2b2f32fe7c6e4d"
        ],
        "x": 495,
        "y": 700,
        "wires": []
    },
    {
        "id": "f36954fb7c5c492d",
        "type": "link out",
        "z": "2eedd966294071cc",
        "name": "Chase Call 3 OUT",
        "mode": "link",
        "links": [
            "d1d267820faf09ff"
        ],
        "x": 495,
        "y": 760,
        "wires": []
    },
    {
        "id": "7b71578337dbbc61",
        "type": "link out",
        "z": "2eedd966294071cc",
        "name": "Chase Call 4 OUT",
        "mode": "link",
        "links": [
            "b41ce8230b517cb0"
        ],
        "x": 495,
        "y": 820,
        "wires": []
    },
    {
        "id": "4d85eaa61498c5ca",
        "type": "link in",
        "z": "2eedd966294071cc",
        "name": "Scoreboard HTTP Get IN",
        "links": [
            "3047a9ba16e10212"
        ],
        "x": 175,
        "y": 340,
        "wires": [
            [
                "fd0abe18c04d6459"
            ]
        ]
    },
    {
        "id": "89fc9cc83694f2c7",
        "type": "comment",
        "z": "2eedd966294071cc",
        "name": "Link OUT to Toolbar Tab",
        "info": "",
        "x": 280,
        "y": 700,
        "wires": []
    },
    {
        "id": "fbfcea8b946db837",
        "type": "debug",
        "z": "2eedd966294071cc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 40,
        "wires": []
    },
    {
        "id": "43f75a01.74e884",
        "type": "inject",
        "z": "3e52b5d54104d7f0",
        "name": "Backup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "d547483e.775438"
            ]
        ]
    },
    {
        "id": "d547483e.775438",
        "type": "function",
        "z": "3e52b5d54104d7f0",
        "name": "Prep data",
        "func": "// global variables separated by semicolon to be saved\nvar globallist = \"PC1;PC2;PC3;PC4;PC5;PC6;Q1hrhigh;Q1hrlow;Q2hrhigh;Q2hrlow;contestcallsign;contesttype;dblookup;hamqthusername;hamqthpassword;qrzusername;qrzpassword;homelat;homelon;maplabels;maplabeltype;opsorttype;saymulti;skimmercall;ttl;distance_measurement;category;class;OS_Type;livedata\";\nvar mylist = globallist.split(\";\");\n\nvar outputs = [];\n\nfor (i=0; i<mylist.length; i++) {\n    outputs.push({ key : mylist[i], type: typeof global.get(mylist[i]), value: global.get(mylist[i])});\n}\n      \n      \nmsg.payload = outputs;\nreturn msg;\n\n//msg.payload=typeof global.get(\"torrent_keywords\");\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 220,
        "wires": [
            [
                "2c2d4269.a876de"
            ]
        ]
    },
    {
        "id": "9cec5c0d.e6de",
        "type": "comment",
        "z": "3e52b5d54104d7f0",
        "name": "Save global variables",
        "info": "",
        "x": 172,
        "y": 175,
        "wires": []
    },
    {
        "id": "666ca426.5be96c",
        "type": "comment",
        "z": "3e52b5d54104d7f0",
        "name": "Restore global variables",
        "info": "",
        "x": 400,
        "y": 460,
        "wires": []
    },
    {
        "id": "8e7e958d.ce6698",
        "type": "inject",
        "z": "3e52b5d54104d7f0",
        "name": "Startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 500,
        "wires": [
            [
                "d8fa7064.9f60a"
            ]
        ]
    },
    {
        "id": "4cb14d0.afc25b4",
        "type": "file",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "filename": "global.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 960,
        "y": 180,
        "wires": [
            [
                "e58232f49764e24f",
                "80a3a373ae6e2eda",
                "ff541f0fdc6e0813"
            ]
        ]
    },
    {
        "id": "d8fa7064.9f60a",
        "type": "file in",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "filename": "global.json",
        "format": "utf8",
        "allProps": false,
        "x": 590,
        "y": 500,
        "wires": [
            [
                "3cdb4133.0d461e"
            ]
        ]
    },
    {
        "id": "14b4208c.99aaaf",
        "type": "function",
        "z": "3e52b5d54104d7f0",
        "name": "Restore",
        "func": "var output = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n    switch (msg.payload[i].type) {\n        case 'undefined': \n            // the global variable probably had no value, nothing needs to be restored\n            output.push(msg.payload[i].key + \" is undefined.\");\n            break;\n        case 'number':\n            if (msg.payload[i].value===\"NaN\") {\n                // there is no valid value to be restored, skip this variable\n                output.push(msg.payload[i].key + \" is NaN.\");\n            } else {\n                if (msg.payload[i].value.toString().indexOf(\".\")>-1) {\n                    // the value appears to be a float\n                    global.set(msg.payload[i].key,parseFloat(msg.payload[i].value));\n                    output.push(msg.payload[i].key + \" is restored to \" + msg.payload[i].value);\n                } else {\n                    global.set(msg.payload[i].key,parseInt(msg.payload[i].value));\n                    output.push(msg.payload[i].key + \" is restored to \" + msg.payload[i].value);\n                }\n            }\n            break;\n        case 'string':\n            global.set(msg.payload[i].key,msg.payload[i].value);\n            output.push(msg.payload[i].key + \" is restored to \" + msg.payload[i].value);\n            break;\n        case 'boolean':\n            global.set(msg.payload[i].key,msg.payload[i].value===\"true\");\n            output.push(msg.payload[i].key + \" is restored to \" + msg.payload[i].value);\n            break;\n    }\n}\n\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "2c2d4269.a876de",
        "type": "json",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "x": 550,
        "y": 220,
        "wires": [
            [
                "e2445f2b80bc515e"
            ]
        ]
    },
    {
        "id": "3cdb4133.0d461e",
        "type": "json",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "x": 790,
        "y": 500,
        "wires": [
            [
                "14b4208c.99aaaf",
                "894d6435bdb8fc81"
            ]
        ]
    },
    {
        "id": "e58232f49764e24f",
        "type": "json",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1450,
        "y": 180,
        "wires": [
            [
                "7d9aa86aac29d6cd"
            ]
        ]
    },
    {
        "id": "3f8e6bba1a03f1cc",
        "type": "ui_button",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "group": "535f5d4509d91b5e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Backup",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "d547483e.775438"
            ]
        ]
    },
    {
        "id": "80a3a373ae6e2eda",
        "type": "change",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Backup File Complete To global.json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 260,
        "wires": [
            [
                "7d74c21038089afd"
            ]
        ]
    },
    {
        "id": "7d74c21038089afd",
        "type": "ui_toast",
        "z": "3e52b5d54104d7f0",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Backup Dialog Box",
        "x": 1750,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8417c17e9d44c60c",
        "type": "ui_button",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "group": "535f5d4509d91b5e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Restore",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 560,
        "wires": [
            [
                "d8fa7064.9f60a"
            ]
        ]
    },
    {
        "id": "894d6435bdb8fc81",
        "type": "change",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Restore Complete From global.json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 580,
        "wires": [
            [
                "3fc6b038acd1dd64"
            ]
        ]
    },
    {
        "id": "3fc6b038acd1dd64",
        "type": "ui_toast",
        "z": "3e52b5d54104d7f0",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Restore Dialog Box",
        "x": 1650,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "c85e5115fdd0c173",
        "type": "catch",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "scope": [
            "4cb14d0.afc25b4"
        ],
        "uncaught": false,
        "x": 1190,
        "y": 320,
        "wires": [
            [
                "95830ed52e3781db"
            ]
        ]
    },
    {
        "id": "95830ed52e3781db",
        "type": "change",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 320,
        "wires": [
            [
                "7d74c21038089afd"
            ]
        ]
    },
    {
        "id": "5ad33a23425e24ef",
        "type": "catch",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "scope": [
            "d8fa7064.9f60a"
        ],
        "uncaught": false,
        "x": 950,
        "y": 620,
        "wires": [
            [
                "5c231f1f0fb2e5ec"
            ]
        ]
    },
    {
        "id": "5c231f1f0fb2e5ec",
        "type": "change",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 620,
        "wires": [
            [
                "3fc6b038acd1dd64"
            ]
        ]
    },
    {
        "id": "41b5fcb7d3468568",
        "type": "ui_button",
        "z": "3e52b5d54104d7f0",
        "name": "Upgrade Contest Dashboard Button",
        "group": "71cb3368617e6c9e",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Upgrade Contest Dashboard",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "This Upgrade Will Reboot Your Pi - Continue?",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 300,
        "y": 780,
        "wires": [
            [
                "b7489dd59685c7a3"
            ]
        ]
    },
    {
        "id": "821bb77829102950",
        "type": "exec",
        "z": "3e52b5d54104d7f0",
        "command": "cd ~/.node-red/projects/Node-Red-Contesting-Dashboard && git restore flow.json && git pull && sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 1330,
        "y": 780,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b7489dd59685c7a3",
        "type": "ui_toast",
        "z": "3e52b5d54104d7f0",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 570,
        "y": 780,
        "wires": [
            [
                "a5d3c0fbf1549f70"
            ]
        ]
    },
    {
        "id": "b3e878177c786d3c",
        "type": "exec",
        "z": "3e52b5d54104d7f0",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Reboot",
        "x": 520,
        "y": 1000,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f14da265f561b94b",
        "type": "ui_button",
        "z": "3e52b5d54104d7f0",
        "name": "Manual Reboot Button",
        "group": "71cb3368617e6c9e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Manual Reboot",
        "tooltip": "",
        "color": "#FFFFFF",
        "bgcolor": "#FF0000",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 299.7777786254883,
        "y": 1000.0000238418579,
        "wires": [
            [
                "b3e878177c786d3c"
            ]
        ]
    },
    {
        "id": "e5ca3a2218a318ed",
        "type": "debug",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 680,
        "wires": []
    },
    {
        "id": "a5d3c0fbf1549f70",
        "type": "switch",
        "z": "3e52b5d54104d7f0",
        "name": "If OK",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 800,
        "y": 780,
        "wires": [
            [
                "e5ca3a2218a318ed",
                "821bb77829102950"
            ]
        ]
    },
    {
        "id": "ac04ed91a725685c",
        "type": "ui_dropdown",
        "z": "3e52b5d54104d7f0",
        "name": "OS Type Dropdown",
        "label": "OS Type",
        "tooltip": "",
        "place": "Select option",
        "group": "535f5d4509d91b5e",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Linux",
                "value": "linux",
                "type": "str"
            },
            {
                "label": "Windows",
                "value": "windows",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 610,
        "y": 100,
        "wires": [
            [
                "4ef75448c0a0727e"
            ]
        ]
    },
    {
        "id": "4ef75448c0a0727e",
        "type": "function",
        "z": "3e52b5d54104d7f0",
        "name": "Set OS",
        "func": "x = msg.payload\nglobal.set('OS_Type',x)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 100,
        "wires": [
            [
                "b1ecb8f1e850c3aa"
            ]
        ]
    },
    {
        "id": "4563a2255fd10963",
        "type": "inject",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 100,
        "wires": [
            [
                "d92537707e675d78"
            ]
        ]
    },
    {
        "id": "4ebc90a89d058982",
        "type": "comment",
        "z": "3e52b5d54104d7f0",
        "name": "OS Type",
        "info": "",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "d92537707e675d78",
        "type": "function",
        "z": "3e52b5d54104d7f0",
        "name": "Get OS Type",
        "func": "msg.payload = global.get('OS_Type')\n\nif (msg.payload == undefined)\n{\n    msg.payload = \"linux\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 100,
        "wires": [
            [
                "ac04ed91a725685c"
            ]
        ]
    },
    {
        "id": "b1ecb8f1e850c3aa",
        "type": "ui_text",
        "z": "3e52b5d54104d7f0",
        "group": "535f5d4509d91b5e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "OS Type",
        "label": "OS Type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 920,
        "y": 100,
        "wires": []
    },
    {
        "id": "e2445f2b80bc515e",
        "type": "switch",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "property": "OS_Type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "linux",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OSX",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "windows",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 710,
        "y": 220,
        "wires": [
            [
                "4cb14d0.afc25b4"
            ],
            [],
            [
                "9d6f6c5738444b27"
            ]
        ]
    },
    {
        "id": "9d6f6c5738444b27",
        "type": "file",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "filename": "%USERPROFILE%\\documents\\global.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "e58232f49764e24f",
                "80a3a373ae6e2eda"
            ]
        ]
    },
    {
        "id": "ff541f0fdc6e0813",
        "type": "debug",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 100,
        "wires": []
    },
    {
        "id": "7d9aa86aac29d6cd",
        "type": "debug",
        "z": "3e52b5d54104d7f0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1680,
        "y": 140,
        "wires": []
    },
    {
        "id": "bb1f3c069392c7e7",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "d": true,
        "group": "8fb11826e4a47fc9",
        "name": "Contest Clock Toolbar Header (original)",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<script id=\"toolbar\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n        // add contestcall\n        var div1 = $('<div/>');\n        var p1 = $('<p /id=\"header-contestname\">');\n        var p2 = $('<p /id=\"header-contestcall\">');\n        var p3 = $('<p /id=\"header-score_total\">');\n        var p5 = $('<p /id=\"header-chase1_call\">');\n        var p6 = $('<p /id=\"header-chase1_score_total\">');\n        var p8 = $('<p /id=\"header-chase2_call\">');\n        var p9 = $('<p /id=\"header-chase2_score_total\">');\n        var p11 = $('<p /id=\"header-chase3_call\">');\n        var p12 = $('<p /id=\"header-chase3_score_total\">');\n        var p14 = $('<p /id=\"header-chase4_call\">');\n        var p15 = $('<p /id=\"header-chase4_score_total\">');\n      \n        div1.append(p1);\n        div1.append(p2);\n        div1.append(p3);\n        div1.append(p5);\n        div1.append(p6);\n        div1.append(p8);\n        div1.append(p9);\n        div1.append(p11);\n        div1.append(p12);\n        div1.append(p14);\n        div1.append(p15);\n        \n        div1[0].style.width = 'auto';\n        div1[0].style.margin = 'auto';\n        div1[0].style.display = 'flex';\n        div1[0].style.color = '#c4d0ee';\n\t\t\n        p1[0].style.margin = '5px';\n        p1[0].style.width = 'auto';\n        p2[0].style.margin = '5px'; \n        p2[0].style.color = 'white';\n        p3[0].style.margin = '5px';\n        p3[0].style.color = 'white';\n        p5[0].style.margin = '5px';\n        p5[0].style.color = 'white';\n        p6[0].style.margin = 'auto';\n        p6[0].style.color = 'white';\n        p8[0].style.margin = '5px';\n        p8[0].style.color = 'white';\n        p9[0].style.margin = 'auto';\n        p9[0].style.color = 'white';\n        p11[0].style.margin = '5px';\n        p11[0].style.color = 'white';\n        p12[0].style.margin = 'auto';\n        p12[0].style.color = 'white';\n        p14[0].style.margin = '5px';\n        p14[0].style.color = 'white';\n        p15[0].style.margin = 'auto';\n        p15[0].style.color = 'white';\n           \n        // add clock\n        var div3 = $('<div/>');\n        var p = $('<p/>');\n        div3.append(p);\n        div3[0].style.display = 'flex';\n        function displayTime() {\n        var d = Date();\n        var options = { timeZone: 'UTC', timeZoneName: 'short', year: '2-digit', month: 'numeric', day: 'numeric', hourCycle:\n        'h23', hour: `2-digit`, minute: `2-digit`};\n        p.text(new Date().toLocaleString('en-US', options));\n        }\n        \n        clockInterval = setInterval(displayTime, 1000);\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            toolbar.append(div3);\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 50);\n    });</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 980,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "bb1d9e5d2bf9fa26",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "updateContestCall",
        "order": 16,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-contestcall\").text(msg.payload.contestcall).prop('title','Contest Call');\n              //  $(\"#header-contestcall\").prop('title','Contest Call');\n                $(\"#header-score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Contest Call Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-contestcall\").text(\"\");\n                $(\"#header-score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 240,
        "wires": [
            [
                "f87ba558851c95d3"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "081d52fa1757bc4b",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "UpdateContestName",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"7eceb14e06091850\"]').hide();\n        scope.$watch('msg', function(msg) {\n        if ((msg.payload.contestname) != null){\n            $(\"#header-contestname\").text(msg.payload.contestname);\n             }\n        if ((msg.payload.contestname) == null){\n            $(\"#header-contestname\").text(\"No Active Contest\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 600,
        "y": 200,
        "wires": [
            [
                "9816b47ccbaab892"
            ]
        ]
    },
    {
        "id": "b3a0694939efd742",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "UpdateChaseCall1",
        "order": 17,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase1_call\").text(msg.payload.contestcall).prop('title','Call 1');\n                $(\"#header-chase1_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 1 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase1_call\").text(\"\");\n                $(\"#header-chase1_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 280,
        "wires": [
            [
                "777a2ec108512a04"
            ]
        ]
    },
    {
        "id": "56319f879fcbb9df",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "UpdateChaseCall2",
        "order": 18,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase2_call\").text(msg.payload.contestcall).prop('title','Call 2');\n                $(\"#header-chase2_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 2 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase2_call\").text(\"\");\n                $(\"#header-chase2_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 320,
        "wires": [
            [
                "c3bf6102f3b7edbe"
            ]
        ]
    },
    {
        "id": "53a760479d2b2d01",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "UpdateChaseCall3",
        "order": 19,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase3_call\").text(msg.payload.contestcall).prop('title','Call 3');\n                $(\"#header-chase3_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 3 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase3_call\").text(\"\");\n                $(\"#header-chase3_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 360,
        "wires": [
            [
                "f0760a3ec8543b8b"
            ]
        ]
    },
    {
        "id": "daf1cf979348d132",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "UpdateChaseCall4",
        "order": 20,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase4_call\").text(msg.payload.contestcall).prop('title','Call 4');\n                $(\"#header-chase4_score_total\").text(msg.payload.score_total).prop('title','Call 4 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase4_call\").text(\"\");\n                $(\"#header-chase4_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 400,
        "wires": [
            [
                "1afc1e4e8a6a39ac"
            ]
        ]
    },
    {
        "id": "b96af53874b6fb61",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar Chase Call1 IN",
        "links": [
            "8ea1df71d732a139"
        ],
        "x": 255,
        "y": 240,
        "wires": [
            [
                "bb1d9e5d2bf9fa26"
            ]
        ]
    },
    {
        "id": "da1243301037944c",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar Chase Call 2 IN",
        "links": [
            "6ccb7eca978143c2"
        ],
        "x": 255,
        "y": 280,
        "wires": [
            [
                "b3a0694939efd742"
            ]
        ]
    },
    {
        "id": "6f2b2f32fe7c6e4d",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar Chase Call 3 IN",
        "links": [
            "12fea413fec156be"
        ],
        "x": 255,
        "y": 320,
        "wires": [
            [
                "56319f879fcbb9df"
            ]
        ]
    },
    {
        "id": "d1d267820faf09ff",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar Chase Call 3 IN",
        "links": [
            "f36954fb7c5c492d"
        ],
        "x": 255,
        "y": 360,
        "wires": [
            [
                "53a760479d2b2d01"
            ]
        ]
    },
    {
        "id": "b41ce8230b517cb0",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar Chase Call 4 IN",
        "links": [
            "7b71578337dbbc61"
        ],
        "x": 255,
        "y": 400,
        "wires": [
            [
                "daf1cf979348d132"
            ]
        ]
    },
    {
        "id": "8d2172a22f29a548",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "getContest",
        "func": "let contestname = global.get('contestname');\nmsg.payload = {contestname: contestname};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 200,
        "wires": [
            [
                "081d52fa1757bc4b"
            ]
        ]
    },
    {
        "id": "469d9b45aa858755",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar Contest Call IN",
        "links": [
            "b1897541b4842264"
        ],
        "x": 255,
        "y": 200,
        "wires": [
            [
                "8d2172a22f29a548"
            ]
        ]
    },
    {
        "id": "f87ba558851c95d3",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "updateContestCall",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-contestcall\").text(msg.payload.contestcall).prop('title','Contest Call');\n              //  $(\"#header-contestcall\").prop('title','Contest Call');\n                $(\"#header-score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Contest Call Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-contestcall\").text(\"\");\n                $(\"#header-score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 240,
        "wires": [
            [
                "5d10e57fd09e8a50"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "9816b47ccbaab892",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "UpdateContestName",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"7eceb14e06091850\"]').hide();\n        scope.$watch('msg', function(msg) {\n        if ((msg.payload.contestname) != null){\n            $(\"#header-contestname\").text(msg.payload.contestname);\n             }\n        if ((msg.payload.contestname) == null){\n            $(\"#header-contestname\").text(\"No Active Contest\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 200,
        "wires": [
            [
                "5a833e6c4b2da14d"
            ]
        ]
    },
    {
        "id": "777a2ec108512a04",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "UpdateChaseCall1",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase1_call\").text(msg.payload.contestcall).prop('title','Call 1');\n                $(\"#header-chase1_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 1 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase1_call\").text(\"\");\n                $(\"#header-chase1_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 280,
        "wires": [
            [
                "3e456c894fdf82ba"
            ]
        ]
    },
    {
        "id": "c3bf6102f3b7edbe",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "UpdateChaseCall2",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase2_call\").text(msg.payload.contestcall).prop('title','Call 2');\n                $(\"#header-chase2_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 2 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase2_call\").text(\"\");\n                $(\"#header-chase2_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 320,
        "wires": [
            [
                "68b583c8ccfe257a"
            ]
        ]
    },
    {
        "id": "f0760a3ec8543b8b",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "UpdateChaseCall3",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase3_call\").text(msg.payload.contestcall).prop('title','Call 3');\n                $(\"#header-chase3_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 3 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase3_call\").text(\"\");\n                $(\"#header-chase3_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 360,
        "wires": [
            [
                "a04be73c7b807236"
            ]
        ]
    },
    {
        "id": "1afc1e4e8a6a39ac",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "UpdateChaseCall4",
        "order": 16,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase4_call\").text(msg.payload.contestcall).prop('title','Call 4');\n                $(\"#header-chase4_score_total\").text(msg.payload.score_total).prop('title','Call 4 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase4_call\").text(\"\");\n                $(\"#header-chase4_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 400,
        "wires": [
            [
                "11a30b25462e5d2f"
            ]
        ]
    },
    {
        "id": "5d10e57fd09e8a50",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "updateContestCall",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-contestcall\").text(msg.payload.contestcall).prop('title','Contest Call');\n              //  $(\"#header-contestcall\").prop('title','Contest Call');\n                $(\"#header-score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Contest Call Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-contestcall\").text(\"\");\n                $(\"#header-score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 240,
        "wires": [
            [
                "844d8f7c2441d8b1"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "5a833e6c4b2da14d",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "UpdateContestName",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"7eceb14e06091850\"]').hide();\n        scope.$watch('msg', function(msg) {\n        if ((msg.payload.contestname) != null){\n            $(\"#header-contestname\").text(msg.payload.contestname);\n             }\n        if ((msg.payload.contestname) == null){\n            $(\"#header-contestname\").text(\"No Active Contest\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1160,
        "y": 200,
        "wires": [
            [
                "b19b207ee67ddde5"
            ]
        ]
    },
    {
        "id": "3e456c894fdf82ba",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "UpdateChaseCall1",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase1_call\").text(msg.payload.contestcall).prop('title','Call 1');\n                $(\"#header-chase1_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 1 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase1_call\").text(\"\");\n                $(\"#header-chase1_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 280,
        "wires": [
            [
                "ef7a738f2ee8d5f4"
            ]
        ]
    },
    {
        "id": "68b583c8ccfe257a",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "UpdateChaseCall2",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase2_call\").text(msg.payload.contestcall).prop('title','Call 2');\n                $(\"#header-chase2_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 2 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase2_call\").text(\"\");\n                $(\"#header-chase2_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 320,
        "wires": [
            [
                "4ca5cb31f4b145f8"
            ]
        ]
    },
    {
        "id": "a04be73c7b807236",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "UpdateChaseCall3",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase3_call\").text(msg.payload.contestcall).prop('title','Call 3');\n                $(\"#header-chase3_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 3 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase3_call\").text(\"\");\n                $(\"#header-chase3_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 360,
        "wires": [
            [
                "5329c1a37c80ba7d"
            ]
        ]
    },
    {
        "id": "11a30b25462e5d2f",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "UpdateChaseCall4",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase4_call\").text(msg.payload.contestcall).prop('title','Call 4');\n                $(\"#header-chase4_score_total\").text(msg.payload.score_total).prop('title','Call 4 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase4_call\").text(\"\");\n                $(\"#header-chase4_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 400,
        "wires": [
            [
                "d792aff5c8b37a15"
            ]
        ]
    },
    {
        "id": "48f46d5dd8960e55",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "0e3bf66f6ee6d572",
        "name": "ClearContestCalls",
        "func": "let contestname = global.get('contestname');\nif (contestname == null){\n    msg.payload = {contestname: '', score_total: ''};\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "bb1d9e5d2bf9fa26",
                "b3a0694939efd742",
                "56319f879fcbb9df",
                "53a760479d2b2d01",
                "daf1cf979348d132"
            ]
        ]
    },
    {
        "id": "654b552f9e64203e",
        "type": "inject",
        "z": "b73cc2bb5f424b69",
        "g": "0e3bf66f6ee6d572",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "48f46d5dd8960e55"
            ]
        ]
    },
    {
        "id": "8b78fc923dbd5012",
        "type": "ui_ui_control",
        "z": "b73cc2bb5f424b69",
        "g": "b90980234a451f8d",
        "name": "",
        "events": "all",
        "x": 1280,
        "y": 80,
        "wires": [
            [
                "3047a9ba16e10212"
            ]
        ]
    },
    {
        "id": "3047a9ba16e10212",
        "type": "link out",
        "z": "b73cc2bb5f424b69",
        "g": "b90980234a451f8d",
        "name": "Ui Update OUT",
        "mode": "link",
        "links": [
            "4d85eaa61498c5ca",
            "a6c13f77b15cc2d8"
        ],
        "x": 1425,
        "y": 80,
        "wires": []
    },
    {
        "id": "844d8f7c2441d8b1",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "updateContestCall",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-contestcall\").text(msg.payload.contestcall).prop('title','Contest Call');\n              //  $(\"#header-contestcall\").prop('title','Contest Call');\n                $(\"#header-score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Contest Call Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-contestcall\").text(\"\");\n                $(\"#header-score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1490,
        "y": 240,
        "wires": [
            [
                "7f2303018ff45ad8"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "b19b207ee67ddde5",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "UpdateContestName",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"7eceb14e06091850\"]').hide();\n        scope.$watch('msg', function(msg) {\n        if ((msg.payload.contestname) != null){\n            $(\"#header-contestname\").text(msg.payload.contestname);\n             }\n        if ((msg.payload.contestname) == null){\n            $(\"#header-contestname\").text(\"No Active Contest\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1500,
        "y": 200,
        "wires": [
            [
                "e95c82ba390544e6"
            ]
        ]
    },
    {
        "id": "ef7a738f2ee8d5f4",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "UpdateChaseCall1",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase1_call\").text(msg.payload.contestcall).prop('title','Call 1');\n                $(\"#header-chase1_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 1 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase1_call\").text(\"\");\n                $(\"#header-chase1_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1490,
        "y": 280,
        "wires": [
            [
                "a189d5911e5a6829"
            ]
        ]
    },
    {
        "id": "4ca5cb31f4b145f8",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "UpdateChaseCall2",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase2_call\").text(msg.payload.contestcall).prop('title','Call 2');\n                $(\"#header-chase2_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 2 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase2_call\").text(\"\");\n                $(\"#header-chase2_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1490,
        "y": 320,
        "wires": [
            [
                "7073cd8d304f642e"
            ]
        ]
    },
    {
        "id": "5329c1a37c80ba7d",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "UpdateChaseCall3",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase3_call\").text(msg.payload.contestcall).prop('title','Call 3');\n                $(\"#header-chase3_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 3 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase3_call\").text(\"\");\n                $(\"#header-chase3_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1490,
        "y": 360,
        "wires": [
            [
                "4c7d5d74d7f6d688"
            ]
        ]
    },
    {
        "id": "d792aff5c8b37a15",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "UpdateChaseCall4",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase4_call\").text(msg.payload.contestcall).prop('title','Call 4');\n                $(\"#header-chase4_score_total\").text(msg.payload.score_total).prop('title','Call 4 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase4_call\").text(\"\");\n                $(\"#header-chase4_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1490,
        "y": 400,
        "wires": [
            [
                "c284f99e2bfdb952"
            ]
        ]
    },
    {
        "id": "e4ea31cc963ad392",
        "type": "comment",
        "z": "b73cc2bb5f424b69",
        "name": "Contest Toolbar Display",
        "info": "# Contest Call Toolbar displays \nThe Contest Toolbar update will display the contest name, contest call/score, and chase call/score when an active contest is configured.  If there is no contest the display will show 'No Active Contest'.  During a contest if you mouse over the call or score of any object in the toolbar, a pop up will display the identifier.\n\n## Configuration\nIf you have a toolbar in your flow you must disable it in order for the contest call toolbar to work properly \n\nContest Name is derived from context and will show when the Online Scoreboard Contest Name is set.  The link in node from the Config & Reset Contestname function provides the flow data\n\nContest Call and Chase Call data is derived from link in nodes from the Online Scoreboard flow.   The link is joined to the output of the Breakout Contest score functions\n\n## UI Update on refresh\nThe tool bar is currently configured to update the Dashboard,  Online Scoreboard, Spectator Dashboard,  RBN Spots Dashboard, and Band Stats.   If you want to update aditional pages you will need to copy the Contest Toolbar UI update (anyone), and then wire the output of the RBN Spots to your new UI Update.   You will need to update the group for each of the UI nodes in the group to the dashboard page you want update (i.e = Radio Info > Radio 1).  You only need to add it to one group per dashboard page you want to update on refresh",
        "x": 600,
        "y": 40,
        "wires": []
    },
    {
        "id": "7f2303018ff45ad8",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "updateContestCall",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-contestcall\").text(msg.payload.contestcall).prop('title','Contest Call');\n              //  $(\"#header-contestcall\").prop('title','Contest Call');\n                $(\"#header-score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Contest Call Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-contestcall\").text(\"\");\n                $(\"#header-score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1770,
        "y": 240,
        "wires": [
            [
                "8d8c2c7254287149"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "e95c82ba390544e6",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "UpdateContestName",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"7eceb14e06091850\"]').hide();\n        scope.$watch('msg', function(msg) {\n        if ((msg.payload.contestname) != null){\n            $(\"#header-contestname\").text(msg.payload.contestname);\n             }\n        if ((msg.payload.contestname) == null){\n            $(\"#header-contestname\").text(\"No Active Contest\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1780,
        "y": 200,
        "wires": [
            [
                "6622e7e7a8741c0e"
            ]
        ]
    },
    {
        "id": "a189d5911e5a6829",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "UpdateChaseCall1",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase1_call\").text(msg.payload.contestcall).prop('title','Call 1');\n                $(\"#header-chase1_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 1 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase1_call\").text(\"\");\n                $(\"#header-chase1_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1770,
        "y": 280,
        "wires": [
            [
                "3bd9135654310792"
            ]
        ]
    },
    {
        "id": "7073cd8d304f642e",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "UpdateChaseCall2",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase2_call\").text(msg.payload.contestcall).prop('title','Call 2');\n                $(\"#header-chase2_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 2 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase2_call\").text(\"\");\n                $(\"#header-chase2_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1770,
        "y": 320,
        "wires": [
            [
                "1ef1df6438a74955"
            ]
        ]
    },
    {
        "id": "4c7d5d74d7f6d688",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "UpdateChaseCall3",
        "order": 9,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase3_call\").text(msg.payload.contestcall).prop('title','Call 3');\n                $(\"#header-chase3_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 3 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase3_call\").text(\"\");\n                $(\"#header-chase3_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1770,
        "y": 360,
        "wires": [
            [
                "2dafd2c2dab98d98"
            ]
        ]
    },
    {
        "id": "c284f99e2bfdb952",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "UpdateChaseCall4",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase4_call\").text(msg.payload.contestcall).prop('title','Call 4');\n                $(\"#header-chase4_score_total\").text(msg.payload.score_total).prop('title','Call 4 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase4_call\").text(\"\");\n                $(\"#header-chase4_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1770,
        "y": 400,
        "wires": [
            [
                "d0c78d62f35e3d16"
            ]
        ]
    },
    {
        "id": "6c3aabd78a8dbe6b",
        "type": "inject",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 880,
        "wires": [
            [
                "393223b190ba95f3"
            ]
        ]
    },
    {
        "id": "2570533c0ddd961a",
        "type": "websocket out",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "server": "",
        "client": "bea4993f.85f4d8",
        "x": 830,
        "y": 880,
        "wires": []
    },
    {
        "id": "e8923d3119f9de10",
        "type": "websocket in",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "server": "",
        "client": "bea4993f.85f4d8",
        "x": 180,
        "y": 840,
        "wires": [
            [
                "bb38d5607155fdac"
            ]
        ]
    },
    {
        "id": "bb38d5607155fdac",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "Decode Payload",
        "func": "function decode(b) {\n var a, e = {},\n d = b.split(\"\"),\n c = d[0],\n f = c,\n g = [c],\n h = 256;\n o = h;\n for (b = 1; b < d.length; b++) a = d[b].charCodeAt(0), a = h > a ? d[b] : e[a] ? e[a] : f + c, g.push(a), c = a.charAt(0), e[o] = f + c, o++, f = a;\n return g.join(\"\")\n}\n\nreturn {\n payload: decode(msg.payload)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 840,
        "wires": [
            [
                "e0a0fa6ae9f41024"
            ]
        ]
    },
    {
        "id": "d769911bfcaff494",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "pushAudible",
        "func": "if ((msg.topic) === 'lightning'){\n   return {payload: 'Warning, Lightning Alert'};\n} else return null;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 720,
        "wires": [
            [
                "b5b388156ec5eca9"
            ]
        ]
    },
    {
        "id": "e733af43f8c28c46",
        "type": "ui_audio",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "group": "6e89e85d75f82df1",
        "voice": "Microsoft Zira - English (United States)",
        "always": true,
        "x": 1980,
        "y": 720,
        "wires": []
    },
    {
        "id": "e0a0fa6ae9f41024",
        "type": "json",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "convert JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 640,
        "y": 840,
        "wires": [
            [
                "64ce0bfa9e1942bb"
            ]
        ]
    },
    {
        "id": "64ce0bfa9e1942bb",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "setDistance",
        "func": "function arePointsNear(checkPoint, centerPoint) {\n var ky = 40000 / 360;\n var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\n var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\n var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\n return Math.sqrt(dx * dx + dy * dy);\n}\n\nvar strike = { lat: msg.payload.lat, lng: msg.payload.lon };\n\nlet hlat = global.get('homelat');\nlet hlng = global.get('homelon');\n\n\n// set latitute + longitude accordingly\nvar home = { lat: hlat, lng: hlng };\n\nvar n = arePointsNear(strike, home);\nn = Math.round(n);\n\nmsg.payload.hlat = hlat;\nmsg.payload.hlon = hlng;\nmsg.payload.strike_lat = strike.lat;\nmsg.payload.strike_lon = strike.lng;\nmsg.payload.strike_distance = n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 840,
        "wires": [
            [
                "3ba91bda918482b2",
                "53becfe3676d44bd"
            ]
        ]
    },
    {
        "id": "53692007691b251a",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "BlitzunorgUi",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"a86c0f808507a0cc\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg.payload.length !== 0) {\n                $(\"#header-icon\").html(\"<i class='fa fa-bolt fa-2x' aria-hidden='true'></i>\").css(\"color\",(msg.color));\n                $(\"#header-lightning\").text(msg.payload); \n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 440,
        "wires": [
            [
                "fb4aa4fd72787370"
            ]
        ]
    },
    {
        "id": "fb4aa4fd72787370",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "BlitzunorgUi",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"a86c0f808507a0cc\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg.payload.length !== 0) {\n                $(\"#header-icon\").html(\"<i class='fa fa-bolt fa-2x' aria-hidden='true'></i>\").css(\"color\",(msg.color));\n                $(\"#header-lightning\").text(msg.payload); \n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 440,
        "wires": [
            [
                "431c69a2758e9d6f"
            ]
        ]
    },
    {
        "id": "ee06b24b57cee89b",
        "type": "inject",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "color",
                "v": "red",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "lightning",
        "payload": "< 3 Km",
        "payloadType": "str",
        "x": 1400,
        "y": 720,
        "wires": [
            [
                "d769911bfcaff494",
                "d34ab878fcdc07ae"
            ]
        ]
    },
    {
        "id": "1695ae9bcb4fd785",
        "type": "comment",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "Readme",
        "info": "# Blizuntorg Lighting Detector\n\nDisplay lighting strike in Km \nAny strike >= 10 Km will show Green Lighting Arrow\nAny strike < 10 Km will show Red Lightning Arrow\n\n## **setDistance**\nTo change distance modify the setDistance function node.  You will need to change the value of n to whatever distance you want.   Also you will need to change the payload string to match the new distance.  Example below shows the value set to 10 Km \n\n`if(n <= 10) {\n // return distance to strike if strike is in defined radius\n return {payload: '<' + n + ' Km', color: \"#c40606\", topic: 'lightning'};\n} else\n return  {payload: '> 10 Km', color: \"#14f00c\",};`\n \n## **Ui Node**\nThere are 2 Ui Nodes in the template.  If you only have one dashboard page you can delete the one on the right.  If you have more than 2 dashboard pages you will need to copy and add the Ui Nodes and chain the output from the preceding one to the in input of the next Ui node.  \n\nYou will need to set the Ui Node to be in one group per dashboard page in order for those pages to update.   \n\n## **Header Ui**\nThe header Ui has 2 css div elements.  Spacing of the elements is tricky and may need adjusted depending on what else you have on your toolbar.  You can edit the style.paddingLeft or style.margin to adjust.   Make a copy of the Ui incase you need to fall back to the default.  \n\n## **Audible**\nIn order for the audiable to work you will need to click on the web page or you will see an error-not allowed msg on the node in the editor.   Currently the text is set to 'Warning Lighting Alert'  To change edit the pushAudible function",
        "x": 200,
        "y": 800,
        "wires": []
    },
    {
        "id": "330cf8c92afeccbb",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "group": "8fb11826e4a47fc9",
        "name": "Contest Clock Toolbar Header",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script id=\"toolbar\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        //add lightning\n        var div1 = $('<div/>');\n        let l1 = $('<p/ id=\"header-icon\">');\n        let l2 = $('<p/ id=\"header-lightning\">');\n        \n        div1.append(l1);\n        div1.append(l2);\n        \n        div1[0].style.width = 'auto';\n        div1[0].style.margin = 'auto';\n        div1[0].style.color = 'white';\n        div1[0].style.display = 'flex';\n        \n        l1[0].style.margin = 'auto';\n        l2[0].style.margin = '5px';\n        l2[0].style.color = 'white';\n        \n        // add contestcall\n        var div2 = $('<div/>');\n        var p1 = $('<p /id=\"header-contestname\">');\n        var p2 = $('<p /id=\"header-contestcall\">');\n        var p3 = $('<p /id=\"header-score_total\">');\n        var p5 = $('<p /id=\"header-chase1_call\">');\n        var p6 = $('<p /id=\"header-chase1_score_total\">');\n        var p8 = $('<p /id=\"header-chase2_call\">');\n        var p9 = $('<p /id=\"header-chase2_score_total\">');\n        var p11 = $('<p /id=\"header-chase3_call\">');\n        var p12 = $('<p /id=\"header-chase3_score_total\">');\n        var p14 = $('<p /id=\"header-chase4_call\">');\n        var p15 = $('<p /id=\"header-chase4_score_total\">');\n      \n        div2.append(p1);\n        div2.append(p2);\n        div2.append(p3);\n        div2.append(p5);\n        div2.append(p6);\n        div2.append(p8);\n        div2.append(p9);\n        div2.append(p11);\n        div2.append(p12);\n        div2.append(p14);\n        div2.append(p15);\n        \n        div2[0].style.width = 'auto';\n        div2[0].style.margin = 'auto';\n        div2[0].style.display = 'flex';\n        div2[0].style.color = '#c4d0ee';\n\t\t\n        p1[0].style.margin = '5px';\n        p1[0].style.width = 'auto';\n        p2[0].style.margin = '5px'; \n        p2[0].style.color = 'white';\n        p3[0].style.margin = '5px';\n        p3[0].style.color = 'white';\n        p5[0].style.margin = '5px';\n        p5[0].style.color = 'white';\n        p6[0].style.margin = 'auto';\n        p6[0].style.color = 'white';\n        p8[0].style.margin = '5px';\n        p8[0].style.color = 'white';\n        p9[0].style.margin = 'auto';\n        p9[0].style.color = 'white';\n        p11[0].style.margin = '5px';\n        p11[0].style.color = 'white';\n        p12[0].style.margin = 'auto';\n        p12[0].style.color = 'white';\n        p14[0].style.margin = '5px';\n        p14[0].style.color = 'white';\n        p15[0].style.margin = 'auto';\n        p15[0].style.color = 'white';\n        \n        \n    // add solar\n        var div3 = $('<div/>');\n        var s1 = $('<p>SFi</p>');\n        var s2 = $('<p/ id=\"header-sfi\">');\n        var s3 = $('<p>A</p>');\n        var s4 = $('<p/ id=\"header-Aindex\">');\n        var s5 = $('<p>K</p>');\n        var s6 = $('<p/ id=\"header-kdx\">');\n     \n        div3.append(s1);\n        div3.append(s2);\n        div3.append(s3);\n        div3.append(s4);\n        div3.append(s5);\n        div3.append(s6);\n        \n        div3[0].style.width = 'auto';\n        div3[0].style.margin = 'auto';\n        div3[0].style.display = 'flex';\n        div3[0].style.color = '#c4d0ee';\n\n        s1[0].style.margin = 'auto';\n        s2[0].style.margin = '5px'; \n        s2[0].style.color = 'white';\n        s3[0].style.margin = 'auto';\n        s4[0].style.margin = '5px';\n        s4[0].style.color = 'white';\n        s5[0].style.margin = 'auto';\n        s6[0].style.margin = '5px';\n        s6[0].style.color = 'white';\n        \n        \n        // add clock\n        var div4 = $('<div/>');\n        var p = $('<p/>');\n\n        div4.append(p);\n        div4[0].style.margin = '5px 5px 5px auto';\n        div4[0].style.display = 'flex';\n\n        function displayTime() {\n            var d = Date();\n            var options = { timeZone: 'UTC', timeZoneName: 'short', year: '2-digit', month: 'numeric', day: 'numeric', hourCycle:\n            'h23', hour: `2-digit`, minute: `2-digit`};\n            p.text(new Date().toLocaleString('en-US', options));\n        }\n\n       \n        clockInterval = setInterval(displayTime, 1000);\n\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            toolbar.append(div2);\n            toolbar.append(div3);\n            toolbar.append(div4);\n\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 50);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 630,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "431c69a2758e9d6f",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "BlitzunorgUi",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"a86c0f808507a0cc\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg.payload.length !== 0) {\n                $(\"#header-icon\").html(\"<i class='fa fa-bolt fa-2x' aria-hidden='true'></i>\").css(\"color\",(msg.color));\n                $(\"#header-lightning\").text(msg.payload); \n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1130,
        "y": 440,
        "wires": [
            [
                "36ed085a21d6315d"
            ]
        ]
    },
    {
        "id": "36ed085a21d6315d",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "BlitzunorgUi",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"a86c0f808507a0cc\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg.payload.length !== 0) {\n                $(\"#header-icon\").html(\"<i class='fa fa-bolt fa-2x' aria-hidden='true'></i>\").css(\"color\",(msg.color));\n                $(\"#header-lightning\").text(msg.payload); \n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1470,
        "y": 440,
        "wires": [
            [
                "85db86a67be75656"
            ]
        ]
    },
    {
        "id": "85db86a67be75656",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "BlitzunorgUi",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"a86c0f808507a0cc\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg.payload.length !== 0) {\n                $(\"#header-icon\").html(\"<i class='fa fa-bolt fa-2x' aria-hidden='true'></i>\").css(\"color\",(msg.color));\n                $(\"#header-lightning\").text(msg.payload); \n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1750,
        "y": 440,
        "wires": [
            [
                "0b122154cd902313"
            ]
        ]
    },
    {
        "id": "b5b388156ec5eca9",
        "type": "delay",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1800,
        "y": 720,
        "wires": [
            [
                "e733af43f8c28c46"
            ]
        ]
    },
    {
        "id": "d34ab878fcdc07ae",
        "type": "link out",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "Blitz Ligtning OUT",
        "mode": "link",
        "links": [
            "e35b27050e23f4fe"
        ],
        "x": 1775,
        "y": 840,
        "wires": []
    },
    {
        "id": "e35b27050e23f4fe",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar Blitz Lightning IN",
        "links": [
            "d34ab878fcdc07ae"
        ],
        "x": 255,
        "y": 440,
        "wires": [
            [
                "53692007691b251a"
            ]
        ]
    },
    {
        "id": "cb344aa1d31a6502",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "setDistance (orig)",
        "func": "function arePointsNear(checkPoint, centerPoint) {\n var ky = 40000 / 360;\n var kx = Math.cos(Math.PI * centerPoint.lat / 180.0) * ky;\n var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\n var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\n return Math.sqrt(dx * dx + dy * dy);\n}\n\nvar strike = { lat: msg.payload.lat, lng: msg.payload.lon };\n\n// set latitute + longitude accordingly\nvar home = { lat: 39.280430, lng: -77.886821 };\n\nvar n = arePointsNear(strike, home);\nn = Math.round(n);\n\n// '10' = km radius, replace with whatever km radius you'd like\nif(n <= 10) {\n // return distance to strike if strike is in defined radius\n return {payload: '<' + n + ' Km', color: \"#c40606\", topic: 'lightning'};\n} else\n return  {payload: '> 10 Km', color: \"#14f00c\",};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "c31ad36e83f990dd",
        "type": "catch",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "scope": [
            "2570533c0ddd961a",
            "e8923d3119f9de10"
        ],
        "uncaught": false,
        "x": 590,
        "y": 920,
        "wires": [
            [
                "2d5edcaf1c0997bc"
            ]
        ]
    },
    {
        "id": "2d5edcaf1c0997bc",
        "type": "debug",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 920,
        "wires": []
    },
    {
        "id": "a5372819368f5d81",
        "type": "inject",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "updateSolar",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payloadType": "date",
        "x": 350,
        "y": 1120,
        "wires": [
            [
                "6d2c61c8eafe791b"
            ]
        ]
    },
    {
        "id": "6d2c61c8eafe791b",
        "type": "http request",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "getSolar",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.hamqsl.com/w8bexml.php",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 340,
        "y": 1180,
        "wires": [
            [
                "a31fd08b865e287c"
            ]
        ],
        "info": "# getSolar\n\n## HTTP request node to fetch solar indicies data from https://www.hamqsl.com/w8bexml.php\n\nData is returned in xml format\n\nobject\nsolar: object\nsolardata: array[1]\n0: object\nsource: array[1]\nupdated: array[1]\nsolarflux: array[1]\naindex: array[1]\nkindex: array[1]\nkindexnt: array[1]\nxray: array[1]\nsunspots: array[1]\nheliumline: array[1]\nprotonflux: array[1]\nelectonflux: array[1]\naurora: array[1]\nnormalization: array[1]\nlatdegree: array[1]\nsolarwind: array[1]\nmagneticfield: array[1]\ncalculatedconditions: array[1]\ncalculatedvhfconditions: array[1]\ngeomagfield: array[1]\nsignalnoise: array[1]\nfof2: array[1]\nmuffactor: array[1]\nmuf: array[1]\n"
    },
    {
        "id": "dbc4fa6c4950549c",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "getKdx",
        "func": "var kdx = parseFloat(msg.payload.solar.solardata[0].kindex[0]);\nmsg.topic = \"kdx\";\nmsg.payload = kdx;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1120,
        "wires": [
            [
                "20a1b3e47e825d5b"
            ]
        ],
        "info": "# getKdx\n\n## Function parses k index data from getSolar and converts to msg to be used in updateServerK template"
    },
    {
        "id": "0e5c59369f188c2d",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "getSFi",
        "func": "var sfi = parseFloat(msg.payload.solar.solardata[0].solarflux[0]);\nmsg.topic = \"sfi\";\nmsg.payload = sfi;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1160,
        "wires": [
            [
                "41b71b195d25cc36"
            ]
        ],
        "info": "# getSFi\n\n## Function parses SFI index data from getSolar and converts to msg to be used in updateServerK template"
    },
    {
        "id": "a6bf18e701de8cea",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "getAindex",
        "func": "var Aindex = parseFloat(msg.payload.solar.solardata[0].aindex);\nmsg.topic =\"Aindex\";\nmsg.payload = Aindex;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1200,
        "wires": [
            [
                "324101084f63a83e"
            ]
        ],
        "info": "# getAindex\n\n## Function parses A index data from getSolar and converts to msg to be used in updateServer SFi template"
    },
    {
        "id": "a31fd08b865e287c",
        "type": "xml",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 470,
        "y": 1180,
        "wires": [
            [
                "dbc4fa6c4950549c",
                "0e5c59369f188c2d",
                "a6bf18e701de8cea"
            ]
        ]
    },
    {
        "id": "522c164834b058f6",
        "type": "ui_ui_control",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "updateOnChange",
        "events": "all",
        "x": 350,
        "y": 1240,
        "wires": [
            [
                "6d2c61c8eafe791b"
            ]
        ]
    },
    {
        "id": "94377682fd3db09a",
        "type": "comment",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "getSolar",
        "info": "# Server Side Flow to fetch solar data\n# Function gets data from N0NBP\n# Function formats data for solar indicies\n# Template Nodes are server update for variables that toolbar uses\n# Link Out to at least one flow per dashboard tab to allow browser refresh to client to sync",
        "x": 480,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ea4b0c4d43bbf2e8",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "updateServer Aindex",
        "order": 21,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"28807f2ea8989c55\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"Aindex\") {\n                $(\"#header-Aindex\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 600,
        "y": 560,
        "wires": [
            [
                "af65ab5234804a9a"
            ]
        ],
        "info": "# Update Server Aindex\n\n# Node links to Solar Flow logic for A index varible #Aindex\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "4f76379f46c13673",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "updateServer K",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"ebbabd8a26718f21\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"kdx\") {\n                $(\"#header-kdx\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 480,
        "wires": [
            [
                "d500857eefbcea4a"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "dbcb9a738301da97",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "9a1dd65e19bf97cb",
        "name": "updateServer SFi",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"6b98b8d2d329e253\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"sfi\") {\n                $(\"#header-sfi\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 590,
        "y": 520,
        "wires": [
            [
                "a110c5259531418b"
            ]
        ],
        "info": "# Update Server sfi\n\n# Node links to Solar Flow logic for sfi varible #sfi\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "a4442b82396c4ff2",
        "type": "comment",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "syncSolar",
        "info": "# Client Side Flow to parse solar data into variable that tool bar will use\n# This flow should be in at least one Dashboard Group to allow for updates.   Use link out/in nodes to additional dashbaord group flows.  ",
        "x": 760,
        "y": 1060,
        "wires": []
    },
    {
        "id": "664777b6beccd2c1",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "d": true,
        "g": "c6a5789101548ba9",
        "group": "e357ef02.ef3cb",
        "name": "Solar/foF2/Clock (orig)",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script id=\"toolbar\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        // add solar\n        var div1 = $('<div/>');\n        var p1 = $('<p>SFi</p>');\n        var p2 = $('<p/ id=\"header-sfi\">');\n        var p3 = $('<p>A</p>');\n        var p4 = $('<p/ id=\"header-Aindex\">');\n        var p5 = $('<p>K</p>');\n        var p6 = $('<p/ id=\"header-kdx\">');\n     \n        div1.append(p1);\n        div1.append(p2);\n        div1.append(p3);\n        div1.append(p4);\n        div1.append(p5);\n        div1.append(p6);\n        \n        div1[0].style.width = 'auto';\n        div1[0].style.margin = 'auto';\n        div1[0].style.display = 'flex';\n        div1[0].style.color = '#c4d0ee';\n\n        p1[0].style.margin = 'auto';\n        p2[0].style.margin = '5px'; \n        p2[0].style.color = 'white';\n        p3[0].style.margin = 'auto';\n        p4[0].style.margin = '5px';\n        p4[0].style.color = 'white';\n        p5[0].style.margin = 'auto';\n        p6[0].style.margin = '5px';\n        p6[0].style.color = 'white';\n\n        //add fof2\n        var div2 = $('<div/>');\n        var f1 = $('<p>foF2</p>');\n        let f2 = $('<p/ id=\"header-fof2\">');\n        \n        div2.append(f1);\n        div2.append(f2);\n        \n        div2[0].style.width = 'auto';\n        div2[0].style.margin = 'auto';\n        div2[0].style.display = 'flex';\n        div2[0].style.color = '#c4d0ee';\n        \n        f1[0].style.margin = '6px';\n        f2[0].style.margin = 'auto';\n        f2[0].style.color = 'white';\n     \n        // add clock\n        var div3 = $('<div/>');\n        var p = $('<p/>');\n\n        div3.append(p);\n        div3[0].style.margin = '5px 5px 5px auto';\n        div3[0].style.display = 'flex';\n\n\n        function displayTime() {\n            var d = Date();\n            var options = { timeZone: 'UTC', timeZoneName: 'short',  hourCycle: 'h23', hour: `2-digit`, minute: `2-digit`};\n            p.text(new Date().toLocaleString('en-US', options));\n        }\n        \n        clockInterval = setInterval(displayTime, 1000);\n\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            toolbar.append(div2);\n            toolbar.append(div3);\n\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 50);\n    });",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1520,
        "y": 1180,
        "wires": [
            []
        ],
        "icon": "font-awesome/fa-list-alt",
        "info": "# Solar / foF2 / Clock\n\n## Client Template Node in header\n\n1. solar data from Solar flow variables:  #kdx, #sfi, #Aindex, and #fof2\n2. Function for UTC clock\n\n"
    },
    {
        "id": "4e62658f095c2863",
        "type": "comment",
        "z": "b73cc2bb5f424b69",
        "g": "c6a5789101548ba9",
        "name": "updateClientToolbar",
        "info": "# Tool bar flowo to get solar data, Fof2, and UTC Clock\n",
        "x": 1510,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9ffef6f470bb6f80",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "d": true,
        "group": "8fb11826e4a47fc9",
        "name": "Contest Clock Toolbar Header (orig1)",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script id=\"toolbar\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        //add lightning\n        var div1 = $('<div/>');\n        let l1 = $('<p/ id=\"header-icon\">');\n        let l2 = $('<p/ id=\"header-lightning\">');\n        \n        div1.append(l1);\n        div1.append(l2);\n        \n        div1[0].style.width = 'auto';\n        div1[0].style.margin = 'auto';\n        div1[0].style.color = 'white';\n        div1[0].style.display = 'flex';\n        \n        l1[0].style.margin = 'auto';\n        l2[0].style.margin = '5px';\n        l2[0].style.color = 'white';\n        \n        // add contestcall\n        var div2 = $('<div/>');\n        var p1 = $('<p /id=\"header-contestname\">');\n        var p2 = $('<p /id=\"header-contestcall\">');\n        var p3 = $('<p /id=\"header-score_total\">');\n        var p5 = $('<p /id=\"header-chase1_call\">');\n        var p6 = $('<p /id=\"header-chase1_score_total\">');\n        var p8 = $('<p /id=\"header-chase2_call\">');\n        var p9 = $('<p /id=\"header-chase2_score_total\">');\n        var p11 = $('<p /id=\"header-chase3_call\">');\n        var p12 = $('<p /id=\"header-chase3_score_total\">');\n        var p14 = $('<p /id=\"header-chase4_call\">');\n        var p15 = $('<p /id=\"header-chase4_score_total\">');\n      \n        div2.append(p1);\n        div2.append(p2);\n        div2.append(p3);\n        div2.append(p5);\n        div2.append(p6);\n        div2.append(p8);\n        div2.append(p9);\n        div2.append(p11);\n        div2.append(p12);\n        div2.append(p14);\n        div2.append(p15);\n        \n        div2[0].style.width = 'auto';\n        div2[0].style.margin = 'auto';\n        div2[0].style.display = 'flex';\n        div2[0].style.color = '#c4d0ee';\n\t\t\n        p1[0].style.margin = '5px';\n        p1[0].style.width = 'auto';\n        p2[0].style.margin = '5px'; \n        p2[0].style.color = 'white';\n        p3[0].style.margin = '5px';\n        p3[0].style.color = 'white';\n        p5[0].style.margin = '5px';\n        p5[0].style.color = 'white';\n        p6[0].style.margin = 'auto';\n        p6[0].style.color = 'white';\n        p8[0].style.margin = '5px';\n        p8[0].style.color = 'white';\n        p9[0].style.margin = 'auto';\n        p9[0].style.color = 'white';\n        p11[0].style.margin = '5px';\n        p11[0].style.color = 'white';\n        p12[0].style.margin = 'auto';\n        p12[0].style.color = 'white';\n        p14[0].style.margin = '5px';\n        p14[0].style.color = 'white';\n        p15[0].style.margin = 'auto';\n        p15[0].style.color = 'white';\n     \n        // add clock\n        var div3 = $('<div/>');\n        var p = $('<p/>');\n\n        div3.append(p);\n        div3[0].style.margin = '5px 5px 5px auto';\n        div3[0].style.display = 'flex';\n\n        function displayTime() {\n            var d = Date();\n            var options = { timeZone: 'UTC', timeZoneName: 'short', year: '2-digit', month: 'numeric', day: 'numeric', hourCycle:\n            'h23', hour: `2-digit`, minute: `2-digit`};\n            p.text(new Date().toLocaleString('en-US', options));\n        }\n\n       \n        clockInterval = setInterval(displayTime, 1000);\n\n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n            \n            if(!toolbar.length) return;\n            \n            toolbar.append(div1);\n            toolbar.append(div2);\n            toolbar.append(div3);\n\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 50);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 970,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d500857eefbcea4a",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "updateServer K",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"ebbabd8a26718f21\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"kdx\") {\n                $(\"#header-kdx\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 880,
        "y": 480,
        "wires": [
            [
                "0c5b09ac8217c8e8"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "0c5b09ac8217c8e8",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "updateServer K",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"ebbabd8a26718f21\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"kdx\") {\n                $(\"#header-kdx\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1140,
        "y": 480,
        "wires": [
            [
                "95613fb05341082e"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "95613fb05341082e",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "updateServer K",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"ebbabd8a26718f21\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"kdx\") {\n                $(\"#header-kdx\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1480,
        "y": 480,
        "wires": [
            [
                "66a441672a2af592"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "66a441672a2af592",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "updateServer K",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"ebbabd8a26718f21\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"kdx\") {\n                $(\"#header-kdx\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1760,
        "y": 480,
        "wires": [
            [
                "beebf164a6058fc0"
            ]
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "8d8c2c7254287149",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "updateContestCall",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-contestcall\").text(msg.payload.contestcall).prop('title','Contest Call');\n              //  $(\"#header-contestcall\").prop('title','Contest Call');\n                $(\"#header-score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Contest Call Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-contestcall\").text(\"\");\n                $(\"#header-score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2070,
        "y": 240,
        "wires": [
            []
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "6622e7e7a8741c0e",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "UpdateContestName",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"7eceb14e06091850\"]').hide();\n        scope.$watch('msg', function(msg) {\n        if ((msg.payload.contestname) != null){\n            $(\"#header-contestname\").text(msg.payload.contestname);\n             }\n        if ((msg.payload.contestname) == null){\n            $(\"#header-contestname\").text(\"No Active Contest\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2080,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "3bd9135654310792",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "UpdateChaseCall1",
        "order": 15,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase1_call\").text(msg.payload.contestcall).prop('title','Call 1');\n                $(\"#header-chase1_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 1 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase1_call\").text(\"\");\n                $(\"#header-chase1_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2070,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "1ef1df6438a74955",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "UpdateChaseCall2",
        "order": 16,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase2_call\").text(msg.payload.contestcall).prop('title','Call 2');\n                $(\"#header-chase2_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 2 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase2_call\").text(\"\");\n                $(\"#header-chase2_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2070,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "2dafd2c2dab98d98",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "UpdateChaseCall3",
        "order": 17,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase3_call\").text(msg.payload.contestcall).prop('title','Call 3');\n                $(\"#header-chase3_score_total\").text(msg.payload.score_total.concat(\" \",\"|\")).prop('title','Call 3 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase3_call\").text(\"\");\n                $(\"#header-chase3_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2070,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d0c78d62f35e3d16",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "UpdateChaseCall4",
        "order": 18,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"9feb96c66858ba60\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if ( msg.payload.contestcall.length >= 2) {\n                $(\"#header-chase4_call\").text(msg.payload.contestcall).prop('title','Call 4');\n                $(\"#header-chase4_score_total\").text(msg.payload.score_total).prop('title','Call 4 Score');\n                \n            }\n            if ( msg.payload.contestcall.length <= 1){\n                $(\"#header-chase4_call\").text(\"\");\n                $(\"#header-chase4_score_total\").text(\"\");\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2070,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "0b122154cd902313",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "BlitzunorgUi",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"a86c0f808507a0cc\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg.payload.length !== 0) {\n                $(\"#header-icon\").html(\"<i class='fa fa-bolt fa-2x' aria-hidden='true'></i>\").css(\"color\",(msg.color));\n                $(\"#header-lightning\").text(msg.payload); \n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2050,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "beebf164a6058fc0",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "updateServer K",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n         $('[node-id=\"ebbabd8a26718f21\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"kdx\") {\n                $(\"#header-kdx\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2060,
        "y": 480,
        "wires": [
            []
        ],
        "info": "# Update Server K\n\n# Node links to Solar Flow logic for K index varible #kdx\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update \n\n\n"
    },
    {
        "id": "a110c5259531418b",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "updateServer SFi",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"6b98b8d2d329e253\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"sfi\") {\n                $(\"#header-sfi\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 520,
        "wires": [
            [
                "72c0143cb2801842"
            ]
        ],
        "info": "# Update Server sfi\n\n# Node links to Solar Flow logic for sfi varible #sfi\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "72c0143cb2801842",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "updateServer SFi",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"6b98b8d2d329e253\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"sfi\") {\n                $(\"#header-sfi\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 520,
        "wires": [
            [
                "2100cfc9553c38ba"
            ]
        ],
        "info": "# Update Server sfi\n\n# Node links to Solar Flow logic for sfi varible #sfi\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "2100cfc9553c38ba",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "updateServer SFi",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"6b98b8d2d329e253\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"sfi\") {\n                $(\"#header-sfi\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1490,
        "y": 520,
        "wires": [
            [
                "54fd1aa0f1e76bb0"
            ]
        ],
        "info": "# Update Server sfi\n\n# Node links to Solar Flow logic for sfi varible #sfi\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "54fd1aa0f1e76bb0",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "updateServer SFi",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"6b98b8d2d329e253\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"sfi\") {\n                $(\"#header-sfi\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1770,
        "y": 520,
        "wires": [
            [
                "05db91002fb4d67a"
            ]
        ],
        "info": "# Update Server sfi\n\n# Node links to Solar Flow logic for sfi varible #sfi\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "05db91002fb4d67a",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "updateServer SFi",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"6b98b8d2d329e253\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"sfi\") {\n                $(\"#header-sfi\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2070,
        "y": 520,
        "wires": [
            []
        ],
        "info": "# Update Server sfi\n\n# Node links to Solar Flow logic for sfi varible #sfi\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "af65ab5234804a9a",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "ba8d90f0d4d46eb0",
        "name": "updateServer Aindex",
        "order": 17,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"28807f2ea8989c55\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"Aindex\") {\n                $(\"#header-Aindex\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 900,
        "y": 560,
        "wires": [
            [
                "34d492ab50541fdc"
            ]
        ],
        "info": "# Update Server Aindex\n\n# Node links to Solar Flow logic for A index varible #Aindex\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "34d492ab50541fdc",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "aafad41ae29aabef",
        "name": "updateServer Aindex",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"28807f2ea8989c55\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"Aindex\") {\n                $(\"#header-Aindex\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1160,
        "y": 560,
        "wires": [
            [
                "7036aad4276a8131"
            ]
        ],
        "info": "# Update Server Aindex\n\n# Node links to Solar Flow logic for A index varible #Aindex\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "7036aad4276a8131",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "ebbb538ba5d86639",
        "name": "updateServer Aindex",
        "order": 13,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"28807f2ea8989c55\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"Aindex\") {\n                $(\"#header-Aindex\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1500,
        "y": 560,
        "wires": [
            [
                "e6ae4df0ca620d74"
            ]
        ],
        "info": "# Update Server Aindex\n\n# Node links to Solar Flow logic for A index varible #Aindex\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "e6ae4df0ca620d74",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "4244ba9d238d6a13",
        "name": "updateServer Aindex",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"28807f2ea8989c55\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"Aindex\") {\n                $(\"#header-Aindex\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1780,
        "y": 560,
        "wires": [
            [
                "23d467e3525ec5a8"
            ]
        ],
        "info": "# Update Server Aindex\n\n# Node links to Solar Flow logic for A index varible #Aindex\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "23d467e3525ec5a8",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "e42cdfb590735e00",
        "name": "updateServer Aindex",
        "order": 19,
        "width": 0,
        "height": 0,
        "format": "\n<script>\n    (function(scope) {\n        //hide this card. NOTE: 4b689f7473831a84 is the Node id as \n        //seen in the INFO panel on the sidebar when you select this node\n        $('[node-id=\"28807f2ea8989c55\"]').hide();\n        scope.$watch('msg', function(msg) {\n            if (msg && msg.topic == \"Aindex\") {\n                $(\"#header-Aindex\").text(msg.payload);\n            }\n        });\n    })(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2080,
        "y": 560,
        "wires": [
            []
        ],
        "info": "# Update Server Aindex\n\n# Node links to Solar Flow logic for A index varible #Aindex\n\nNode needs to be in one flow for each dashboard tab in order for toolbar to update "
    },
    {
        "id": "20a1b3e47e825d5b",
        "type": "link out",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "Get K Index OUT",
        "mode": "link",
        "links": [
            "58b4f87e7d17a9b2"
        ],
        "x": 815,
        "y": 1120,
        "wires": []
    },
    {
        "id": "41b71b195d25cc36",
        "type": "link out",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "Get SFI Index OUT",
        "mode": "link",
        "links": [
            "1c0e963122e30bc8"
        ],
        "x": 815,
        "y": 1160,
        "wires": []
    },
    {
        "id": "324101084f63a83e",
        "type": "link out",
        "z": "b73cc2bb5f424b69",
        "g": "28877ac600fea8b9",
        "name": "Get A Index OUT",
        "mode": "link",
        "links": [
            "cd6e0fce6f62b9c5"
        ],
        "x": 815,
        "y": 1200,
        "wires": []
    },
    {
        "id": "58b4f87e7d17a9b2",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar K Index IN",
        "links": [
            "20a1b3e47e825d5b"
        ],
        "x": 255,
        "y": 480,
        "wires": [
            [
                "4f76379f46c13673"
            ]
        ]
    },
    {
        "id": "1c0e963122e30bc8",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar SFi Index IN",
        "links": [
            "41b71b195d25cc36"
        ],
        "x": 255,
        "y": 520,
        "wires": [
            [
                "dbcb9a738301da97"
            ]
        ]
    },
    {
        "id": "cd6e0fce6f62b9c5",
        "type": "link in",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "name": "Toolbar A Index IN",
        "links": [
            "324101084f63a83e"
        ],
        "x": 255,
        "y": 560,
        "wires": [
            [
                "ea4b0c4d43bbf2e8"
            ]
        ]
    },
    {
        "id": "393223b190ba95f3",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "Inject A = 542",
        "func": "return {payload: '{ \"a\": 542 }'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 880,
        "wires": [
            [
                "2570533c0ddd961a"
            ]
        ]
    },
    {
        "id": "35549ac0e22e44ff",
        "type": "ui_ui_control",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "events": "connect",
        "x": 140,
        "y": 920,
        "wires": [
            [
                "40b13d784b111566"
            ]
        ]
    },
    {
        "id": "40b13d784b111566",
        "type": "delay",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 920,
        "wires": [
            [
                "393223b190ba95f3"
            ]
        ]
    },
    {
        "id": "e6fb0ef92036fc12",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "Set Icon Color Red",
        "func": "let n = msg.payload.strike_distance\nreturn {payload: '<' + n + ' Km', color: \"#c40606\", topic: 'lightning'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 820,
        "wires": [
            [
                "d34ab878fcdc07ae"
            ]
        ]
    },
    {
        "id": "3ba91bda918482b2",
        "type": "switch",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "Lightning < 150 Miles",
        "property": "payload.strike_distance",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "150",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "150",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 840,
        "wires": [
            [
                "e6fb0ef92036fc12",
                "49c54051341840e3"
            ],
            [
                "2447aed577add90a"
            ]
        ]
    },
    {
        "id": "2447aed577add90a",
        "type": "delay",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1320,
        "y": 860,
        "wires": [
            [
                "33b22679735f2e3c"
            ]
        ]
    },
    {
        "id": "33b22679735f2e3c",
        "type": "function",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "Set Icon Color Green",
        "func": "let n = msg.payload.strike_distance\nreturn  {payload: '> 10 Km', color: \"#14f00c\",};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 860,
        "wires": [
            [
                "d34ab878fcdc07ae"
            ]
        ]
    },
    {
        "id": "53becfe3676d44bd",
        "type": "debug",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 780,
        "wires": []
    },
    {
        "id": "49c54051341840e3",
        "type": "debug",
        "z": "b73cc2bb5f424b69",
        "g": "7a5512b5a3f6e8ba",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 780,
        "wires": []
    },
    {
        "id": "a8a10cc2.9d0ae",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "02235a52f1d247d6",
        "group": "1ea34d06.1438c3",
        "name": "ScoreBoard CSS",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 590,
        "y": 600,
        "wires": [
            [
                "66a43145427ca537"
            ]
        ]
    },
    {
        "id": "52d0f0a78929438e",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "c6e09ffb3c5a1ce6",
        "group": "1ea34d06.1438c3",
        "name": "Default CSS",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n.dashboard_last_qsos{\nfont-size: 24px;\n}\n.dashboard_last_qsos .nr-dashboard-cardtitle{\nfont-size: 20px;\n}\n.dashboard_current_qsos{\nfont-size: 35px;\n}\n.dashboard_current_qsos .nr-dashboard-cardtitle{\nfont-size: 20px;\n}\n.dashboard_current_qsos .label{\nfont-size: 22px;\n}\n.dashboard_contest_stats .nr-dashboard-cardtitle{\nfont-size : 20px;\n}\n.dashboard_contest_stats .label{\nfont-size: 22px;\n}\n.dashboard_contest_stats .value {\nfont-size: 40px;\n}\n.dashboard_contest_stats .nr {\n    font-size: 22px;\n}\n\n\n.dashboard_radio_data .nr-dashboard-cardtitle{ \nfont-size: 20px;\n}\n.dashboard_radio_data .label{ \nfont-size: 22px;\n}\n.dashboard_radio_data .value{ \nfont-size: 38px;\n}\n.radio_info{\nfont-size: 20px;\n}\n.band_stats{\nfont-size: 26px;\n}\n.band_stats_spot_rate{\nfont-size: 30px;\n}\n.band_stats_spot_rate .nr-dashboard-cardtitle{\nfont-size: 20px;\n}\n.dashboard_spot_rate{\nfont-size: 15px;\n}\n.scoreboard{\nfont-size: 25px;\n}\n.op_compete_trending{\nfont-size: 14px;\n}\n.op_compete{\nfont-size: 20px;\n}\n.dashboard_last_qsos .value {\nfont-size: 40px;\n}\n.dashboard_last_qsos .label {\nfont-size: 22px;\n}\n.np.nr-dashboard-chart-title {\n        padding: unset;\n    }\n.chart_title .nr-dashboard-chart-titlel {\n    display: none;\n}\n\n.chart_title .nr-dashboard-chart-nolabel {\n    height: 100%;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 310,
        "y": 600,
        "wires": [
            [
                "a8a10cc2.9d0ae"
            ]
        ]
    },
    {
        "id": "66a43145427ca537",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "52886121c9629e0b",
        "group": "1ea34d06.1438c3",
        "name": "Dashboard CSS",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 880,
        "y": 600,
        "wires": [
            [
                "de48727be275102f"
            ]
        ]
    },
    {
        "id": "de48727be275102f",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "bebfe5d7e4f0feb0",
        "group": "1ea34d06.1438c3",
        "name": "Spectator Dashboard CSS",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1180,
        "y": 600,
        "wires": [
            [
                "c2d7711a7d230637"
            ]
        ]
    },
    {
        "id": "c2d7711a7d230637",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "23eb39063da69706",
        "group": "1ea34d06.1438c3",
        "name": "RBN Spots CSS",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1480,
        "y": 600,
        "wires": [
            [
                "c4561e5c31134c5d"
            ]
        ]
    },
    {
        "id": "c4561e5c31134c5d",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "022672368830e427",
        "group": "1ea34d06.1438c3",
        "name": "Band Stats CSS",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1760,
        "y": 600,
        "wires": [
            [
                "89b2058720d8fb99"
            ]
        ]
    },
    {
        "id": "89b2058720d8fb99",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "18a3020b4a12ae60",
        "group": "1ea34d06.1438c3",
        "name": "Op Competion CSS",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 2070,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "6e5f192ff0fd2d39",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "f830dd821e0240f4",
        "group": "",
        "name": "css",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n/* unvisited link */\na:link {\n  color: white;\n    text-decoration: none;\n    vertical-align: bottom;\n}\n\n/* visited link */\na:visited {\n  color: white;\n    text-decoration: none;\n    vertical-align: bottom;    \n}\n\n/* mouse over link */\na:hover {\n  color: white;\n    text-decoration: none;\n        vertical-align: bottom;\n}\n\n/* selected link */\na:active {\n  color: white;\n    text-decoration: none;\n        vertical-align: bottom;\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1470,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "aa0566f8a8d9dbfd",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "f830dd821e0240f4",
        "group": "ba8d90f0d4d46eb0",
        "name": "Master style override",
        "order": 4,
        "width": 5,
        "height": 1,
        "format": "<style>\nbody.nr-dashboard-theme {\n background-color: #333333;\n font-family: Calibri;\n}\nbutton { \n  width: 50px; \n  color: #d0d0d0;\n  /*box-shadow: 2px 2px 2px rgba(0,0, 0, 0.4);*/\n  /*border-radius: 1px;*/\n  /*transform: scale(1.0);*/\n  background-color: #707070;\n  background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n\n}\nbutton, html, input, select, textarea {\n font-family: Calibri;\n}\nbody.nr-dashboard-theme md-content md-card {\n /*background-color: #33333300;*/\n color: #d0d0d0;\n}\n\n/* Set header background style */\nbody.remove.nr-dashboard-theme md-toolbar {\n background-image: linear-gradient(to right,#8a8a8a6e, #00000070);\n box-shadow: 0px 1px 20px #0000008a;\n}\n/* Set groups background style */\n.remove.nr-dashboard-theme ui-card-panel {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n border: 1px solid #555555;\n box-shadow: 0 0 20px #00000066;\n}\n\n/* Set group titles text */\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n color: #2eb82e;\n text-shadow: 0 0 2px black;\n}\n\n.nr-dashboard-theme .nr-dashboard-form-button {\n background-image: linear-gradient(to bottom right,  #8a8a8a6e, #00000070);\n background-color: #00ad03;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n background-image: linear-gradient(to bottom right,  #8a8a8a6e, #00000070);\n background-color: #707070;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n background-color: #00de00;\n}\n\n.nr-dashboard-theme .nr-dashboard-switch md-switch .md-thumb {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n}\n.nr-dashboard-button .md-button {\n box-shadow: 0 1px 3px 0 rgba(0,0,0,.26)!important;\n width: 100%!important;\n height: 100%!important;\n margin: 0!important;\n min-width: 0!important;\n min-height: 0!important;\n}\n.nr-dashboard-theme .nr-dashboard-slider .md-thumb:after {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n border-style: none;\n}\n.nr-dashboard-theme .nr-dashboard-numeric .value {\n background-color: #33333300;\n color:#d0d0d0;\n}\n\n.nr-dashboard-numeric .value {\n font-weight: 700;\n text-align: center;\n border: 0;\n}\n\n\n.nr-dashboard-form {\n display: inline-block;\n width: 100%;\n overflow-y: visible;\n}\n#SETTINGS_TEATED_cards {\n min-height: 260px;\n}\n\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1260,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "925cebb6bacad025",
        "type": "ui_template",
        "z": "b73cc2bb5f424b69",
        "g": "f830dd821e0240f4",
        "group": "",
        "name": "button template",
        "order": 10,
        "width": 8,
        "height": 6,
        "format": "<style>\n  .filled { \n      height: 100% !important;\n\n      padding: 0 !important;\n      margin: 0 !important;\n\n  }\n  .nr-dashboard-template {\n      padding: 0;\n      margin: 0;\n\n  }\n  \n  .rounded {\n  border-radius: 12px 12px 12px 12px;\n\n}\n \n   .bigfont {\n  font-size: 18px;\n  color: white;\n}\n\n   .smallfont {\n  font-size: 12px;\n  color: white;\n}\n  \n</style>\n\n<script>\n$('.vibrate').on('click', function() {\n  navigator.vibrate(100);\n});\n\nfunction restore_bg(x) {\n            $(this).css(\"background-color\", x);\n    };\n\n$('.touched').on('mousedown', function() {\n    \n    var x= $(this).css(\"background-color\");\n    $(this).css(\"background-color\", \"yellow\");\n    \n    setTimeout(restore_bg.bind(this,x),100);\n    navigator.vibrate(80);\n    });\n    \n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1020,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "1e2b62f78c981761",
        "type": "function",
        "z": "3968f5792af364de",
        "name": "radiosport.live score data",
        "func": "\n// This node receives the score packet from N1MM and then pulls out the following items\n// Total # of QSOs\n// Total # of Mults\n// Total # of Points\n// The function then that data plus other data that is calculated in SQL commands and sends that data out in JSON format.\n\n// Total # of QSOs\nlet arraylength = msg.payload.dynamicresults.breakdown[0].qso.length\ntotalnoqsos = 0;\n\nfor (let i=0; i < msg.payload.dynamicresults.breakdown[0].qso.length; i++)\n{\n    \n    if (msg.payload.dynamicresults.breakdown[0].qso[i].$.band == \"total\" && msg.payload.dynamicresults.breakdown[0].qso[i].$.mode == \"ALL\")\n    {\n        totalnoqsos = parseInt(msg.payload.dynamicresults.breakdown[0].qso[i]._);\n        flow.set('totalnoqsos',totalnoqsos)\n        \n    }\n    \n}\n\n\n//Total # of Mults\nif (msg.payload.dynamicresults.breakdown[0].mult == undefined)\n{\n    flow.set('totalmults',0)\n}\n\narraylength = msg.payload.dynamicresults.breakdown[0].mult.length\nlet totalmults = 0;\n\nfor (let i=0; i < msg.payload.dynamicresults.breakdown[0].mult.length; i++)\n{\n    \n    if (msg.payload.dynamicresults.breakdown[0].mult[i].$.band == \"total\" && msg.payload.dynamicresults.breakdown[0].mult[i].$.mode == \"ALL\")\n    {\n        totalmults = parseInt(msg.payload.dynamicresults.breakdown[0].mult[i]._)\n//        totalmults = totalmults + total;\n        break;\n    }\n    \n}\nflow.set('totalmults',totalmults);\n\n\n//Total # of Points\nif (msg.payload.dynamicresults.score == \"0\")\n{\n    flow.set('totalpoints',0)\n}\n\narraylength = msg.payload.dynamicresults.breakdown[0].point.length\nlet totalpoints = 0;\n\nfor (let i=0; i < msg.payload.dynamicresults.breakdown[0].point.length; i++)\n{\n    \n    if (msg.payload.dynamicresults.breakdown[0].point[i].$.band == \"total\" && msg.payload.dynamicresults.breakdown[0].point[i].$.mode == \"ALL\")\n    {\n        totalpoints = parseInt(msg.payload.dynamicresults.breakdown[0].point[i]._);\n        flow.set('totalpoints',totalpoints);\n        \n    }\n    \n}\n\n\nlet currentQrate = global.get(\"#currentQrate\");\n\n\n\nmsg.payload = {\n    \"type\":\"score\",\n    \"contest\":msg.payload.dynamicresults.contest[0],\n    \"call\":msg.payload.dynamicresults.call[0],\n    \"power\":msg.payload.dynamicresults.class[0].$.power,\n    \"assisted\":msg.payload.dynamicresults.class[0].$.assisted,\n    \"transmitter\":msg.payload.dynamicresults.class[0].$.transmitter,\n    \"ops\":msg.payload.dynamicresults.class[0].$.ops,\n    \"bands\":msg.payload.dynamicresults.class[0].$.bands,\n    \"mode\":msg.payload.dynamicresults.class[0].$.mode,\n    \"totalnoqsos\":totalnoqsos, \n    \"totalmults\":totalmults, \n    \"totalpoints\":totalpoints,\n    \"currentQrate\":currentQrate,\n    \"timestamp\":msg.payload.dynamicresults.timestamp[0]\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 180,
        "wires": [
            [
                "0cb5764a0d3bb049",
                "56bdc7c920799869"
            ]
        ]
    },
    {
        "id": "0cb5764a0d3bb049",
        "type": "json",
        "z": "3968f5792af364de",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "8fef24f610992b8e"
            ]
        ]
    },
    {
        "id": "3b6d91307549713b",
        "type": "udp out",
        "z": "3968f5792af364de",
        "name": "",
        "addr": "144.202.50.198",
        "iface": "",
        "port": "12062",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1020,
        "y": 180,
        "wires": []
    },
    {
        "id": "77252a3ad3a5f5aa",
        "type": "link in",
        "z": "3968f5792af364de",
        "name": "Radiosport Score IN",
        "links": [
            "aec65d796aed9cee"
        ],
        "x": 255,
        "y": 180,
        "wires": [
            [
                "1e2b62f78c981761",
                "269d0dd2e42cd701"
            ]
        ]
    },
    {
        "id": "56bdc7c920799869",
        "type": "debug",
        "z": "3968f5792af364de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "269d0dd2e42cd701",
        "type": "debug",
        "z": "3968f5792af364de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 140,
        "wires": []
    },
    {
        "id": "fd220d20c3727d7e",
        "type": "link in",
        "z": "3968f5792af364de",
        "name": "Radiosport QSO & Home IN",
        "links": [
            "4320ff577c7cb858"
        ],
        "x": 255,
        "y": 380,
        "wires": [
            [
                "42d44fa7c3361f83",
                "e142261fff9cee08",
                "da61edac06f1db38"
            ]
        ]
    },
    {
        "id": "4f2368c8ae71312b",
        "type": "comment",
        "z": "3968f5792af364de",
        "name": "Score Data",
        "info": "",
        "x": 250,
        "y": 100,
        "wires": []
    },
    {
        "id": "ccf77a386d6afdb1",
        "type": "debug",
        "z": "3968f5792af364de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 340,
        "wires": []
    },
    {
        "id": "bcb48af62a6314d3",
        "type": "json",
        "z": "3968f5792af364de",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 850,
        "y": 380,
        "wires": [
            [
                "ccf77a386d6afdb1",
                "7cc70ad33a74db3e"
            ]
        ]
    },
    {
        "id": "54931d388d71eb79",
        "type": "debug",
        "z": "3968f5792af364de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "42d44fa7c3361f83",
        "type": "function",
        "z": "3968f5792af364de",
        "name": "radiosport.live qso data",
        "func": "\n\n\nmsg.original.type = \"qso\";\nmsg.original.homelat = [global.get(\"homelat\")];\nmsg.original.homelon = [global.get(\"homelon\")];\nmsg.original.qsolat = [msg.payload.lat];\nmsg.original.qsolon = [msg.payload.lon];\nmsg.original.distance_km = [msg.payload.km];\nmsg.original.distance_miles = [msg.payload.distance_miles];\n\nmsg.payload = msg.original;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 380,
        "wires": [
            [
                "54931d388d71eb79",
                "bcb48af62a6314d3"
            ]
        ]
    },
    {
        "id": "508fa6db79205795",
        "type": "udp out",
        "z": "3968f5792af364de",
        "name": "",
        "addr": "144.202.50.198",
        "iface": "",
        "port": "12061",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1240,
        "y": 380,
        "wires": []
    },
    {
        "id": "da61edac06f1db38",
        "type": "function",
        "z": "3968f5792af364de",
        "name": "radiosport.live home data",
        "func": "let homelat = global.get(\"homelat\");\nlet homelon = global.get(\"homelon\");\nlet contestcall = global.get(\"contestcallsign\");\nlet currentQrate = global.get(\"currentQrate\");\nlet radio1rate = global.get(\"#radio1rate\");\nlet radio2rate = global.get(\"#radio2rate\");\n\nmsg.payload = {\n    \"type\":\"home\",\n    \"contestcall\":contestcall,\n    \"currentqrate\":currentQrate,\n    \"op\":msg.payload.op,\n    \"band\":msg.payload.band,\n    \"mode\":msg.payload.band,\n    \"section\":msg.payload.section,\n    \"homelat\":homelat,\n    \"homelon\":homelon,\n    \"radio1rate\":radio1rate,\n    \"radio2rate\":radio2rate\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 420,
        "wires": [
            [
                "b631127b17805704"
            ]
        ]
    },
    {
        "id": "e142261fff9cee08",
        "type": "debug",
        "z": "3968f5792af364de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 320,
        "wires": []
    },
    {
        "id": "b631127b17805704",
        "type": "delay",
        "z": "3968f5792af364de",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 420,
        "wires": [
            [
                "bcb48af62a6314d3",
                "2f5cf65419073efa"
            ]
        ]
    },
    {
        "id": "ec08c4c0b055d4fe",
        "type": "link in",
        "z": "3968f5792af364de",
        "name": "Radiosport Radio IN",
        "links": [
            "15fa6dac50ec3359",
            "3e86130caa4f1f80"
        ],
        "x": 255,
        "y": 600,
        "wires": [
            [
                "d1c86a13d02bc955"
            ]
        ]
    },
    {
        "id": "e7d6e6ba63fea092",
        "type": "debug",
        "z": "3968f5792af364de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 540,
        "wires": []
    },
    {
        "id": "d1c86a13d02bc955",
        "type": "function",
        "z": "3968f5792af364de",
        "name": "radiosport.live radio data",
        "func": "msg.original = msg.payload;\n\ncontestcallsign = global.get(\"contestcallsign\");\n\nmsg.original.RadioInfo.contestcallsign = [contestcallsign];\nmsg.original.type = \"radio\"\n\nmsg.payload = msg.original;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 600,
        "wires": [
            [
                "207636eeb861d24a",
                "e7d6e6ba63fea092"
            ]
        ]
    },
    {
        "id": "207636eeb861d24a",
        "type": "delay",
        "z": "3968f5792af364de",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 600,
        "wires": [
            [
                "d3ebf7655158fdc9"
            ]
        ]
    },
    {
        "id": "46597bbb893f9a11",
        "type": "debug",
        "z": "3968f5792af364de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 520,
        "wires": []
    },
    {
        "id": "d3ebf7655158fdc9",
        "type": "json",
        "z": "3968f5792af364de",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 850,
        "y": 600,
        "wires": [
            [
                "46597bbb893f9a11",
                "34159e15a003b83e"
            ]
        ]
    },
    {
        "id": "b5e6b3c2f3728989",
        "type": "udp out",
        "z": "3968f5792af364de",
        "name": "",
        "addr": "144.202.50.198",
        "iface": "",
        "port": "12061",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1240,
        "y": 600,
        "wires": []
    },
    {
        "id": "2f5cf65419073efa",
        "type": "debug",
        "z": "3968f5792af364de",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 320,
        "wires": []
    },
    {
        "id": "dee918ea1d22ebe9",
        "type": "comment",
        "z": "3968f5792af364de",
        "name": "QSO & Home Data",
        "info": "",
        "x": 320,
        "y": 280,
        "wires": []
    },
    {
        "id": "c78fefeefe826f96",
        "type": "comment",
        "z": "3968f5792af364de",
        "name": "Radio Data",
        "info": "",
        "x": 290,
        "y": 540,
        "wires": []
    },
    {
        "id": "232d36733b246d85",
        "type": "comment",
        "z": "3968f5792af364de",
        "name": "Sending to Radiosport.live via UDP",
        "info": "",
        "x": 1620,
        "y": 400,
        "wires": []
    },
    {
        "id": "8fef24f610992b8e",
        "type": "gate",
        "z": "3968f5792af364de",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": true,
        "storeName": "memory",
        "x": 830,
        "y": 180,
        "wires": [
            [
                "3b6d91307549713b"
            ]
        ]
    },
    {
        "id": "7cc70ad33a74db3e",
        "type": "gate",
        "z": "3968f5792af364de",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": true,
        "storeName": "memory",
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "508fa6db79205795"
            ]
        ]
    },
    {
        "id": "34159e15a003b83e",
        "type": "gate",
        "z": "3968f5792af364de",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "defaultCmd": "default",
        "statusCmd": "status",
        "persist": true,
        "storeName": "memory",
        "x": 1010,
        "y": 600,
        "wires": [
            [
                "b5e6b3c2f3728989"
            ]
        ]
    },
    {
        "id": "5e4d47c711482436",
        "type": "debug",
        "z": "1acc5730a82cbfc7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "021703c7316a1e27",
        "type": "ui_form",
        "z": "1acc5730a82cbfc7",
        "name": "Log Window Radio 1",
        "label": "",
        "group": "81e8affa751a7503",
        "order": 3,
        "width": "18",
        "height": "5",
        "options": [
            {
                "label": "Call",
                "value": "call",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Exchange",
                "value": "exchange",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Comment",
                "value": "comment",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "call": "",
            "exchange": "",
            "comment": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "clear",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 280,
        "y": 100,
        "wires": [
            [
                "808f2658365d7b53"
            ]
        ]
    },
    {
        "id": "808f2658365d7b53",
        "type": "function",
        "z": "1acc5730a82cbfc7",
        "name": "To Upper Case",
        "func": "if (msg.payload.op != null)\n{\n    msg.payload.op = msg.payload.op.toUpperCase();\n}\n\nif (msg.payload.call != null)\n{\n    msg.payload.call = msg.payload.call.toUpperCase();\n}\n\nif (msg.payload.exchange != null)\n{\n    msg.payload.exchange = msg.payload.exchange.toUpperCase();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 100,
        "wires": [
            [
                "5e4d47c711482436"
            ]
        ]
    },
    {
        "id": "0d4939fd1b443df7",
        "type": "ui_worldmap",
        "z": "1acc5730a82cbfc7",
        "group": "ccc9bbbb7e8b28a7",
        "order": 1,
        "width": 18,
        "height": 12,
        "name": "Worked QSOs Map Radio 1",
        "lat": "40.3426",
        "lon": "-92.8554",
        "zoom": "4",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/radio_1_qsos",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,OSMH,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 900,
        "y": 380,
        "wires": []
    },
    {
        "id": "835468c5369f80a6",
        "type": "ui_table",
        "z": "1acc5730a82cbfc7",
        "group": "cb8b64280b7ce16e",
        "name": "",
        "order": 1,
        "width": 36,
        "height": 15,
        "columns": [
            {
                "field": "date",
                "title": "Date",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "time",
                "title": "Z Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "op",
                "title": "Operator",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "call",
                "title": "Logged QSO",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "exchange",
                "title": "Exchange",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "contest",
                "title": "Contest",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1220,
        "y": 300,
        "wires": []
    },
    {
        "id": "06abd170778921c0",
        "type": "ui_worldmap",
        "z": "1acc5730a82cbfc7",
        "group": "e0bfac7798af6224",
        "order": 1,
        "width": 18,
        "height": 12,
        "name": "Worked QSOs Map Radio 2",
        "lat": "40.3426",
        "lon": "-92.8554",
        "zoom": "4",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/radio_2_qsos",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,OSMH,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 900,
        "y": 480,
        "wires": []
    },
    {
        "id": "dcc66a0ffc77f407",
        "type": "inject",
        "z": "1acc5730a82cbfc7",
        "name": "Inject Home Icon",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 850,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "8b0b0d14d9dda579",
        "type": "function",
        "z": "1acc5730a82cbfc7",
        "name": "Inject Home",
        "func": "let lat = global.get('homelat');\nlet lon = global.get('homelon');\n\nreturn {payload : {name:\"home\", lat:lat, lon:lon, icon:\"fa-home\", layer:\"Home\"}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 440,
        "wires": [
            [
                "0d4939fd1b443df7",
                "06abd170778921c0"
            ]
        ]
    },
    {
        "id": "ef4061add664155b",
        "type": "inject",
        "z": "1acc5730a82cbfc7",
        "name": "Inject Legend",
        "props": [
            {
                "p": "payload.command",
                "v": "{ \"legend\": \"<b>Band Pin Color</b></br> <i style=\\\"background: #00FF00\\\"></i> 2M<br> <i style=\\\"background: #FFFFFF\\\"></i> 6M<br> <i style=\\\"background: #FF8C00\\\"></i> 10M<br> <i style=\\\"background: #FFFF00\\\"></i> 15M<br> <i style=\\\"background: #FF0000\\\"></i> 20M<br> <i style=\\\"background: #0000FF\\\"></i> 40M<br> <i style=\\\"background: #008000\\\"></i> 80M<br> <i style=\\\"background: #800080\\\"></i> 160M<br> <i style=\\\"background: #000000\\\"></i> Else<br> \" }",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 560,
        "y": 480,
        "wires": [
            [
                "0d4939fd1b443df7",
                "06abd170778921c0"
            ]
        ]
    },
    {
        "id": "f3117ed04c2dd2ff",
        "type": "link in",
        "z": "1acc5730a82cbfc7",
        "name": "",
        "links": [
            "4320ff577c7cb858"
        ],
        "x": 435,
        "y": 320,
        "wires": [
            [
                "f2c3d24d797e17f4"
            ]
        ]
    },
    {
        "id": "f2c3d24d797e17f4",
        "type": "switch",
        "z": "1acc5730a82cbfc7",
        "name": "Station Name",
        "property": "payload.contactinfo.StationName[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PC1",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC2",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 340,
        "wires": [
            [
                "0d4939fd1b443df7"
            ],
            [
                "06abd170778921c0"
            ]
        ]
    },
    {
        "id": "bf0a5331052b7fab",
        "type": "ui_text",
        "z": "1acc5730a82cbfc7",
        "group": "9acb32ddd0144d0f",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "Radio 2 Operator WAC",
        "label": "<font size = 5>Operator",
        "format": "<font size = 40 font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1460,
        "y": 900,
        "wires": []
    },
    {
        "id": "2dce50188ca09ef4",
        "type": "switch",
        "z": "1acc5730a82cbfc7",
        "name": "Station Name",
        "property": "payload.RadioInfo.StationName[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PC1",
                "vt": "global"
            },
            {
                "t": "eq",
                "v": "PC2",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 820,
        "wires": [
            [
                "86950fd353197ba7",
                "c96642834818d2a9",
                "1f81f53556dacaa7",
                "0cd3112afd5d6d5e"
            ],
            [
                "bf0a5331052b7fab",
                "7dd0c082685c4b0d",
                "8292be93f0d40e09",
                "a1c2798293e18138"
            ]
        ]
    },
    {
        "id": "86950fd353197ba7",
        "type": "function",
        "z": "1acc5730a82cbfc7",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 820,
        "wires": [
            [
                "0fc4c3d34a12f7a1"
            ]
        ]
    },
    {
        "id": "7dd0c082685c4b0d",
        "type": "function",
        "z": "1acc5730a82cbfc7",
        "name": "Get Spot Freq",
        "func": "let x = msg.payload.RadioInfo.TXFreq[0];\nlet len = x.length;\n\n\nif (len == 7)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,5);\n    let last = runfreq.substr(5,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n\n}\nif (len == 6)\n{\n    let runfreq = msg.payload.RadioInfo.TXFreq[0];\n\n    let first = runfreq.substr(0,4);\n    let last = runfreq.substr(4,1);\n    let freq = first+'.'+last;\n\nlet spot = {payload: freq};\nreturn spot; \n   \n}\nelse\n{\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 860,
        "wires": [
            [
                "b7e4e85982983c1d"
            ]
        ]
    },
    {
        "id": "b7e4e85982983c1d",
        "type": "ui_text",
        "z": "1acc5730a82cbfc7",
        "group": "9acb32ddd0144d0f",
        "order": 2,
        "width": 5,
        "height": 2,
        "name": "Radio 2 Freq",
        "label": "<font size = 5>Freq",
        "format": "<font size = 40 font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1630,
        "y": 860,
        "wires": []
    },
    {
        "id": "c96642834818d2a9",
        "type": "function",
        "z": "1acc5730a82cbfc7",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 700,
        "wires": [
            [
                "2d3aa2841dfaac62"
            ]
        ]
    },
    {
        "id": "633014cf1bf22985",
        "type": "ui_text",
        "z": "1acc5730a82cbfc7",
        "group": "9acb32ddd0144d0f",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "Radio 2 Status WAC",
        "label": "<font size = 5>Status",
        "format": "<font size = 40 font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1460,
        "y": 980,
        "wires": []
    },
    {
        "id": "8292be93f0d40e09",
        "type": "ui_text",
        "z": "1acc5730a82cbfc7",
        "group": "9acb32ddd0144d0f",
        "order": 3,
        "width": 3,
        "height": 2,
        "name": "Radio 2 Mode WAC",
        "label": "<font size = 5>Mode",
        "format": "<font size = 40 font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1450,
        "y": 940,
        "wires": []
    },
    {
        "id": "a1c2798293e18138",
        "type": "function",
        "z": "1acc5730a82cbfc7",
        "name": "Get Status",
        "func": "let x = msg.payload.RadioInfo.IsRunning[0];\n\nif (x == \"True\")\n{\n    let status = \"Run\";\n\nlet msg = {payload: status};\nreturn msg; \n\n}\nif (x == \"False\")\n{\n    let status = \"S&P\";\n\nlet msg = {payload: status};\nreturn msg; \n   \n}\nelse\n{\n    let status = \"Unknown\";\n    \nlet msg = {payload: status};\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 980,
        "wires": [
            [
                "633014cf1bf22985"
            ]
        ]
    },
    {
        "id": "e5c3a3c29d749481",
        "type": "switch",
        "z": "1acc5730a82cbfc7",
        "name": "Radio 1 or 2?",
        "property": "payload.RadioInfo.RadioNr[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 940,
        "wires": [
            [
                "86950fd353197ba7",
                "c96642834818d2a9",
                "1f81f53556dacaa7",
                "0cd3112afd5d6d5e"
            ],
            [
                "bf0a5331052b7fab",
                "7dd0c082685c4b0d",
                "8292be93f0d40e09",
                "a1c2798293e18138"
            ]
        ]
    },
    {
        "id": "2d3aa2841dfaac62",
        "type": "ui_text",
        "z": "1acc5730a82cbfc7",
        "group": "9189f146c1798eef",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "Radio 1 Status WAC",
        "label": "<font size = 5>Status",
        "format": "<font size = 40 font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1440,
        "y": 700,
        "wires": []
    },
    {
        "id": "1f81f53556dacaa7",
        "type": "ui_text",
        "z": "1acc5730a82cbfc7",
        "group": "9189f146c1798eef",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "Radio 1 Operator WAC",
        "label": "<font size = 5>Operator",
        "format": "<font size = 40 font color={{msg.color}}>{{msg.payload.RadioInfo.OpCall[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1440,
        "y": 780,
        "wires": []
    },
    {
        "id": "0fc4c3d34a12f7a1",
        "type": "ui_text",
        "z": "1acc5730a82cbfc7",
        "group": "9189f146c1798eef",
        "order": 2,
        "width": 5,
        "height": 2,
        "name": "Radio 1 Freq WAC",
        "label": "<font size = 5>Freq",
        "format": "<font size = 40 font color={{msg.color}}>{{msg.payload}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1650,
        "y": 820,
        "wires": []
    },
    {
        "id": "0cd3112afd5d6d5e",
        "type": "ui_text",
        "z": "1acc5730a82cbfc7",
        "group": "9189f146c1798eef",
        "order": 3,
        "width": 3,
        "height": 2,
        "name": "Radio 1 Mode WAC",
        "label": "<font size = 5>Mode",
        "format": "<font size = 40 font color={{msg.color}}>{{payload.RadioInfo.Mode[0]}}</font>",
        "layout": "col-center",
        "className": "",
        "x": 1430,
        "y": 740,
        "wires": []
    },
    {
        "id": "254a70483d8805dc",
        "type": "link in",
        "z": "1acc5730a82cbfc7",
        "name": "",
        "links": [
            "3e86130caa4f1f80"
        ],
        "x": 715,
        "y": 820,
        "wires": [
            [
                "2dce50188ca09ef4"
            ]
        ]
    },
    {
        "id": "935c9a16abfdf6b5",
        "type": "link in",
        "z": "1acc5730a82cbfc7",
        "name": "",
        "links": [
            "15fa6dac50ec3359"
        ],
        "x": 715,
        "y": 940,
        "wires": [
            [
                "e5c3a3c29d749481"
            ]
        ]
    },
    {
        "id": "31bfa8df7d22233b",
        "type": "debug",
        "z": "1acc5730a82cbfc7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "0e5779d2ab52e631",
        "type": "ui_form",
        "z": "1acc5730a82cbfc7",
        "name": "Log Windown Radio 2",
        "label": "",
        "group": "31fa72ab1ae3828f",
        "order": 3,
        "width": "18",
        "height": "5",
        "options": [
            {
                "label": "Call",
                "value": "call",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Exchange",
                "value": "exchange",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Comment",
                "value": "comment",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "call": "",
            "exchange": "",
            "comment": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "clear",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 280,
        "y": 160,
        "wires": [
            [
                "7c4c1ae36f7719f6"
            ]
        ]
    },
    {
        "id": "7c4c1ae36f7719f6",
        "type": "function",
        "z": "1acc5730a82cbfc7",
        "name": "To Upper Case",
        "func": "if (msg.payload.op != null)\n{\n    msg.payload.op = msg.payload.op.toUpperCase();\n}\n\nif (msg.payload.call != null)\n{\n    msg.payload.call = msg.payload.call.toUpperCase();\n}\n\nif (msg.payload.exchange != null)\n{\n    msg.payload.exchange = msg.payload.exchange.toUpperCase();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 160,
        "wires": [
            [
                "31bfa8df7d22233b"
            ]
        ]
    },
    {
        "id": "e4eed7024d3622a5",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "UTF8",
        "func": "msg.payload=msg.payload.toString('UTF8');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 400,
        "wires": [
            [
                "30e1a46d12dc5f35"
            ]
        ]
    },
    {
        "id": "1ebfe3ebc5bf8590",
        "type": "debug",
        "z": "8a7fcbcd28d37f15",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1490,
        "y": 160,
        "wires": []
    },
    {
        "id": "202712a1bbc4f0f5",
        "type": "tcp request",
        "z": "8a7fcbcd28d37f15",
        "name": "N3FJP TCP Connection",
        "server": "10.25.0.30",
        "port": "1100",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "x": 1030,
        "y": 340,
        "wires": [
            [
                "85c1dc7164266f2e"
            ]
        ]
    },
    {
        "id": "cf6f7be54da33e10",
        "type": "inject",
        "z": "8a7fcbcd28d37f15",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "25",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "053d751488b839b5",
        "type": "template",
        "z": "8a7fcbcd28d37f15",
        "name": "",
        "field": "n3fjp.udp.contact",
        "fieldType": "global",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<contactinfo>\n    <app>N3FJP</app>\n    <contestname></contestname>\n    <contestnr></contestnr>\n    <timestamp>{{payload.ENTEREVENT.QSO_DATE}}_{{payload.ENTEREVENT.TIME_ON}}</timestamp>\n    <mycall>{{global.n3fjp.GETUSERSETTINGSRESPONSE.CALLSIGN}}</mycall>\n    <band>{{payload.ENTEREVENT.BAND}}</band>\n    <rxfreq>{{global.n3fjp.READBMFRESPONSE.FREQ}}</rxfreq>\n    <txfreq>{{global.n3fjp.READBMFRESPONSE.FREQ]}}}</txfreq>\n    <operator>{{flow.operatorcall}}</operator>\n    <mode>{{payload.ENTEREVENT.MODE}}</mode>\n    <call>{{payload.ENTEREVENT.CALL}}</call>\n    <countryprefix></countryprefix>\n    <wpxprefix>{{global.n3fjp.CALLTABEVENT.PFX}}</wpxprefix>\n    <stationprefix></stationprefix>\n    <continent>{{payload.ENTEREVENT.CONT}}</continent>\n    <snt></snt>\n    <sntnr></sntnr>\n    <rcv></rcv>\n    <rcvnr></rcvnr>\n    <gridsquare></gridsquare>\n    <exchangel></exchangel>\n    <section></section>\n    <comment></comment>\n    <qth></qth>\n    <name></name>\n    <power></power>\n    <misctext></misctext>\n    <zone></zone>\n    <prec></prec>\n    <ck></ck>\n    <ismultiplierl></ismultiplierl>\n    <ismultiplier2></ismultiplier2>\n    <ismultiplier3></ismultiplier3>\n    <points></points>\n    <radionr></radionr>\n    <run1run2></run1run2>\n    <RoverLocation></RoverLocation>\n    <RadioInterfaced></RadioInterfaced>\n    <NetworkedCompNr></NetworkedCompNr>\n    <IsOriginal></IsOriginal>\n    <NetBiosName></NetBiosName>\n    <IsRunQSO></IsRunQSO>\n    <StationName></StationName>\n    <ID></ID>\n    <IsClaimedQSO>TRUE</IsClaimedQSO>\n</contactinfo>\n",
        "output": "str",
        "x": 1860,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "0db757f6483493e8",
        "type": "switch",
        "z": "8a7fcbcd28d37f15",
        "name": "Split for Dashboard Topics",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "GETUSERSETTINGSRESPONSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "READBMFRESPONSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "KEYDOWN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ENTEREVENT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "QSORATERESPONSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "QSOCOUNTRESPONSE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CALLTABEVENT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "LIST",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 1570,
        "y": 380,
        "wires": [
            [
                "73660e63a8e4f9b5"
            ],
            [
                "dc3e34ab165d368a"
            ],
            [
                "0897917f366ec6b0"
            ],
            [
                "053d751488b839b5"
            ],
            [
                "30044284637aaab7"
            ],
            [
                "2b0943ab47ad8ff7"
            ],
            [
                "0e6f9029fd83c5ac"
            ],
            [
                "e298e0630c633450"
            ]
        ],
        "outputLabels": [
            "",
            "Radio",
            "Macros",
            "Contacts",
            "",
            "",
            "",
            ""
        ]
    },
    {
        "id": "5c3095bc3a4ea9de",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "CLEAR MACRO",
        "func": "msg.payload;\nglobal.n3fjp.KEYDOWN=\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2300,
        "y": 300,
        "wires": [
            [
                "0820988fa43b8a4b",
                "050a55975cb170be"
            ]
        ]
    },
    {
        "id": "0820988fa43b8a4b",
        "type": "link out",
        "z": "8a7fcbcd28d37f15",
        "name": "Radio_N3FJP",
        "mode": "link",
        "links": [
            "6176c210be856fa7"
        ],
        "x": 2500,
        "y": 300,
        "wires": [],
        "l": true
    },
    {
        "id": "47245c8acbda8034",
        "type": "link out",
        "z": "8a7fcbcd28d37f15",
        "name": "N3FJP_ Contacts",
        "mode": "link",
        "links": [
            "21fe16ca5cbfc06b"
        ],
        "x": 2470,
        "y": 580,
        "wires": [],
        "l": true
    },
    {
        "id": "050a55975cb170be",
        "type": "debug",
        "z": "8a7fcbcd28d37f15",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2520,
        "y": 240,
        "wires": []
    },
    {
        "id": "171b5f61e95c8f53",
        "type": "debug",
        "z": "8a7fcbcd28d37f15",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 640,
        "wires": []
    },
    {
        "id": "7f2aeaade7ae7f0d",
        "type": "inject",
        "z": "8a7fcbcd28d37f15",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "<CMD><SETUPDATESTATE><VALUE>TRUE</VALUE></CMD>",
        "payloadType": "str",
        "x": 710,
        "y": 420,
        "wires": [
            [
                "ce908f1c75618192"
            ]
        ]
    },
    {
        "id": "ce908f1c75618192",
        "type": "tcp out",
        "z": "8a7fcbcd28d37f15",
        "name": "",
        "host": "10.25.0.30",
        "port": "1100",
        "beserver": "client",
        "base64": false,
        "end": true,
        "x": 900,
        "y": 460,
        "wires": []
    },
    {
        "id": "85c1dc7164266f2e",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "Reformat all to XML",
        "func": "var backup=msg.payload;\nmsg.payload=msg.payload.replace(\"<CMD>\",\"\");\nvar right_mark=msg.payload.search(\">\");\nmsg.topic=msg.payload.substring(1,msg.payload.search(\">\"));\nmsg.payload=msg.payload.replace(\"CMD\",msg.topic);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 340,
        "wires": [
            [
                "e4eed7024d3622a5"
            ]
        ]
    },
    {
        "id": "30e1a46d12dc5f35",
        "type": "xml",
        "z": "8a7fcbcd28d37f15",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 1370,
        "y": 400,
        "wires": [
            [
                "0db757f6483493e8",
                "1ebfe3ebc5bf8590"
            ]
        ]
    },
    {
        "id": "0897917f366ec6b0",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "Store Macro",
        "func": "global.n3fjp.KEYDOWN=msg.payload.KEYDOWN[0];\nmsg.payload=\"<CMD><READBMF></CMD>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 340,
        "wires": [
            [
                "62eb0aa317a6c1c8"
            ]
        ]
    },
    {
        "id": "62eb0aa317a6c1c8",
        "type": "tcp out",
        "z": "8a7fcbcd28d37f15",
        "name": "CALL BMF",
        "host": "10.25.0.30",
        "port": "1100",
        "beserver": "client",
        "base64": false,
        "end": false,
        "x": 2290,
        "y": 340,
        "wires": []
    },
    {
        "id": "47c8c03f861b6051",
        "type": "change",
        "z": "8a7fcbcd28d37f15",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "N3FJP",
                "pt": "global",
                "to": "\"\"",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "202712a1bbc4f0f5"
            ]
        ]
    },
    {
        "id": "dc3e34ab165d368a",
        "type": "switch",
        "z": "8a7fcbcd28d37f15",
        "name": "Operator Call",
        "property": "GETUSERSETTINGSRESPONSE.OPERATOR",
        "propertyType": "flow",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1870,
        "y": 300,
        "wires": [
            [
                "d2bce0b816f6dfa9"
            ],
            [
                "b9f582c9e21d35ee"
            ]
        ]
    },
    {
        "id": "788e5b117a514c91",
        "type": "tcp out",
        "z": "8a7fcbcd28d37f15",
        "name": "Call User Settings",
        "host": "10.25.0.30",
        "port": "1100",
        "beserver": "client",
        "base64": false,
        "end": false,
        "x": 2310,
        "y": 260,
        "wires": []
    },
    {
        "id": "d2bce0b816f6dfa9",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "CALL for Operator",
        "func": "msg.payload=\"<CMD><GETUSERSETTINGS></CMD>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 260,
        "wires": [
            [
                "788e5b117a514c91"
            ]
        ]
    },
    {
        "id": "73660e63a8e4f9b5",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "Store User Info",
        "func": "global.n3fjp.GETUSERSETTINGSRESPONSE.json=msg.payload.GETUSERSETTINGSRESPONSE[0];\nmsg.payload=\"<CMD><READBMF></CMD>\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 220,
        "wires": [
            [
                "de08a89678f68878"
            ]
        ]
    },
    {
        "id": "de08a89678f68878",
        "type": "tcp out",
        "z": "8a7fcbcd28d37f15",
        "name": "Call BMF",
        "host": "10.25.0.30",
        "port": "1100",
        "beserver": "client",
        "base64": false,
        "end": false,
        "x": 2280,
        "y": 220,
        "wires": []
    },
    {
        "id": "2b0943ab47ad8ff7",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "QSO Count",
        "func": "global.n3fjp[msg.topic]=msg.payload[msg.topic][0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "e298e0630c633450",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "Last Contact",
        "func": "global.n3fjp.LIST=msg.payload.LIST[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "0e6f9029fd83c5ac",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "Call Lookup (TAB)",
        "func": "global.n3fjp.CALLTABEVENT=msg.payload.CALLTABEVENT[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 540,
        "wires": [
            [
                "328d095147634613"
            ]
        ]
    },
    {
        "id": "30044284637aaab7",
        "type": "function",
        "z": "8a7fcbcd28d37f15",
        "name": "QSO Rate/Score",
        "func": "global.n3fjp[msg.topic]=msg.payload[msg.topic][0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "328d095147634613",
        "type": "tcp out",
        "z": "8a7fcbcd28d37f15",
        "name": "Call BMF",
        "host": "10.25.0.30",
        "port": "1100",
        "beserver": "client",
        "base64": false,
        "end": false,
        "x": 2280,
        "y": 540,
        "wires": []
    },
    {
        "id": "b9f582c9e21d35ee",
        "type": "template",
        "z": "8a7fcbcd28d37f15",
        "name": "",
        "field": "n3fjp.udp.radio",
        "fieldType": "global",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RadioInfo>\n    <app>N3FJP</app>\n    <StationName></StationName>\n    <RadioNr></RadioNr>\n    <Freq>{{payload.ENTEREVENT.FREQ}}</Freq>\n    <TXFreq>{{payload.ENTEREVENT.FREQ}}</TXFreq>\n    <Mode>{{payload.ENTEREVENT.MODE}}</Mode>\n    <OpCall>{{payload.GETUSERSETTINGS.OPERATOR}}</OpCall>\n    <IsRunning></IsRunning>\n    <FocusEntry></FocusEntry>\n    <EntryWindowHwnd></EntryWindowHwnd>\n    <Antenna></Antenna>\n    <Rotors></Rotors>\n    <FocusRadioNr></FocusRadioNr>\n    <IsStereo></IsStereo>\n    <IsSplit></IsSplit>\n    <ActiveRadioNr></ActiveRadioNr>\n    <IsTransmitting></IsTransmitting>\n    <FunctionKeyCaption>{{global.n3fjp.KEYDOWN.KEYCODE[0]}}</FunctionKeyCaption>\n    <RadioName></RadioName>\n    <AuxAntSelected>-</AuxAntSelected>\n    <AuxAntSelectedName></AuxAntSelectedName>\n    <IsConnected>TRUE</IsConnected>\n</RadioInfo>",
        "output": "str",
        "x": 2060,
        "y": 300,
        "wires": [
            [
                "5c3095bc3a4ea9de"
            ]
        ]
    },
    {
        "id": "f6dcf7276d984efc",
        "type": "link out",
        "z": "8a7fcbcd28d37f15",
        "name": "Score_N3FJP",
        "mode": "link",
        "links": [
            "6176c210be856fa7",
            "39b7ba7404fb4193"
        ],
        "x": 2500,
        "y": 420,
        "wires": [],
        "l": true
    },
    {
        "id": "43d361d9eba3f06e",
        "type": "tcp out",
        "z": "8a7fcbcd28d37f15",
        "name": "",
        "host": "${Connect_IP}",
        "port": "12060",
        "beserver": "client",
        "base64": false,
        "end": false,
        "x": 1030,
        "y": 500,
        "wires": []
    }
]